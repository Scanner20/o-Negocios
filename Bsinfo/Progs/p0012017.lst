* *********************************************************
* *
* * 23/03/17             P0012017.DBC             19:53:26
* *
* *********************************************************
* *
* * Description:
* * This program was automatically generated by GENDBC
* * Version 2.26.67
* *
* *********************************************************
PARAMETERS PsNomBdAno,PsNomCia

DisplayStatus([Creating database...])
CLOSE DATA ALL
CREATE DATABASE PsNomBDAno+'.DBC'
DisplayStatus([Creating table ALMCATAL...])
MakeTable_ALMCATAL()
DisplayStatus([Creating table CPIQO_TB...])
MakeTable_CPIQO_TB()
DisplayStatus([Creating table ALMCDOCM...])
MakeTable_ALMCDOCM()
DisplayStatus([Creating table ALMCFTRA...])
MakeTable_ALMCFTRA()
DisplayStatus([Creating table CBDDRMOV...])
MakeTable_CBDDRMOV()
DisplayStatus([Creating table CBDMPART...])
MakeTable_CBDMPART()
DisplayStatus([Creating table CBDRPART...])
MakeTable_CBDRPART()
DisplayStatus([Creating table CBDTCIER...])
MakeTable_CBDTCIER()
DisplayStatus([Creating table CBDTOPER...])
MakeTable_CBDTOPER()
DisplayStatus([Creating table CBDVMOVM...])
MakeTable_CBDVMOVM()
DisplayStatus([Creating table CPICDOCM...])
MakeTable_CPICDOCM()
DisplayStatus([Creating table CPICO_TB...])
MakeTable_CPICO_TB()
DisplayStatus([Creating table CPICULTI...])
MakeTable_CPICULTI()
DisplayStatus([Creating table CPICUXLT...])
MakeTable_CPICUXLT()
DisplayStatus([Creating table CPIDO_TB...])
MakeTable_CPIDO_TB()
DisplayStatus([Creating table CPIMO_TB...])
MakeTable_CPIMO_TB()
DisplayStatus([Creating table CPIPO_TB...])
MakeTable_CPIPO_TB()
DisplayStatus([Creating table FCJCROPL...])
MakeTable_FCJCROPL()
DisplayStatus([Creating table FCJTCPLA...])
MakeTable_FCJTCPLA()
DisplayStatus([Creating table FLCJDOCC...])
MakeTable_FLCJDOCC()
DisplayStatus([Creating table FLCLIQUI...])
MakeTable_FLCLIQUI()
DisplayStatus([Creating table ALMDLOTE...])
MakeTable_ALMDLOTE()
DisplayStatus([Creating table ALMCATGE...])
MakeTable_ALMCATGE()
DisplayStatus([Creating table CBDRMOVM...])
MakeTable_CBDRMOVM()
DisplayStatus([Creating table CBDACMCT...])
MakeTable_CBDACMCT()
DisplayStatus([Creating table PLNBLP11...])
MakeTable_PLNBLP11()
DisplayStatus([Creating table PLNBLP22...])
MakeTable_PLNBLP22()
DisplayStatus([Creating table PLNBLPG2...])
MakeTable_PLNBLPG2()
DisplayStatus([Creating table PLNCFGP1...])
MakeTable_PLNCFGP1()
DisplayStatus([Creating table PLNCFGP2...])
MakeTable_PLNCFGP2()
DisplayStatus([Creating table PLNDCCTE...])
MakeTable_PLNDCCTE()
DisplayStatus([Creating table PLNDECTS...])
MakeTable_PLNDECTS()
DisplayStatus([Creating table PLNDJUDI...])
MakeTable_PLNDJUDI()
DisplayStatus([Creating table PLNDMOVT...])
MakeTable_PLNDMOVT()
DisplayStatus([Creating table PLNEMOVT...])
MakeTable_PLNEMOVT()
DisplayStatus([Creating table PLNMASIT...])
MakeTable_PLNMASIT()
DisplayStatus([Creating table PLNMPERS...])
MakeTable_PLNMPERS()
DisplayStatus([Creating table PLNMTSEM...])
MakeTable_PLNMTSEM()
DisplayStatus([Creating table PLNPERIO...])
MakeTable_PLNPERIO()
DisplayStatus([Creating table PLNTDIAS...])
MakeTable_PLNTDIAS()
DisplayStatus([Creating table PLNTMOV2...])
MakeTable_PLNTMOV2()
DisplayStatus([Creating table PLNTPERI...])
MakeTable_PLNTPERI()
DisplayStatus([Creating table PLNTTCMB...])
MakeTable_PLNTTCMB()
DisplayStatus([Creating table CMPOCPRY...])
MakeTable_CMPOCPRY()
DisplayStatus([Creating table CMPDOANT...])
MakeTable_CMPDOANT()
DisplayStatus([Creating table CMPDC_IM...])
MakeTable_CMPDC_IM()
DisplayStatus([Creating table CMPCOANT...])
MakeTable_CMPCOANT()
DisplayStatus([Creating table ALMDSERI...])
MakeTable_ALMDSERI()
DisplayStatus([Creating table ALMCORRE...])
MakeTable_ALMCORRE()
DisplayStatus([Creating table PLNBLPG1...])
MakeTable_PLNBLPG1()
DisplayStatus([Creating table PLNTMOV1...])
MakeTable_PLNTMOV1()
DisplayStatus([Creating table PLNMPDER...])
MakeTable_PLNMPDER()
DisplayStatus([Creating table CBDMCTAS...])
MakeTable_CBDMCTAS()
DisplayStatus([Creating table ALMCTRAN...])
MakeTable_ALMCTRAN()
DisplayStatus([Creating table ALMDTRAN...])
MakeTable_ALMDTRAN()
DisplayStatus([Creating table ALMCATG2...])
MakeTable_ALMCATG2()
DisplayStatus([Creating view V_MATERIALES_X_ALMACEN...])
MakeView_V_MATERIALES_X_ALMACEN()
DisplayStatus([Creating view V_CULTIVOS_X_LOTE...])
MakeView_V_CULTIVOS_X_LOTE()
DisplayStatus([Creating view V_MATERIALES_X_ALMACEN_2...])
MakeView_V_MATERIALES_X_ALMACEN_2()
DisplayStatus([Creating view V_MATERIALES_SIN_ALMACEN...])
MakeView_V_MATERIALES_SIN_ALMACEN()
DisplayStatus([Creating view V_MATERIALES_X_ALMACEN_3...])
MakeView_V_MATERIALES_X_ALMACEN_3()
DisplayStatus([Creating view V_MOVIMIENTOS_ALMACEN...])
MakeView_V_MOVIMIENTOS_ALMACEN()
DisplayStatus([Creating view V_MATERIALES_X_LOTE...])
MakeView_V_MATERIALES_X_LOTE()
DisplayStatus([Creating view V_REPORTE_GUIA...])
MakeView_V_REPORTE_GUIA()
DisplayStatus([Creating view V_NOTAS_BALANCE...])
MakeView_V_NOTAS_BALANCE()
DisplayStatus([Creating view V_FORMULAS_DESC...])
MakeView_V_FORMULAS_DESC()
DisplayStatus([Creating view V_ALMCATGE...])
MakeView_V_ALMCATGE()
DisplayStatus([Creating view V_NOTAS_EEFF_PRESUPUESTO...])
MakeView_V_NOTAS_EEFF_PRESUPUESTO()
DisplayStatus([Finished.])


********* Procedure Re-Creation *********
IF !FILE(PsNomBDAno+[.krt])
    ? [Warning! No Procedure File Found!]
ELSE
	CLOSE DATABASE
	USE PsNomBDAno+'.DBC'
	g_SetSafety = SET('SAFETY')
	SET SAFETY OFF
	LOCATE FOR Objectname = 'StoredProceduresSource'
	IF FOUND()
        APPEND MEMO Code FROM PsNomBDAno+[.krt] OVERWRITE
	    REPLACE Code WITH SUBSTR(Code, 70, 7843)
	ENDIF
	LOCATE FOR Objectname = 'StoredProceduresObject'
	IF FOUND()
        APPEND MEMO Code FROM PsNomBDAno+[.krt] OVERWRITE
        REPLACE Code WITH SUBSTR(Code, 7913)
	ENDIF
    SET SAFETY &g_SetSafety
	USE
	OPEN DATABASE PsNomBDAno+[.DBC]
ENDIF

FUNCTION MakeTable_ALMCATAL
***** Table setup for ALMCATAL *****
CREATE TABLE 'ALMCATAL.DBF' NAME 'ALMCATAL' (CODSED C(3) NOT NULL, ;
                       SUBALM C(3) NOT NULL, ;
                       CODMAT C(15) NOT NULL, ;
                       UNDVTA C(3) NOT NULL, ;
                       FACEQU N(10, 4) NOT NULL, ;
                       CODUBI C(10) NOT NULL, ;
                       CODSEC C(5) NOT NULL, ;
                       STKACT N(14, 4) NOT NULL, ;
                       STKINV N(14, 4) NOT NULL, ;
                       STKFIS N(14, 4) NOT NULL, ;
                       STKREP N(14, 4) NOT NULL, ;
                       STKINI N(14, 4) NOT NULL, ;
                       PINIMN N(18, 6) NOT NULL, ;
                       PINIUS N(18, 6) NOT NULL, ;
                       PCTOMN N(16, 4) NOT NULL, ;
                       PCTOUS N(16, 4) NOT NULL, ;
                       FCHING D NOT NULL, ;
                       FCHSAL D NOT NULL, ;
                       FCHINV D NOT NULL, ;
                       SELINV C(1) NOT NULL, ;
                       ORDCMP C(6) NOT NULL, ;
                       VINIMN N(18, 6) NOT NULL, ;
                       VINIUS N(18, 6) NOT NULL, ;
                       VCTOMN N(18, 4) NOT NULL, ;
                       VCTOUS N(18, 4) NOT NULL, ;
                       STKM01 N(14, 4) NOT NULL, ;
                       STKM02 N(14, 4) NOT NULL, ;
                       STKM03 N(14, 4) NOT NULL, ;
                       STKM04 N(14, 4) NOT NULL, ;
                       STKM05 N(14, 4) NOT NULL, ;
                       STKM06 N(14, 4) NOT NULL, ;
                       STKM07 N(14, 4) NOT NULL, ;
                       STKM08 N(14, 4) NOT NULL, ;
                       STKM09 N(14, 4) NOT NULL, ;
                       STKM10 N(14, 4) NOT NULL, ;
                       STKM11 N(14, 4) NOT NULL, ;
                       STKM12 N(14, 4) NOT NULL, ;
                       STK01 N(14, 4) NOT NULL, ;
                       STK02 N(14, 4) NOT NULL, ;
                       STK03 N(14, 4) NOT NULL, ;
                       STK04 N(14, 4) NOT NULL, ;
                       STK05 N(14, 4) NOT NULL, ;
                       STK06 N(14, 4) NOT NULL, ;
                       STK07 N(14, 4) NOT NULL, ;
                       STK08 N(14, 4) NOT NULL, ;
                       STK09 N(14, 4) NOT NULL, ;
                       STK10 N(14, 4) NOT NULL, ;
                       STK11 N(14, 4) NOT NULL, ;
                       STK12 N(14, 4) NOT NULL, ;
                       VMN01 N(14, 4) NOT NULL, ;
                       VMN02 N(14, 4) NOT NULL, ;
                       VMN03 N(14, 4) NOT NULL, ;
                       VMN04 N(14, 4) NOT NULL, ;
                       VMN05 N(14, 4) NOT NULL, ;
                       VMN06 N(14, 4) NOT NULL, ;
                       VMN07 N(14, 4) NOT NULL, ;
                       VMN08 N(14, 4) NOT NULL, ;
                       VMN09 N(14, 4) NOT NULL, ;
                       VMN10 N(14, 4) NOT NULL, ;
                       VMN11 N(14, 4) NOT NULL, ;
                       VMN12 N(14, 4) NOT NULL, ;
                       VUS01 N(14, 4) NOT NULL, ;
                       VUS02 N(14, 4) NOT NULL, ;
                       VUS03 N(14, 4) NOT NULL, ;
                       VUS04 N(14, 4) NOT NULL, ;
                       VUS05 N(14, 4) NOT NULL, ;
                       VUS06 N(14, 4) NOT NULL, ;
                       VUS07 N(14, 4) NOT NULL, ;
                       VUS08 N(14, 4) NOT NULL, ;
                       VUS09 N(14, 4) NOT NULL, ;
                       VUS10 N(14, 4) NOT NULL, ;
                       VUS11 N(14, 4) NOT NULL, ;
                       VUS12 N(14, 4) NOT NULL, ;
                       CODNEW C(15) NOT NULL, ;
                       CODUSER C(8) NOT NULL, ;
                       FCHHORA T NOT NULL)

***** Create each index for ALMCATAL *****
INDEX ON SUBALM+CODMAT TAG CATA01 COLLATE 'MACHINE'
INDEX ON CODMAT+SUBALM TAG CATA02 COLLATE 'MACHINE'

***** Change properties for ALMCATAL *****
ENDFUNC

FUNCTION MakeTable_CPIQO_TB
***** Table setup for CPIQO_TB *****
CREATE TABLE 'CPIQO_TB.DBF' NAME 'CPIQO_TB' (NRODOC C(10) NOT NULL, ;
                       FCHDOC T NOT NULL, ;
                       CODPAR C(8) NOT NULL, ;
                       NROITM N(3, 0) NOT NULL, ;
                       H_INICIO T NOT NULL, ;
                       H_FIN T NOT NULL, ;
                       N_HORA C(20) NOT NULL)

***** Create each index for CPIQO_TB *****
INDEX ON NRODOC TAG QO_T01 COLLATE 'MACHINE'

***** Change properties for CPIQO_TB *****
ENDFUNC

FUNCTION MakeTable_ALMCDOCM
***** Table setup for ALMCDOCM *****
CREATE TABLE 'ALMCDOCM.DBF' NAME 'ALMCDOCM' (SUBALM C(3) NOT NULL, ;
                       CODDOC C(4) NOT NULL, ;
                       DESDOC C(20) NOT NULL, ;
                       NRODOC N(10, 0) NOT NULL, ;
                       TIPMOV C(1) NOT NULL, ;
                       CODMOV C(3) NOT NULL, ;
                       CODFAM C(6) NOT NULL, ;
                       SIGLAS C(4) NOT NULL, ;
                       NDOC00 N(10, 0) NOT NULL, ;
                       NDOC01 N(10, 0) NOT NULL, ;
                       NDOC02 N(10, 0) NOT NULL, ;
                       NDOC03 N(10, 0) NOT NULL, ;
                       NDOC04 N(10, 0) NOT NULL, ;
                       NDOC05 N(10, 0) NOT NULL, ;
                       NDOC06 N(10, 0) NOT NULL, ;
                       NDOC07 N(10, 0) NOT NULL, ;
                       NDOC08 N(10, 0) NOT NULL, ;
                       NDOC09 N(10, 0) NOT NULL, ;
                       NDOC10 N(10, 0) NOT NULL, ;
                       NDOC11 N(10, 0) NOT NULL, ;
                       NDOC12 N(10, 0) NOT NULL, ;
                       NDOC13 N(10, 0) NOT NULL, ;
                       TIPPRO C(4) NOT NULL, ;
                       CODUSER C(8) NOT NULL, ;
                       FCHHORA T NOT NULL, ;
                       CAMPO_ID C(15) NOT NULL, ;
                       ANT_MES N(1, 0) NOT NULL, ;
                       ANT_SERIE N(1, 0) NOT NULL, ;
                       ANT_PTOVTA N(1, 0) NOT NULL, ;
                       VAR_SUF_ID C(10) NOT NULL, ;
                       EVAL_VALOR_PK M NOT NULL, ;
                       T_DESTINO C(30) NOT NULL)

***** Create each index for ALMCDOCM *****
INDEX ON SUBALM+TIPMOV+CODMOV TAG CDOC01 COLLATE 'MACHINE'
INDEX ON CODDOC TAG CDOC02 COLLATE 'MACHINE'
INDEX ON SUBALM+TIPMOV+CODFAM TAG CDOC03 COLLATE 'MACHINE'

***** Change properties for ALMCDOCM *****
ENDFUNC

FUNCTION MakeTable_ALMCFTRA
***** Table setup for ALMCFTRA *****
CREATE TABLE 'ALMCFTRA.DBF' NAME 'ALMCFTRA' (TIPMOV C(1) NOT NULL, ;
                       CODMOV C(3) NOT NULL, ;
                       DESMOV C(37) NOT NULL, ;
                       PIDRF1 L NOT NULL, ;
                       PIDRF2 L NOT NULL, ;
                       PIDRF3 L NOT NULL, ;
                       GLORF1 C(16) NOT NULL, ;
                       GLORF2 C(16) NOT NULL, ;
                       GLORF3 C(16) NOT NULL, ;
                       PIDVEN L NOT NULL, ;
                       PIDCLI L NOT NULL, ;
                       PIDPRO L NOT NULL, ;
                       PIDODT L NOT NULL, ;
                       PIDACTFIJO L NOT NULL, ;
                       PIDPCO L NOT NULL, ;
                       PIDPVT L NOT NULL, ;
                       MODPRE L NOT NULL, ;
                       STKNEG L NOT NULL, ;
                       UNDSTK L NOT NULL, ;
                       UNDVTA L NOT NULL, ;
                       UNDCMP L NOT NULL, ;
                       MODCSM L NOT NULL, ;
                       EXTPCO L NOT NULL, ;
                       MONNAC L NOT NULL, ;
                       MONUSA L NOT NULL, ;
                       MONELG L NOT NULL, ;
                       TRANSF L NOT NULL, ;
                       MOVPRO N(1, 0) NOT NULL, ;
                       CMPEVA C(30) NOT NULL, ;
                       EVALUA M NOT NULL, ;
                       PORP_T L NOT NULL, ;
                       CMPACT1 C(10) NOT NULL, ;
                       CMPACT2 C(10) NOT NULL, ;
                       CMPACT3 C(10) NOT NULL, ;
                       ORDPRO C(2) NOT NULL, ;
                       ORDEN C(3) NOT NULL, ;
                       TPORF1 C(4) NOT NULL, ;
                       TPORF2 C(4) NOT NULL, ;
                       TPORF3 C(4) NOT NULL, ;
                       CORR_U L NOT NULL, ;
                       VALCTB L NOT NULL, ;
                       AFETRA L NOT NULL, ;
                       PIDLOTE L NOT NULL, ;
                       PIDPROCESO L NOT NULL, ;
                       PIDACTIVID L NOT NULL, ;
                       PIDCULTIVO L NOT NULL, ;
                       PIDFASE L NOT NULL, ;
                       CODUSER C(8) NOT NULL, ;
                       FCHHORA T NOT NULL, ;
                       CTOVTA L NOT NULL, ;
                       PIDMOT L NOT NULL, ;
                       ES_IMP L NOT NULL, ;
                       PIDUNC1 L NOT NULL, ;
                       PIDUNC2 L NOT NULL, ;
                       PIDUNC3 L NOT NULL, ;
                       GLOUNC1 C(16) NOT NULL, ;
                       GLOUNC2 C(16) NOT NULL, ;
                       GLOUNC3 C(16) NOT NULL, ;
                       UNDUNC1 C(1) NOT NULL, ;
                       UNDUNC2 C(1) NOT NULL, ;
                       UNDUNC3 C(1) NOT NULL, ;
                       LONUNC1 N(3, 1) NOT NULL, ;
                       LONUNC2 N(3, 1) NOT NULL, ;
                       LONUNC3 N(3, 1) NOT NULL, ;
                       PIDLOTEITM L NOT NULL, ;
                       PIDSERIITM L NOT NULL, ;
                       PIDVTOITM L NOT NULL, ;
                       GLOLOTEITM C(16) NOT NULL, ;
                       GLOSERIITM C(16) NOT NULL, ;
                       GLOVTOITM C(16) NOT NULL, ;
                       PIDFCHFIN L NOT NULL, ;
                       GLOFCHFIN C(16) NOT NULL, ;
                       PIDSITUITM L NOT NULL, ;
                       GLOSITUITM C(16) NOT NULL, ;
                       GENSERITEM L NOT NULL, ;
                       GENSERPROV L NOT NULL, ;
                       EDTRF1 L NOT NULL, ;
                       EDTRF2 L NOT NULL, ;
                       EDTRF3 L NOT NULL, ;
                       CHKRF1 L NOT NULL, ;
                       CHKRF2 L NOT NULL, ;
                       CHKRF3 L NOT NULL, ;
                       REFRF1 L NOT NULL, ;
                       REFRF2 L NOT NULL, ;
                       REFRF3 L NOT NULL, ;
                       LNKTPORF1 C(10) NOT NULL, ;
                       LNKTPORF2 C(10) NOT NULL, ;
                       LNKTPORF3 C(10) NOT NULL, ;
                       LNKNRORF1 C(10) NOT NULL, ;
                       LNKNRORF2 C(10) NOT NULL, ;
                       LNKNRORF3 C(10) NOT NULL)

***** Create each index for ALMCFTRA *****
INDEX ON TIPMOV+CODMOV TAG CFTR01 COLLATE 'MACHINE'
INDEX ON ORDPRO+TIPMOV+CODMOV TAG CFTR02 COLLATE 'MACHINE'
INDEX ON ORDEN TAG CFTR03 COLLATE 'MACHINE'

***** Change properties for ALMCFTRA *****
ENDFUNC

FUNCTION MakeTable_CBDDRMOV
***** Table setup for CBDDRMOV *****
CREATE TABLE 'CBDDRMOV.DBF' NAME 'CBDDRMOV' (MODULO C(5) NOT NULL, ;
                       NROMES C(2) NOT NULL, ;
                       CODOPE C(3) NOT NULL, ;
                       NROAST C(8) NOT NULL, ;
                       CODCTA C(8) NOT NULL, ;
                       NROREF C(10) NOT NULL, ;
                       CODDOC C(4) NOT NULL, ;
                       NRODOC C(14) NOT NULL, ;
                       GLOORI C(40) NOT NULL, ;
                       VCTORI D NOT NULL, ;
                       IMPORI F(12, 2) NOT NULL, ;
                       TIPORI C(2) NOT NULL, ;
                       TIPDOC C(2) NOT NULL, ;
                       NUMORI C(10) NOT NULL, ;
                       N_POLIZA C(20) NOT NULL, ;
                       IMPNAC1 N(12, 2) NOT NULL, ;
                       IMPNAC2 N(12, 2) NOT NULL, ;
                       CODBCO C(3) NOT NULL, ;
                       CTABAN C(8) NOT NULL, ;
                       DESTINO C(20) NOT NULL, ;
                       NROUNI C(15) NOT NULL, ;
                       DESBCO C(3) NOT NULL, ;
                       LETGIR C(10) NOT NULL, ;
                       REFGIR C(20) NOT NULL)

***** Create each index for CBDDRMOV *****
INDEX ON MODULO+NROMES+CODOPE+NROAST+CODCTA+TIPDOC+NROREF TAG DRMO01 COLLATE 'MACHINE'
INDEX ON MODULO+NROMES+CODOPE+NROAST+CODCTA+CODDOC+NRODOC TAG DRMO02 COLLATE 'MACHINE'
INDEX ON MODULO+NROMES+CODOPE+NROAST+NRODOC+CODCTA TAG DRMO03 COLLATE 'MACHINE'

***** Change properties for CBDDRMOV *****
ENDFUNC

FUNCTION MakeTable_CBDMPART
***** Table setup for CBDMPART *****
CREATE TABLE 'CBDMPART.DBF' NAME 'CBDMPART' (CODCTA C(8) NOT NULL, ;
                       CODPAR C(6) NOT NULL, ;
                       NOMPAR C(50) NOT NULL, ;
                       AGRUPA C(25) NOT NULL, ;
                       CCOSTO C(5) NOT NULL, ;
                       FEC_DEPR D NOT NULL, ;
                       FEC_INGR D NOT NULL, ;
                       FEC_CESE D NOT NULL, ;
                       VAL_COMP N(12, 2) NOT NULL, ;
                       VAL_COMPEX N(12, 2) NOT NULL, ;
                       VAL_ACTI N(12, 2) NOT NULL, ;
                       VAL_ACTIEX N(12, 2) NOT NULL, ;
                       DEP_ACUM N(12, 2) NOT NULL, ;
                       DEP_ACUMEX N(12, 2) NOT NULL, ;
                       AJU_ACTI N(12, 2) NOT NULL, ;
                       AJU_DEPR N(12, 2) NOT NULL, ;
                       VAL_BAJA N(12, 2) NOT NULL, ;
                       DEP_BAJA N(12, 2) NOT NULL, ;
                       EST_ACTI C(3) NOT NULL, ;
                       PORDPR N(6, 2) NOT NULL)

***** Create each index for CBDMPART *****
INDEX ON CODCTA+CODPAR TAG PART01 COLLATE 'MACHINE'

***** Change properties for CBDMPART *****
ENDFUNC

FUNCTION MakeTable_CBDRPART
***** Table setup for CBDRPART *****
CREATE TABLE 'CBDRPART.DBF' NAME 'CBDRPART' (CODCTA C(8) NOT NULL, ;
                       CODPAR C(6) NOT NULL, ;
                       NROMES C(2) NOT NULL, ;
                       FACTOR N(6, 3) NOT NULL, ;
                       VALAJT N(12, 2) NOT NULL, ;
                       VALAJTM N(12, 2) NOT NULL, ;
                       DPHISA N(12, 2) NOT NULL, ;
                       DPHISM N(12, 2) NOT NULL, ;
                       DPAJTA N(12, 2) NOT NULL, ;
                       DPAJTM N(12, 2) NOT NULL, ;
                       DPHISAEX N(12, 2) NOT NULL, ;
                       DPHISMEX N(12, 2) NOT NULL)

***** Create each index for CBDRPART *****
INDEX ON CODCTA+CODPAR+NROMES TAG RPAR01 COLLATE 'MACHINE'
INDEX ON NROMES+CODCTA+CODPAR TAG RPAR02 COLLATE 'MACHINE'

***** Change properties for CBDRPART *****
ENDFUNC

FUNCTION MakeTable_CBDTCIER
***** Table setup for CBDTCIER *****
CREATE TABLE 'CBDTCIER.DBF' NAME 'CBDTCIER' (CIERRE L NOT NULL, ;
                       CJABCO L NOT NULL, ;
                       OFIVTA N(10, 4) NOT NULL, ;
                       OFICMP N(10, 4) NOT NULL, ;
                       CODUSER C(8) NOT NULL, ;
                       FCHHORA T NOT NULL)

***** Create each index for CBDTCIER *****

***** Change properties for CBDTCIER *****
ENDFUNC

FUNCTION MakeTable_CBDTOPER
***** Table setup for CBDTOPER *****
CREATE TABLE 'CBDTOPER.DBF' NAME 'CBDTOPER' (CODOPE C(3) NOT NULL, ;
                       NOMOPE C(30) NOT NULL, ;
                       SIGLAS C(15) NOT NULL, ;
                       ORIGEN L NOT NULL, ;
                       CODUSR C(11) NOT NULL, ;
                       LIBROS L NOT NULL, ;
                       RESUME L NOT NULL, ;
                       CODMON N(1, 0) NOT NULL, ;
                       TPOCMB N(1, 0) NOT NULL, ;
                       TPOCOR N(1, 0) NOT NULL, ;
                       NDOC00 N(8, 0) NOT NULL, ;
                       NDOC01 N(8, 0) NOT NULL, ;
                       NDOC02 N(8, 0) NOT NULL, ;
                       NDOC03 N(8, 0) NOT NULL, ;
                       NDOC04 N(8, 0) NOT NULL, ;
                       NDOC05 N(8, 0) NOT NULL, ;
                       NDOC06 N(8, 0) NOT NULL, ;
                       NDOC07 N(8, 0) NOT NULL, ;
                       NDOC08 N(8, 0) NOT NULL, ;
                       NDOC09 N(8, 0) NOT NULL, ;
                       NDOC10 N(8, 0) NOT NULL, ;
                       NDOC11 N(8, 0) NOT NULL, ;
                       NDOC12 N(8, 0) NOT NULL, ;
                       NDOC13 N(8, 0) NOT NULL, ;
                       NRODOC N(8, 0) NOT NULL, ;
                       NROREL N(6, 0) NOT NULL, ;
                       CORR_U L NOT NULL, ;
                       T_DESTINO C(30) NOT NULL, ;
                       CAMPO_ID C(20) NOT NULL, ;
                       ANT_MES N(1, 0) NOT NULL, ;
                       ANT_SERIE N(1, 0) NOT NULL, ;
                       ANT_PTOVTA N(1, 0) NOT NULL, ;
                       VAR_SUF_ID C(10) NOT NULL, ;
                       EVAL_VALOR_PK M NOT NULL, ;
                       LEN_ID N(3, 0) NOT NULL, ;
                       MOVCJA N(1, 0) NOT NULL, ;
                       PIDREC L NOT NULL)

***** Create each index for CBDTOPER *****
INDEX ON CODOPE TAG OPER01 COLLATE 'MACHINE'

***** Change properties for CBDTOPER *****
ENDFUNC

FUNCTION MakeTable_CBDVMOVM
***** Table setup for CBDVMOVM *****
CREATE TABLE 'CBDVMOVM.DBF' NAME 'CBDVMOVM' (NROMES C(2) NOT NULL, ;
                       CODOPE C(3) NOT NULL, ;
                       NROAST C(8) NOT NULL, ;
                       NROVOU C(9) NOT NULL, ;
                       CODMON N(1, 0) NOT NULL, ;
                       TPOCMB N(10, 4) NOT NULL, ;
                       FCHAST D NOT NULL, ;
                       NROITM N(5, 0) NOT NULL, ;
                       NOTAST C(40) NOT NULL, ;
                       DIGITA C(10) NOT NULL, ;
                       CHKCTA N(12, 0) NOT NULL, ;
                       DBENAC N(12, 2) NOT NULL, ;
                       HBENAC N(12, 2) NOT NULL, ;
                       DBEUSA N(12, 2) NOT NULL, ;
                       HBEUSA N(12, 2) NOT NULL, ;
                       FLGEST C(1) NOT NULL, ;
                       CTACJA C(8) NOT NULL, ;
                       GIRADO C(40) NOT NULL, ;
                       NROCHQ C(15) NOT NULL, ;
                       IMPCHQ N(12, 2) NOT NULL, ;
                       AUXIL C(11) NOT NULL, ;
                       GLOAST M NOT NULL, ;
                       FCHDIG D NOT NULL, ;
                       HORDIG C(8) NOT NULL, ;
                       FCHPED D NOT NULL, ;
                       FCHENT D NOT NULL, ;
                       PARFIN C(15) NOT NULL)

***** Create each index for CBDVMOVM *****
INDEX ON NROMES+CODOPE+NROAST TAG VMOV01 COLLATE 'MACHINE'
INDEX ON NROMES+CODOPE+NROVOU TAG VMOV02 COLLATE 'MACHINE'
INDEX ON NROMES+CODOPE+DTOC(FCHAST,1)+NROAST TAG VMOV03 COLLATE 'MACHINE'

***** Change properties for CBDVMOVM *****
ENDFUNC

FUNCTION MakeTable_CPICDOCM
***** Table setup for CPICDOCM *****
CREATE TABLE 'CPICDOCM.DBF' NAME 'CPICDOCM' (CODSED C(3) NOT NULL, ;
                       CODDOC C(4) NOT NULL, ;
                       NRODOC N(10, 0) NOT NULL, ;
                       NDOC00 N(10, 0) NOT NULL, ;
                       NDOC01 N(10, 0) NOT NULL, ;
                       NDOC02 N(10, 0) NOT NULL, ;
                       NDOC03 N(10, 0) NOT NULL, ;
                       NDOC04 N(10, 0) NOT NULL, ;
                       NDOC05 N(10, 0) NOT NULL, ;
                       NDOC06 N(10, 0) NOT NULL, ;
                       NDOC07 N(10, 0) NOT NULL, ;
                       NDOC08 N(10, 0) NOT NULL, ;
                       NDOC09 N(10, 0) NOT NULL, ;
                       NDOC10 N(10, 0) NOT NULL, ;
                       NDOC11 N(10, 0) NOT NULL, ;
                       NDOC12 N(10, 0) NOT NULL, ;
                       NDOC13 N(10, 0) NOT NULL)

***** Create each index for CPICDOCM *****
INDEX ON CODSED+CODDOC TAG CDOC01 CANDIDATE COLLATE 'MACHINE'

***** Change properties for CPICDOCM *****
ENDFUNC

FUNCTION MakeTable_CPICO_TB
***** Table setup for CPICO_TB *****
CREATE TABLE 'CPICO_TB.DBF' NAME 'CPICO_TB' (NRODOC C(10) NOT NULL, ;
                       CODFASE C(3) NOT NULL, ;
                       CODPROCS C(3) NOT NULL, ;
                       CODACTIV C(3) NOT NULL, ;
                       CODLOTE C(3) NOT NULL, ;
                       CODCULT C(8) NOT NULL, ;
                       CODPRO C(15) NOT NULL, ;
                       FCHDOC D NOT NULL, ;
                       FCHFIN D NOT NULL, ;
                       FLGEST C(1) NOT NULL, ;
                       CANOBJ N(14, 3) NOT NULL, ;
                       CANFIN N(14, 3) NOT NULL, ;
                       RESPON C(10) NOT NULL, ;
                       CDAREA C(2) NOT NULL, ;
                       FACTOR N(6, 2) NOT NULL, ;
                       CANFINA N(14, 3) NOT NULL, ;
                       FCHFINA D NOT NULL, ;
                       VFORM1D01 N(14, 4) NOT NULL, ;
                       VFORM1D02 N(14, 4) NOT NULL, ;
                       VBATC1D01 N(14, 4) NOT NULL, ;
                       VBATC1D02 N(14, 4) NOT NULL, ;
                       VMERM1D01 N(14, 4) NOT NULL, ;
                       VMERM1D02 N(14, 4) NOT NULL, ;
                       VFORM2D01 N(14, 4) NOT NULL, ;
                       VFORM2D02 N(14, 4) NOT NULL, ;
                       VBATC2D01 N(14, 4) NOT NULL, ;
                       VBATC2D02 N(14, 4) NOT NULL, ;
                       VMERM2D01 N(14, 4) NOT NULL, ;
                       VMERM2D02 N(14, 4) NOT NULL, ;
                       VFORL1D01 N(14, 4) NOT NULL, ;
                       VFORL1D02 N(14, 4) NOT NULL, ;
                       VBATL1D01 N(14, 4) NOT NULL, ;
                       VBATL1D02 N(14, 4) NOT NULL, ;
                       VMERL1D01 N(14, 4) NOT NULL, ;
                       VMERL1D02 N(14, 4) NOT NULL, ;
                       VFORL2D01 N(14, 4) NOT NULL, ;
                       VFORL2D02 N(14, 4) NOT NULL, ;
                       VBATL2D01 N(14, 4) NOT NULL, ;
                       VBATL2D02 N(14, 4) NOT NULL, ;
                       VMERL2D01 N(14, 4) NOT NULL, ;
                       VMERL2D02 N(14, 4) NOT NULL, ;
                       VDEVOMN N(14, 4) NOT NULL, ;
                       VDEVOUS N(14, 4) NOT NULL, ;
                       VDEVLMN N(14, 4) NOT NULL, ;
                       VDEVLUS N(14, 4) NOT NULL, ;
                       EFICIE N(8, 2) NOT NULL, ;
                       TIPO N(1, 0) NOT NULL, ;
                       TIPBAT N(1, 0) NOT NULL, ;
                       CODNEW C(8) NOT NULL)

***** Create each index for CPICO_TB *****
INDEX ON CODLOTE+CODCULT+DTOS(FCHDOC) TAG CO_T04 COLLATE 'MACHINE'
INDEX ON LEFT(NRODOC,3)+CODACTIV+DTOS(FCHDOC) TAG CO_T05 COLLATE 'MACHINE'
ALTER TABLE 'CPICO_TB' ADD PRIMARY KEY NRODOC TAG CO_T01 COLLATE 'MACHINE'
INDEX ON CODPRO+DTOS(FCHDOC) TAG CO_T03 COLLATE 'MACHINE'
INDEX ON DTOS(FCHDOC)+CODPRO TAG CO_T02 COLLATE 'MACHINE'

***** Change properties for CPICO_TB *****
ENDFUNC

FUNCTION MakeTable_CPICULTI
***** Table setup for CPICULTI *****
CREATE TABLE 'CPICULTI.DBF' NAME 'CPICULTI' (CODCULT C(8) NOT NULL, ;
                       DESCULT C(30) NOT NULL, ;
                       DESCORT C(17) NOT NULL, ;
                       CODPRO C(13) NOT NULL, ;
                       CODCULT1 C(8) NOT NULL, ;
                       VMN01 N(14, 4) NOT NULL, ;
                       VMN02 N(14, 4) NOT NULL, ;
                       VMN03 N(14, 4) NOT NULL, ;
                       VMN04 N(14, 4) NOT NULL, ;
                       VMN05 N(14, 4) NOT NULL, ;
                       VMN06 N(14, 4) NOT NULL, ;
                       VMN07 N(14, 4) NOT NULL, ;
                       VMN08 N(14, 4) NOT NULL, ;
                       VMN09 N(14, 4) NOT NULL, ;
                       VMN10 N(14, 4) NOT NULL, ;
                       VMN11 N(14, 4) NOT NULL, ;
                       VMN12 N(14, 4) NOT NULL, ;
                       VUS01 N(14, 4) NOT NULL, ;
                       VUS02 N(14, 4) NOT NULL, ;
                       VUS03 N(14, 4) NOT NULL, ;
                       VUS04 N(14, 4) NOT NULL, ;
                       VUS05 N(14, 4) NOT NULL, ;
                       VUS06 N(14, 4) NOT NULL, ;
                       VUS07 N(14, 4) NOT NULL, ;
                       VUS08 N(14, 4) NOT NULL, ;
                       VUS09 N(14, 4) NOT NULL, ;
                       VUS10 N(14, 4) NOT NULL, ;
                       VUS11 N(14, 4) NOT NULL, ;
                       VUS12 N(14, 4) NOT NULL, ;
                       CODUSER C(8) NOT NULL, ;
                       FCHHORA T NOT NULL)

***** Create each index for CPICULTI *****
INDEX ON UPPER(DESCULT) TAG CULT02 COLLATE 'MACHINE'
INDEX ON CODCULT1 TAG CULT03 CANDIDATE COLLATE 'MACHINE'
INDEX ON CODCULT TAG CULT01 CANDIDATE COLLATE 'MACHINE'

***** Change properties for CPICULTI *****
ENDFUNC

FUNCTION MakeTable_CPICUXLT
***** Table setup for CPICUXLT *****
CREATE TABLE 'CPICUXLT.DBF' NAME 'CPICUXLT' (CODSED C(3) NOT NULL, ;
                       CODLOTE C(3) NOT NULL, ;
                       CODCULT C(8) NOT NULL, ;
                       CODCULT1 C(8) NOT NULL, ;
                       AREACULT N(10, 2) NOT NULL, ;
                       NROPLANTA N(10, 0) NOT NULL, ;
                       DISTPLANTA C(15) NOT NULL, ;
                       FCHSIEMB1 D NOT NULL, ;
                       FCHSIEMB2 D NOT NULL, ;
                       TIPOCULT N(1, 0) NOT NULL, ;
                       VINIMN N(18, 6) NOT NULL, ;
                       VINIUS N(18, 6) NOT NULL, ;
                       VCTOMN N(18, 6) NOT NULL, ;
                       VCTOUS N(18, 6) NOT NULL, ;
                       VMN01 N(14, 4) NOT NULL, ;
                       VMN02 N(14, 4) NOT NULL, ;
                       VMN03 N(14, 4) NOT NULL, ;
                       VMN04 N(14, 4) NOT NULL, ;
                       VMN05 N(14, 4) NOT NULL, ;
                       VMN06 N(14, 4) NOT NULL, ;
                       VMN07 N(14, 4) NOT NULL, ;
                       VMN08 N(14, 4) NOT NULL, ;
                       VMN09 N(14, 4) NOT NULL, ;
                       VMN10 N(14, 4) NOT NULL, ;
                       VMN11 N(14, 4) NOT NULL, ;
                       VMN12 N(14, 4) NOT NULL, ;
                       VUS01 N(14, 4) NOT NULL, ;
                       VUS02 N(14, 4) NOT NULL, ;
                       VUS03 N(14, 4) NOT NULL, ;
                       VUS04 N(14, 4) NOT NULL, ;
                       VUS05 N(14, 4) NOT NULL, ;
                       VUS06 N(14, 4) NOT NULL, ;
                       VUS07 N(14, 4) NOT NULL, ;
                       VUS08 N(14, 4) NOT NULL, ;
                       VUS09 N(14, 4) NOT NULL, ;
                       VUS10 N(14, 4) NOT NULL, ;
                       VUS11 N(14, 4) NOT NULL, ;
                       VUS12 N(14, 4) NOT NULL, ;
                       CODUSER C(8) NOT NULL, ;
                       FCHHORA T NOT NULL)

***** Create each index for CPICUXLT *****
INDEX ON CODCULT+CODLOTE TAG CUXLT02 UNIQUE COLLATE 'MACHINE'
INDEX ON CODLOTE+CODCULT1 TAG CUXLT03 CANDIDATE COLLATE 'MACHINE'
INDEX ON CODLOTE+CODCULT TAG CUXLT01 CANDIDATE COLLATE 'MACHINE'

***** Change properties for CPICUXLT *****
ENDFUNC

FUNCTION MakeTable_CPIDO_TB
***** Table setup for CPIDO_TB *****
CREATE TABLE 'CPIDO_TB.DBF' NAME 'CPIDO_TB' (NRODOC C(10) NOT NULL, ;
                       CODPRO C(15) NOT NULL, ;
                       TIPPRO C(3) NOT NULL, ;
                       SUBALM C(3) NOT NULL, ;
                       CODMAT C(15) NOT NULL, ;
                       FCHDOC D NOT NULL, ;
                       NROITM C(3) NOT NULL, ;
                       CANSAL N(14, 4) NOT NULL, ;
                       CANFOR N(14, 4) NOT NULL, ;
                       CANADI N(14, 4) NOT NULL, ;
                       CANDEV N(14, 4) NOT NULL, ;
                       UNDPRO C(3) NOT NULL, ;
                       FACEQU N(14, 6) NOT NULL, ;
                       LOTEFOR C(15) NOT NULL, ;
                       CANFORA N(14, 4) NOT NULL, ;
                       CANADIA N(14, 4) NOT NULL, ;
                       CANDEVA N(14, 4) NOT NULL, ;
                       CANSALA N(14, 4) NOT NULL, ;
                       STKFOR L NOT NULL, ;
                       STKADI L NOT NULL, ;
                       FLGFOR L NOT NULL, ;
                       FLGADI L NOT NULL, ;
                       FLGDEV L NOT NULL, ;
                       CODFOR C(14) NOT NULL, ;
                       CODADI C(14) NOT NULL, ;
                       CODDEV C(14) NOT NULL, ;
                       CODSAL C(14) NOT NULL, ;
                       NROGUIA C(10) NOT NULL, ;
                       FLGSAL L NOT NULL, ;
                       STKSAL L NOT NULL, ;
                       CNFMLA N(14, 4) NOT NULL, ;
                       CODNEW C(13) NOT NULL, ;
                       CODNEW1 C(13) NOT NULL, ;
                       LOTEADI C(15) NOT NULL, ;
                       LOTEDEV C(15) NOT NULL)

***** Create each index for CPIDO_TB *****
INDEX ON CODMAT TAG DO_T05 COLLATE 'MACHINE'
INDEX ON NRODOC+TIPPRO+SUBALM+CODMAT TAG DO_T01 COLLATE 'MACHINE'
INDEX ON NRODOC+CODPRO+SUBALM+CODMAT TAG DO_T02 COLLATE 'MACHINE'
INDEX ON DTOS(FCHDOC)+NRODOC+CODPRO+SUBALM+CODMAT TAG DO_T03 COLLATE 'MACHINE'

***** Change properties for CPIDO_TB *****
ENDFUNC

FUNCTION MakeTable_CPIMO_TB
***** Table setup for CPIMO_TB *****
CREATE TABLE 'CPIMO_TB.DBF' NAME 'CPIMO_TB' (NRODOC C(10) NOT NULL, ;
                       FCHDOC T NOT NULL, ;
                       CODPERS C(6) NOT NULL, ;
                       NROITM N(3, 0) NOT NULL, ;
                       HN_ENTRADA T NOT NULL, ;
                       HN_SALIDA T NOT NULL, ;
                       HE_ENTRADA T NOT NULL, ;
                       HE_SALIDA T NOT NULL, ;
                       H_NORMAL N(8, 0) NOT NULL, ;
                       H_EXTRA N(8, 0) NOT NULL, ;
                       COST_HN N(14, 2) NOT NULL, ;
                       COST_HE N(14, 2) NOT NULL)

***** Create each index for CPIMO_TB *****
INDEX ON NRODOC TAG MO_T01 COLLATE 'MACHINE'

***** Change properties for CPIMO_TB *****
ENDFUNC

FUNCTION MakeTable_CPIPO_TB
***** Table setup for CPIPO_TB *****
CREATE TABLE 'CPIPO_TB.DBF' NAME 'CPIPO_TB' (NRODOC C(10) NOT NULL, ;
                       SUBALM C(3) NOT NULL, ;
                       SUBALMA C(3) NOT NULL, ;
                       CODPRD C(15) NOT NULL, ;
                       CODPRDA C(15) NOT NULL, ;
                       FCHFIN D NOT NULL, ;
                       CANFIN N(14, 4) NOT NULL, ;
                       CANFINA N(14, 4) NOT NULL, ;
                       FLGALM L NOT NULL, ;
                       CODP_T C(14) NOT NULL, ;
                       COSTMN N(14, 2) NOT NULL, ;
                       COSTUS N(14, 2) NOT NULL, ;
                       CODNEW C(15) NOT NULL, ;
                       CODNEW1 C(15) NOT NULL, ;
                       LOTEFIN C(15) NOT NULL)

***** Create each index for CPIPO_TB *****
INDEX ON SUBALM+DTOS(FCHFIN)+CODPRD TAG PO_T02 COLLATE 'MACHINE'
INDEX ON CODPRD TAG PO_T04 COLLATE 'MACHINE'
INDEX ON NRODOC+SUBALM+CODPRD+DTOS(FCHFIN) TAG PO_T01 COLLATE 'MACHINE'
INDEX ON CODPRDA TAG PO_T03 COLLATE 'MACHINE'

***** Change properties for CPIPO_TB *****
ENDFUNC

FUNCTION MakeTable_FCJCROPL
***** Table setup for FCJCROPL *****
CREATE TABLE 'FCJCROPL.DBF' NAME 'FCJCROPL' (TNGAUX C(2) NOT NULL, ;
                       TNGDES C(50) NOT NULL, ;
                       TMN01 N(14, 2) NOT NULL, ;
                       TMN02 N(14, 2) NOT NULL, ;
                       TUS01 N(14, 2) NOT NULL, ;
                       TUS02 N(14, 2) NOT NULL, ;
                       TOT01 N(14, 2) NOT NULL, ;
                       TOT02 N(14, 2) NOT NULL, ;
                       TMN03 N(14, 2) NOT NULL, ;
                       TMN04 N(14, 2) NOT NULL, ;
                       TUS03 N(14, 2) NOT NULL, ;
                       TUS04 N(14, 2) NOT NULL, ;
                       TOT03 N(14, 2) NOT NULL, ;
                       TOT04 N(14, 2) NOT NULL, ;
                       TMN05 N(14, 2) NOT NULL, ;
                       TMN06 N(14, 2) NOT NULL, ;
                       TUS05 N(14, 2) NOT NULL, ;
                       TUS06 N(14, 2) NOT NULL, ;
                       TOT05 N(14, 2) NOT NULL, ;
                       TOT06 N(14, 2) NOT NULL, ;
                       TMN07 N(14, 2) NOT NULL, ;
                       TMN08 N(14, 2) NOT NULL, ;
                       TUS07 N(14, 2) NOT NULL, ;
                       TUS08 N(14, 2) NOT NULL, ;
                       TOT07 N(14, 2) NOT NULL, ;
                       TOT08 N(14, 2) NOT NULL, ;
                       TMN09 N(14, 2) NOT NULL, ;
                       TMN10 N(14, 2) NOT NULL, ;
                       TUS09 N(14, 2) NOT NULL, ;
                       TUS10 N(14, 2) NOT NULL, ;
                       TOT09 N(14, 2) NOT NULL, ;
                       TOT10 N(14, 2) NOT NULL, ;
                       TMN11 N(14, 2) NOT NULL, ;
                       TMN12 N(14, 2) NOT NULL, ;
                       TUS11 N(14, 2) NOT NULL, ;
                       TUS12 N(14, 2) NOT NULL, ;
                       TOT11 N(14, 2) NOT NULL, ;
                       TOT12 N(14, 2) NOT NULL)

***** Create each index for FCJCROPL *****
INDEX ON TNGAUX TAG CROP01 COLLATE 'MACHINE'

***** Change properties for FCJCROPL *****
ENDFUNC

FUNCTION MakeTable_FCJTCPLA
***** Table setup for FCJTCPLA *****
CREATE TABLE 'FCJTCPLA.DBF' NAME 'FCJTCPLA' (TNGAUX C(2) NOT NULL, ;
                       TNGDES C(50) NOT NULL, ;
                       ENE_MN N(14, 2) NOT NULL, ;
                       ENE_US N(14, 2) NOT NULL, ;
                       ENE_TOT N(14, 2) NOT NULL, ;
                       FEB_MN N(14, 2) NOT NULL, ;
                       FEB_US N(14, 2) NOT NULL, ;
                       FEB_TOT N(14, 2) NOT NULL, ;
                       MAR_MN N(14, 2) NOT NULL, ;
                       MAR_US N(14, 2) NOT NULL, ;
                       MAR_TOT N(14, 2) NOT NULL, ;
                       ABR_MN N(14, 2) NOT NULL, ;
                       ABR_US N(14, 2) NOT NULL, ;
                       ABR_TOT N(14, 2) NOT NULL, ;
                       MAY_MN N(14, 2) NOT NULL, ;
                       MAY_US N(14, 2) NOT NULL, ;
                       MAY_TOT N(14, 2) NOT NULL, ;
                       JUN_MN N(14, 2) NOT NULL, ;
                       JUN_US N(14, 2) NOT NULL, ;
                       JUN_TOT N(14, 2) NOT NULL, ;
                       JUL_MN N(14, 2) NOT NULL, ;
                       JUL_US N(14, 2) NOT NULL, ;
                       JUL_TOT N(14, 2) NOT NULL, ;
                       AGO_MN N(14, 2) NOT NULL, ;
                       AGO_US N(14, 2) NOT NULL, ;
                       AGO_TOT N(14, 2) NOT NULL, ;
                       SET_MN N(14, 2) NOT NULL, ;
                       SET_US N(14, 2) NOT NULL, ;
                       SET_TOT N(14, 2) NOT NULL, ;
                       OCT_MN N(14, 2) NOT NULL, ;
                       OCT_US N(14, 2) NOT NULL, ;
                       OCT_TOT N(14, 2) NOT NULL, ;
                       NOV_MN N(14, 2) NOT NULL, ;
                       NOV_US N(14, 2) NOT NULL, ;
                       NOV_TOT N(14, 2) NOT NULL, ;
                       DIC_MN N(14, 2) NOT NULL, ;
                       DIC_US N(14, 2) NOT NULL, ;
                       DIC_TOT N(14, 2) NOT NULL, ;
                       TOT_MN N(14, 2) NOT NULL, ;
                       TOT_US N(14, 2) NOT NULL, ;
                       TOT_GEN N(14, 2) NOT NULL)

***** Create each index for FCJTCPLA *****
INDEX ON TNGAUX TAG CPLA01 COLLATE 'MACHINE'

***** Change properties for FCJTCPLA *****
ENDFUNC

FUNCTION MakeTable_FLCJDOCC
***** Table setup for FLCJDOCC *****
CREATE TABLE 'FLCJDOCC.DBF' NAME 'FLCJDOCC' (TIPDOC C(4) NOT NULL, ;
                       NDOC00 N(6, 0) NOT NULL, ;
                       NDOC01 N(6, 0) NOT NULL, ;
                       NDOC02 N(6, 0) NOT NULL, ;
                       NDOC03 N(6, 0) NOT NULL, ;
                       NDOC04 N(6, 0) NOT NULL, ;
                       NDOC05 N(6, 0) NOT NULL, ;
                       NDOC06 N(6, 0) NOT NULL, ;
                       NDOC07 N(6, 0) NOT NULL, ;
                       NDOC08 N(6, 0) NOT NULL, ;
                       NDOC09 N(6, 0) NOT NULL, ;
                       NDOC10 N(6, 0) NOT NULL, ;
                       NDOC11 N(6, 0) NOT NULL, ;
                       NDOC12 N(6, 0) NOT NULL, ;
                       NDOC13 N(6, 0) NOT NULL, ;
                       NRODOC N(6, 0) NOT NULL)

***** Create each index for FLCJDOCC *****
INDEX ON TIPDOC TAG DOCC01 COLLATE 'MACHINE'

***** Change properties for FLCJDOCC *****
ENDFUNC

FUNCTION MakeTable_FLCLIQUI
***** Table setup for FLCLIQUI *****
CREATE TABLE 'FLCLIQUI.DBF' NAME 'FLCLIQUI' (FCHACT D NOT NULL, ;
                       USUARIO C(10) NOT NULL, ;
                       NROLIQ C(6) NOT NULL, ;
                       CMBDIA N(8, 4) NOT NULL, ;
                       TPOOPC C(2) NOT NULL, ;
                       FCHINI D NOT NULL, ;
                       FCHFIN D NOT NULL, ;
                       ESTLIQ C(1) NOT NULL, ;
                       FCHDIG D NOT NULL, ;
                       HORDIG C(8) NOT NULL)

***** Create each index for FLCLIQUI *****
INDEX ON DTOS(FCHACT)+USUARIO+NROLIQ TAG LIQU01 COLLATE 'MACHINE'
INDEX ON USUARIO+DTOS(FCHACT)+NROLIQ TAG LIQU02 COLLATE 'MACHINE'

***** Change properties for FLCLIQUI *****
ENDFUNC

FUNCTION MakeTable_ALMDLOTE
***** Table setup for ALMDLOTE *****
CREATE TABLE 'ALMDLOTE.DBF' NAME 'ALMDLOTE' (CODSED C(3) NOT NULL, ;
                       CODMAT C(15) NOT NULL, ;
                       LOTE C(15) NOT NULL, ;
                       FCHVTO D NOT NULL, ;
                       SUBALM C(3) NOT NULL, ;
                       STKSUB N(14, 4) NOT NULL, ;
                       STKACT N(14, 4) NOT NULL, ;
                       STKINI N(14, 4) NOT NULL, ;
                       STK01 N(14, 4) NOT NULL, ;
                       STK02 N(14, 4) NOT NULL, ;
                       STK03 N(14, 4) NOT NULL, ;
                       STK04 N(14, 4) NOT NULL, ;
                       STK05 N(14, 4) NOT NULL, ;
                       STK06 N(14, 4) NOT NULL, ;
                       STK07 N(14, 4) NOT NULL, ;
                       STK08 N(14, 4) NOT NULL, ;
                       STK09 N(14, 4) NOT NULL, ;
                       STK10 N(14, 4) NOT NULL, ;
                       STK11 N(14, 4) NOT NULL, ;
                       STK12 N(14, 4) NOT NULL)

***** Create each index for ALMDLOTE *****
INDEX ON CODSED+SUBALM+CODMAT+LOTE+DTOS(FCHVTO) TAG DLOTE01 COLLATE 'MACHINE'
INDEX ON CODMAT+LOTE+DTOS(FCHVTO) TAG DLOTE02 COLLATE 'MACHINE'
INDEX ON CODSED+SUBALM+CODMAT+DTOS(FCHVTO) TAG DLOTE03 COLLATE 'MACHINE'

***** Change properties for ALMDLOTE *****
ENDFUNC

FUNCTION MakeTable_ALMCATGE
***** Table setup for ALMCATGE *****
CREATE TABLE 'ALMCATGE.DBF' NAME 'ALMCATGE' (CODMAT C(15) NOT NULL, ;
                       CODEQU C(8) NOT NULL, ;
                       CODANT C(15) NOT NULL, ;
                       CODREF C(10) NOT NULL, ;
                       DESMAT C(80) NOT NULL, ;
                       DESMAT2 C(20) NOT NULL, ;
                       CODAGR C(8) NOT NULL, ;
                       MARCA C(25) NOT NULL, ;
                       UNDSTK C(3) NOT NULL, ;
                       UNDCMP C(3) NOT NULL, ;
                       FACEQU N(10, 4) NOT NULL, ;
                       PMAXMN N(18, 6) NOT NULL, ;
                       PMAXUS N(18, 6) NOT NULL, ;
                       PCTOMN N(18, 6) NOT NULL, ;
                       PCTOUS N(18, 6) NOT NULL, ;
                       PULTMN N(18, 6) NOT NULL, ;
                       PULTUS N(18, 6) NOT NULL, ;
                       CODPR1 C(6) NOT NULL, ;
                       CODPR2 C(6) NOT NULL, ;
                       FCHALZ D NOT NULL, ;
                       ULTCMP D NOT NULL, ;
                       ULTSAL D NOT NULL, ;
                       STKACT N(14, 4) NOT NULL, ;
                       STKINI N(14, 4) NOT NULL, ;
                       PINIMN N(18, 6) NOT NULL, ;
                       PINIUS N(18, 6) NOT NULL, ;
                       STKREP N(14, 4) NOT NULL, ;
                       STKMAX N(14, 4) NOT NULL, ;
                       VOLPED N(14, 4) NOT NULL, ;
                       TMPREP N(9, 0) NOT NULL, ;
                       STKSEG N(9, 0) NOT NULL, ;
                       PESO N(14, 4) NOT NULL, ;
                       TPOEMB N(4, 0) NOT NULL, ;
                       TL_PTO N(4, 0) NOT NULL, ;
                       TIPMAT C(2) NOT NULL, ;
                       EQMAT1 C(8) NOT NULL, ;
                       EQMAT2 C(8) NOT NULL, ;
                       EQMAT3 C(8) NOT NULL, ;
                       EQMAT4 C(8) NOT NULL, ;
                       EQMAT5 C(8) NOT NULL, ;
                       EQMAT6 C(8) NOT NULL, ;
                       EQMAT7 C(8) NOT NULL, ;
                       EQMAT8 C(8) NOT NULL, ;
                       EQMAT9 C(8) NOT NULL, ;
                       EQMAT10 C(8) NOT NULL, ;
                       STKMIN N(14, 4) NOT NULL, ;
                       VINIMN N(18, 6) NOT NULL, ;
                       VINIUS N(18, 6) NOT NULL, ;
                       CODSEC C(2) NOT NULL, ;
                       ORIGEN N(1, 0) NOT NULL, ;
                       PUINMN N(12, 4) NOT NULL, ;
                       PUINUS N(12, 4) NOT NULL, ;
                       VCTOMN N(18, 4) NOT NULL, ;
                       VCTOUS N(18, 4) NOT NULL, ;
                       DENSIDAD N(10, 4) NOT NULL, ;
                       UNDNUM C(3) NOT NULL, ;
                       UNDDEN C(3) NOT NULL, ;
                       NOPROM L NOT NULL, ;
                       INACTIVO L NOT NULL, ;
                       CODCTA C(8) NOT NULL, ;
                       CTAC2X C(8) NOT NULL, ;
                       CTAC33 C(8) NOT NULL, ;
                       CTAC70 C(8) NOT NULL, ;
                       CTAC71 C(8) NOT NULL, ;
                       CTAC60 C(8) NOT NULL, ;
                       CTAC61 C(8) NOT NULL, ;
                       CTAC61C C(8) NOT NULL, ;
                       CTAC16 C(8) NOT NULL, ;
                       CTAC69 C(8) NOT NULL, ;
                       UNDEQU N(14, 4) NOT NULL, ;
                       DESEQU C(20) NOT NULL, ;
                       FACVTA N(9, 4) NOT NULL, ;
                       STK01 N(14, 4) NOT NULL, ;
                       STK02 N(14, 4) NOT NULL, ;
                       STK03 N(14, 4) NOT NULL, ;
                       STK04 N(14, 4) NOT NULL, ;
                       STK05 N(14, 4) NOT NULL, ;
                       STK06 N(14, 4) NOT NULL, ;
                       STK07 N(14, 4) NOT NULL, ;
                       STK08 N(14, 4) NOT NULL, ;
                       STK09 N(14, 4) NOT NULL, ;
                       STK10 N(14, 4) NOT NULL, ;
                       STK11 N(14, 4) NOT NULL, ;
                       STK12 N(14, 4) NOT NULL, ;
                       VMN01 N(14, 4) NOT NULL, ;
                       VMN02 N(14, 4) NOT NULL, ;
                       VMN03 N(14, 4) NOT NULL, ;
                       VMN04 N(14, 4) NOT NULL, ;
                       VMN05 N(14, 4) NOT NULL, ;
                       VMN06 N(14, 4) NOT NULL, ;
                       VMN07 N(14, 4) NOT NULL, ;
                       VMN08 N(14, 4) NOT NULL, ;
                       VMN09 N(14, 4) NOT NULL, ;
                       VMN10 N(14, 4) NOT NULL, ;
                       VMN11 N(14, 4) NOT NULL, ;
                       VMN12 N(14, 4) NOT NULL, ;
                       VUS01 N(14, 4) NOT NULL, ;
                       VUS02 N(14, 4) NOT NULL, ;
                       VUS03 N(14, 4) NOT NULL, ;
                       VUS04 N(14, 4) NOT NULL, ;
                       VUS05 N(14, 4) NOT NULL, ;
                       VUS06 N(14, 4) NOT NULL, ;
                       VUS07 N(14, 4) NOT NULL, ;
                       VUS08 N(14, 4) NOT NULL, ;
                       VUS09 N(14, 4) NOT NULL, ;
                       VUS10 N(14, 4) NOT NULL, ;
                       VUS11 N(14, 4) NOT NULL, ;
                       VUS12 N(14, 4) NOT NULL, ;
                       PS01 N(12, 4) NOT NULL, ;
                       PS02 N(12, 4) NOT NULL, ;
                       PS03 N(12, 4) NOT NULL, ;
                       PS04 N(12, 4) NOT NULL, ;
                       PS05 N(12, 4) NOT NULL, ;
                       PS06 N(12, 4) NOT NULL, ;
                       PS07 N(12, 4) NOT NULL, ;
                       PS08 N(12, 4) NOT NULL, ;
                       PS09 N(12, 4) NOT NULL, ;
                       PS10 N(12, 4) NOT NULL, ;
                       PS11 N(12, 4) NOT NULL, ;
                       PS12 N(12, 4) NOT NULL, ;
                       PD01 N(12, 4) NOT NULL, ;
                       PD02 N(12, 4) NOT NULL, ;
                       PD03 N(12, 4) NOT NULL, ;
                       PD04 N(12, 4) NOT NULL, ;
                       PD05 N(12, 4) NOT NULL, ;
                       PD06 N(12, 4) NOT NULL, ;
                       PD07 N(12, 4) NOT NULL, ;
                       PD08 N(12, 4) NOT NULL, ;
                       PD09 N(12, 4) NOT NULL, ;
                       PD10 N(12, 4) NOT NULL, ;
                       PD11 N(12, 4) NOT NULL, ;
                       PD12 N(12, 4) NOT NULL, ;
                       CODNEW C(15) NOT NULL, ;
                       LUGENT N(1, 0) NOT NULL, ;
                       CODUSER C(8) NOT NULL, ;
                       FCHHORA T NOT NULL, ;
                       PREVE1 N(16, 4) NOT NULL, ;
                       PREVE2 N(16, 4) NOT NULL, ;
                       PREVE3 N(16, 4) NOT NULL, ;
                       PREVN1 N(16, 4) NOT NULL, ;
                       PREVN2 N(16, 4) NOT NULL, ;
                       PREVN3 N(16, 4) NOT NULL, ;
                       FLGIGV L NOT NULL, ;
                       FLGPRE L NOT NULL)

***** Create each index for ALMCATGE *****
INDEX ON CODMAT TAG CATG01 COLLATE 'MACHINE'
INDEX ON UPPER(DESMAT) TAG CATG02 COLLATE 'MACHINE'
INDEX ON LEFT(CODMAT,3)+UPPER(DESMAT) TAG CATG03 COLLATE 'MACHINE'
INDEX ON CODEQU TAG CATG05 COLLATE 'MACHINE'
INDEX ON CODREF TAG CATG06 COLLATE 'MACHINE'

***** Change properties for ALMCATGE *****
ENDFUNC

FUNCTION MakeTable_CBDRMOVM
***** Table setup for CBDRMOVM *****
CREATE TABLE 'CBDRMOVM.DBF' NAME 'CBDRMOVM' (NROMES C(2) NOT NULL, ;
                       CODOPE C(3) NOT NULL, ;
                       NROAST C(8) NOT NULL, ;
                       NROITM N(5, 0) NOT NULL, ;
                       CHKITM N(5, 0) NOT NULL, ;
                       ELIITM C(1) NOT NULL, ;
                       CODDIV C(2) NOT NULL, ;
                       CTAPRE C(15) NOT NULL, ;
                       CODCTA C(8) NOT NULL, ;
                       CODREF C(11) NOT NULL, ;
                       CLFAUX C(3) NOT NULL, ;
                       CODAUX C(11) NOT NULL, ;
                       NRORUC C(11) NOT NULL, ;
                       CODDOC C(4) NOT NULL, ;
                       NRODOC C(20) NOT NULL, ;
                       NROREF C(11) NOT NULL, ;
                       FCHDOC D NOT NULL, ;
                       FCHVTO D NOT NULL, ;
                       GLODOC C(50) NOT NULL, ;
                       TPOMOV C(1) NOT NULL, ;
                       IMPORT N(12, 2) NOT NULL, ;
                       CODMON N(1, 0) NOT NULL, ;
                       TPOCMB N(8, 4) NOT NULL, ;
                       IMPUSA N(12, 2) NOT NULL, ;
                       CODBCO C(3) NOT NULL, ;
                       NROCTA C(20) NOT NULL, ;
                       NROCHQ C(10) NOT NULL, ;
                       INIAUX C(8) NOT NULL, ;
                       TIPOC C(1) NOT NULL, ;
                       FCHPED D NOT NULL, ;
                       FCHAST D NOT NULL, ;
                       TIPDOC C(2) NOT NULL, ;
                       TPOO_C C(4) NOT NULL, ;
                       CODFIN C(4) NOT NULL, ;
                       CODCCO C(8) NOT NULL, ;
                       AFECTO C(1) NOT NULL, ;
                       FCHDIG D NOT NULL, ;
                       HORDIG C(8) NOT NULL, ;
                       AN1CTA C(8) NOT NULL, ;
                       CC1CTA C(8) NOT NULL, ;
                       CHKCTA C(10) NOT NULL, ;
                       NRODTR V(20) NOT NULL, ;
                       FCHDTR D NOT NULL, ;
                       TIPORI V(2) NOT NULL, ;
                       NUMORI V(10) NOT NULL, ;
                       NROPRO C(8) NOT NULL, ;
                       FCHPRO D NOT NULL, ;
                       TPOGTO C(6) NOT NULL, ;
                       NRETE C(10) NOT NULL, ;
                       FRETE D NOT NULL, ;
                       AGENTE C(1) NOT NULL, ;
                       SALDO N(10, 2) NOT NULL, ;
                       LIQUI C(10) NOT NULL, ;
                       SALDOS N(10, 2) NOT NULL, ;
                       SALDOD N(10, 2) NOT NULL, ;
                       CODAST N(5, 0) NOT NULL, ;
                       FCHREF D NOT NULL, ;
                       TIPREF C(2) NOT NULL)

***** Create each index for CBDRMOVM *****
INDEX ON NROMES+CODOPE+NROAST+STR(NROITM,5) TAG RMOV01 COLLATE 'MACHINE'
INDEX ON NROMES+CODCTA+DTOS(FCHAST) TAG RMOV02 COLLATE 'MACHINE'
INDEX ON CODCTA+DTOS(FCHPED)+CODOPE TAG RMOV04 COLLATE 'MACHINE'
INDEX ON NROMES+CODOPE+NROAST+CODCTA TAG RMOV07 COLLATE 'MACHINE'
INDEX ON CODCTA+DTOS(FCHVTO)+CODOPE TAG RMOV08 COLLATE 'MACHINE'
INDEX ON CTAPRE+CODCTA TAG RMOV09 COLLATE 'MACHINE'
INDEX ON CODCTA+CODAUX+NRODOC+NROMES+DTOC(FCHDOC,1)+CODOPE+NROAST TAG RMOV06 COLLATE 'MACHINE'
INDEX ON CODOPE+NRODOC TAG RMOV10 COLLATE 'MACHINE'
INDEX ON CODCTA+TIPDOC+NRODOC+CODAUX TAG RMOV11 COLLATE 'MACHINE'
INDEX ON CODCTA+NRODOC+CODAUX+NROMES+DTOC(FCHDOC,1)+CODOPE+NROAST TAG RMOV05 COLLATE 'MACHINE'
INDEX ON NROMES+CODCTA+CODREF+CODOPE+NROAST TAG RMOV03 COLLATE 'MACHINE'

***** Change properties for CBDRMOVM *****
ENDFUNC

FUNCTION MakeTable_CBDACMCT
***** Table setup for CBDACMCT *****
CREATE TABLE 'CBDACMCT.DBF' NAME 'CBDACMCT' (CODCTA C(8) NOT NULL, ;
                       CODREF C(11) NOT NULL, ;
                       NROMES C(2) NOT NULL, ;
                       DBENAC N(12, 2) NOT NULL, ;
                       HBENAC N(12, 2) NOT NULL, ;
                       DBEEXT N(12, 2) NOT NULL, ;
                       HBEEXT N(12, 2) NOT NULL, ;
                       DBENAC01 N(12, 2) NOT NULL, ;
                       HBENAC01 N(12, 2) NOT NULL, ;
                       DBEEXT01 N(12, 2) NOT NULL, ;
                       HBEEXT01 N(12, 2) NOT NULL, ;
                       DBENAC02 N(12, 2) NOT NULL, ;
                       HBENAC02 N(12, 2) NOT NULL, ;
                       DBEEXT02 N(12, 2) NOT NULL, ;
                       HBEEXT02 N(12, 2) NOT NULL, ;
                       DBENAC03 N(12, 2) NOT NULL, ;
                       HBENAC03 N(12, 2) NOT NULL, ;
                       DBEEXT03 N(12, 2) NOT NULL, ;
                       HBEEXT03 N(12, 2) NOT NULL, ;
                       DBENAC04 N(12, 2) NOT NULL, ;
                       HBENAC04 N(12, 2) NOT NULL, ;
                       DBEEXT04 N(12, 2) NOT NULL, ;
                       HBEEXT04 N(12, 2) NOT NULL)

***** Create each index for CBDACMCT *****
INDEX ON CODCTA+CODREF+NROMES TAG ACCT02 COLLATE 'MACHINE'
INDEX ON NROMES+CODCTA+CODREF TAG ACCT01 COLLATE 'MACHINE'

***** Change properties for CBDACMCT *****
ENDFUNC

FUNCTION MakeTable_PLNBLP11
***** Table setup for PLNBLP11 *****
CREATE TABLE 'PLNBLP11.DBF' NAME 'PLNBLP11' (TPOVAR C(1) NOT NULL, ;
                       NROITM N(4, 0) NOT NULL, ;
                       CODMOV C(4) NOT NULL, ;
                       VALACM N(16, 2) NOT NULL, ;
                       VALPLN N(16, 2) NOT NULL, ;
                       VALSEC N(16, 2) NOT NULL, ;
                       VALSC1 N(16, 2) NOT NULL, ;
                       VALSC2 N(16, 2) NOT NULL, ;
                       VALSC3 N(16, 2) NOT NULL, ;
                       VALSC4 N(16, 2) NOT NULL, ;
                       VALSC5 N(16, 2) NOT NULL, ;
                       VALSC6 N(16, 2) NOT NULL, ;
                       CODREF C(4) NOT NULL, ;
                       CODOPE C(3) NOT NULL, ;
                       CODCTA C(8) NOT NULL, ;
                       CTRCTA C(8) NOT NULL, ;
                       NROEMP N(6, 0) NOT NULL, ;
                       NROEP1 N(6, 0) NOT NULL, ;
                       NROEP2 N(6, 0) NOT NULL, ;
                       NROEP3 N(6, 0) NOT NULL, ;
                       NROEP4 N(6, 0) NOT NULL, ;
                       NROEP5 N(6, 0) NOT NULL, ;
                       NROEP6 N(6, 0) NOT NULL, ;
                       GLODOC C(25) NOT NULL, ;
                       CODPAR C(4) NOT NULL)

***** Create each index for PLNBLP11 *****
INDEX ON CODMOV TAG BPGO03 COLLATE 'MACHINE'
INDEX ON TPOVAR+STR(NROITM,4,0)+CODMOV TAG BPGO01 COLLATE 'MACHINE'
INDEX ON CODOPE+CTRCTA+TPOVAR+STR(NROITM,4,0)+CODMOV TAG BPGO02 COLLATE 'MACHINE'

***** Change properties for PLNBLP11 *****
ENDFUNC

FUNCTION MakeTable_PLNBLP22
***** Table setup for PLNBLP22 *****
CREATE TABLE 'PLNBLP22.DBF' NAME 'PLNBLP22' (TPOVAR C(1) NOT NULL, ;
                       NROITM N(4, 0) NOT NULL, ;
                       CODMOV C(4) NOT NULL, ;
                       VALACM N(16, 2) NOT NULL, ;
                       VALPLN N(16, 2) NOT NULL, ;
                       VALSEC N(16, 2) NOT NULL, ;
                       VALSC1 N(16, 2) NOT NULL, ;
                       VALSC2 N(16, 2) NOT NULL, ;
                       VALSC3 N(16, 2) NOT NULL, ;
                       VALSC4 N(16, 2) NOT NULL, ;
                       VALSC5 N(16, 2) NOT NULL, ;
                       VALSC6 N(16, 2) NOT NULL, ;
                       CODREF C(4) NOT NULL, ;
                       CODOPE C(3) NOT NULL, ;
                       CODCTA C(8) NOT NULL, ;
                       CTRCTA C(8) NOT NULL, ;
                       NROEMP N(6, 0) NOT NULL, ;
                       NROEP1 N(6, 0) NOT NULL, ;
                       NROEP2 N(6, 0) NOT NULL, ;
                       NROEP3 N(6, 0) NOT NULL, ;
                       NROEP4 N(6, 0) NOT NULL, ;
                       NROEP5 N(6, 0) NOT NULL, ;
                       NROEP6 N(6, 0) NOT NULL, ;
                       GLODOC C(25) NOT NULL, ;
                       CODPAR C(4) NOT NULL)

***** Create each index for PLNBLP22 *****
INDEX ON CODMOV TAG BPGO03 COLLATE 'MACHINE'
INDEX ON TPOVAR+STR(NROITM,4,0)+CODMOV TAG BPGO01 COLLATE 'MACHINE'
INDEX ON CODOPE+CTRCTA+TPOVAR+STR(NROITM,4,0)+CODMOV TAG BPGO02 COLLATE 'MACHINE'

***** Change properties for PLNBLP22 *****
ENDFUNC

FUNCTION MakeTable_PLNBLPG2
***** Table setup for PLNBLPG2 *****
CREATE TABLE 'PLNBLPG2.DBF' NAME 'PLNBLPG2' (TPOVAR C(1) NOT NULL, ;
                       NROITM N(4, 0) NOT NULL, ;
                       CODMOV C(4) NOT NULL, ;
                       VALACM N(16, 2) NOT NULL, ;
                       VALPLN N(16, 2) NOT NULL, ;
                       VALSEC N(16, 2) NOT NULL, ;
                       VALSC1 N(16, 2) NOT NULL, ;
                       VALSC2 N(16, 2) NOT NULL, ;
                       VALSC3 N(16, 2) NOT NULL, ;
                       VALSC4 N(16, 2) NOT NULL, ;
                       VALSC5 N(16, 2) NOT NULL, ;
                       VALSC6 N(16, 2) NOT NULL, ;
                       CODREF C(4) NOT NULL, ;
                       CODOPE C(3) NOT NULL, ;
                       CODCTA C(8) NOT NULL, ;
                       CTRCTA C(8) NOT NULL, ;
                       NROEMP N(6, 0) NOT NULL, ;
                       NROEP1 N(6, 0) NOT NULL, ;
                       NROEP2 N(6, 0) NOT NULL, ;
                       NROEP3 N(6, 0) NOT NULL, ;
                       NROEP4 N(6, 0) NOT NULL, ;
                       NROEP5 N(6, 0) NOT NULL, ;
                       NROEP6 N(6, 0) NOT NULL, ;
                       GLODOC C(25) NOT NULL, ;
                       CODPAR C(4) NOT NULL)

***** Create each index for PLNBLPG2 *****
INDEX ON TPOVAR+STR(NROITM,4,0)+CODMOV TAG BPGO01 COLLATE 'MACHINE'
INDEX ON CODOPE+CTRCTA+TPOVAR+STR(NROITM,4,0)+CODMOV TAG BPGO02 COLLATE 'MACHINE'

***** Change properties for PLNBLPG2 *****
ENDFUNC

FUNCTION MakeTable_PLNCFGP1
***** Table setup for PLNCFGP1 *****
CREATE TABLE 'PLNCFGP1.DBF' NAME 'PLNCFGP1' (TPOVAR C(1) NOT NULL, ;
                       NROITM N(4, 0) NOT NULL, ;
                       CODMOV C(4) NOT NULL, ;
                       VALACM N(16, 2) NOT NULL, ;
                       VALPLN N(16, 2) NOT NULL, ;
                       CODREF C(4) NOT NULL, ;
                       CODOPE C(3) NOT NULL, ;
                       CODPAR C(4) NOT NULL, ;
                       FLGCAL L NOT NULL, ;
                       CODCTA C(8) NOT NULL, ;
                       CTRCTA C(8) NOT NULL)

***** Create each index for PLNCFGP1 *****
INDEX ON TPOVAR+STR(NROITM,4,0)+CODMOV TAG CFGP101 COLLATE 'MACHINE'

***** Change properties for PLNCFGP1 *****
ENDFUNC

FUNCTION MakeTable_PLNCFGP2
***** Table setup for PLNCFGP2 *****
CREATE TABLE 'PLNCFGP2.DBF' NAME 'PLNCFGP2' (TPOVAR C(1) NOT NULL, ;
                       NROITM N(4, 0) NOT NULL, ;
                       CODMOV C(4) NOT NULL, ;
                       VALACM N(16, 2) NOT NULL, ;
                       VALPLN N(16, 2) NOT NULL, ;
                       CODREF C(4) NOT NULL, ;
                       CODOPE C(3) NOT NULL, ;
                       CODPAR C(4) NOT NULL, ;
                       FLGCAL L NOT NULL)

***** Create each index for PLNCFGP2 *****
INDEX ON TPOVAR+STR(NROITM,4,0)+CODMOV TAG CFGP201 COLLATE 'MACHINE'

***** Change properties for PLNCFGP2 *****
ENDFUNC

FUNCTION MakeTable_PLNDCCTE
***** Table setup for PLNDCCTE *****
CREATE TABLE 'PLNDCCTE.DBF' NAME 'PLNDCCTE' (CODMOV C(4) NOT NULL, ;
                       CODPER C(6) NOT NULL, ;
                       NRODOC C(6) NOT NULL, ;
                       FCHDOC D NOT NULL, ;
                       IMPDOC N(12, 2) NOT NULL, ;
                       SDODOC N(12, 2) NOT NULL, ;
                       SDOANT N(12, 2) NOT NULL, ;
                       IMPDCT N(12, 2) NOT NULL, ;
                       FLGEST C(1) NOT NULL)

***** Create each index for PLNDCCTE *****
INDEX ON CODPER+CODMOV+NRODOC TAG CCTE01 COLLATE 'MACHINE'

***** Change properties for PLNDCCTE *****
ENDFUNC

FUNCTION MakeTable_PLNDECTS
***** Table setup for PLNDECTS *****
CREATE TABLE 'PLNDECTS.DBF' NAME 'PLNDECTS' (FCHINI D NOT NULL, ;
                       FCHFIN D NOT NULL, ;
                       CODPLN C(1) NOT NULL, ;
                       NROPER C(2) NOT NULL, ;
                       CODPER C(6) NOT NULL, ;
                       IMPPAG N(10, 2) NOT NULL, ;
                       LIQUID L NOT NULL)

***** Create each index for PLNDECTS *****
INDEX ON CODPLN+CODPER+DTOC(FCHINI,1) TAG DECT01 COLLATE 'MACHINE'

***** Change properties for PLNDECTS *****
ENDFUNC

FUNCTION MakeTable_PLNDJUDI
***** Table setup for PLNDJUDI *****
CREATE TABLE 'PLNDJUDI.DBF' NAME 'PLNDJUDI' (CODMOV C(4) NOT NULL, ;
                       CODPER C(6) NOT NULL, ;
                       NRODOC C(6) NOT NULL, ;
                       FCHDOC D NOT NULL, ;
                       IMPDOC N(12, 2) NOT NULL, ;
                       SDODOC N(12, 2) NOT NULL, ;
                       SDOANT N(12, 2) NOT NULL, ;
                       IMPDCT N(12, 2) NOT NULL, ;
                       PORJUD N(5, 2) NOT NULL, ;
                       IMPJUD N(12, 2) NOT NULL, ;
                       FLGEST C(1) NOT NULL, ;
                       GLOSA C(40) NOT NULL)

***** Create each index for PLNDJUDI *****
INDEX ON CODPER+CODMOV+NRODOC TAG DJUD01 COLLATE 'MACHINE'
INDEX ON CODPER+CODMOV+NRODOC TAG CCTE01 COLLATE 'MACHINE'

***** Change properties for PLNDJUDI *****
ENDFUNC

FUNCTION MakeTable_PLNDMOVT
***** Table setup for PLNDMOVT *****
CREATE TABLE 'PLNDMOVT.DBF' NAME 'PLNDMOVT' (CODPLN C(1) NOT NULL, ;
                       NROPER C(2) NOT NULL, ;
                       CODPER C(6) NOT NULL, ;
                       CODMOV C(4) NOT NULL, ;
                       VALCAL N(12, 2) NOT NULL, ;
                       VALREF N(6, 0) NOT NULL, ;
                       FLGEST C(1) NOT NULL)

***** Create each index for PLNDMOVT *****
INDEX ON CODPLN+NROPER+CODPER+CODMOV+STR(VALREF,6,0) TAG DMOV01 COLLATE 'MACHINE'
INDEX ON CODPLN+NROPER+CODMOV+CODPER TAG DMOV02 COLLATE 'MACHINE'
INDEX ON CODPLN+CODPER TAG DMOV03 COLLATE 'MACHINE'
INDEX ON CODPLN+CODPER+CODMOV+NROPER TAG DMOV04 COLLATE 'MACHINE'

***** Change properties for PLNDMOVT *****
ENDFUNC

FUNCTION MakeTable_PLNEMOVT
***** Table setup for PLNEMOVT *****
CREATE TABLE 'PLNEMOVT.DBF' NAME 'PLNEMOVT' (NROPER C(2) NOT NULL, ;
                       CODPER C(6) NOT NULL, ;
                       CODMOV C(4) NOT NULL, ;
                       VALCAL N(12, 2) NOT NULL, ;
                       VALREF N(6, 0) NOT NULL)

***** Create each index for PLNEMOVT *****
INDEX ON NROPER+CODPER+CODMOV+STR(VALREF,6,0) TAG DMOV01 COLLATE 'MACHINE'

***** Change properties for PLNEMOVT *****
ENDFUNC

FUNCTION MakeTable_PLNMASIT
***** Table setup for PLNMASIT *****
CREATE TABLE 'PLNMASIT.DBF' NAME 'PLNMASIT' (FCHAST D NOT NULL, ;
                       CODPER C(6) NOT NULL, ;
                       CODREG C(2) NOT NULL, ;
                       TIEMPO N(10, 2) NOT NULL)

***** Create each index for PLNMASIT *****
INDEX ON DTOC(FCHAST,1)+CODPER TAG ASIT01 COLLATE 'MACHINE'
INDEX ON CODPER+DTOC(FCHAST,1) TAG ASIT02 COLLATE 'MACHINE'

***** Change properties for PLNMASIT *****
ENDFUNC

FUNCTION MakeTable_PLNMPERS
***** Table setup for PLNMPERS *****
CREATE TABLE 'PLNMPERS.DBF' NAME 'PLNMPERS' (CODPER C(6) NOT NULL, ;
                       CODPLN C(1) NOT NULL, ;
                       CODSEC C(6) NOT NULL, ;
                       CODCAR C(6) NOT NULL, ;
                       PROGRA C(4) NOT NULL, ;
                       GRA_SG C(3) NOT NULL, ;
                       NIVELS N(2, 0) NOT NULL, ;
                       NPLAZA C(2) NOT NULL, ;
                       GRPPER C(10) NOT NULL, ;
                       APEPAT C(20) NOT NULL, ;
                       APEMAT C(20) NOT NULL, ;
                       NOMBRE C(20) NOT NULL, ;
                       NOMBRES C(20) NOT NULL, ;
                       NOMPER C(60) NOT NULL, ;
                       DIRECC C(60) NOT NULL, ;
                       LOCALI C(15) NOT NULL, ;
                       UBIGEO C(2) NOT NULL, ;
                       PROVIN C(15) NOT NULL, ;
                       TLFPER C(13) NOT NULL, ;
                       SEXPER C(1) NOT NULL, ;
                       GRDINS C(2) NOT NULL, ;
                       PROPER C(2) NOT NULL, ;
                       NROTAR N(10, 0) NOT NULL, ;
                       ESTCVL C(1) NOT NULL, ;
                       FCHNAC D NOT NULL, ;
                       NACION C(15) NOT NULL, ;
                       TPODOC C(2) NOT NULL, ;
                       LELECT C(8) NOT NULL, ;
                       LMILIT C(15) NOT NULL, ;
                       N_IPSS C(16) NOT NULL, ;
                       FCHING D NOT NULL, ;
                       FCHCES D NOT NULL, ;
                       FCHANT D NOT NULL, ;
                       FCHCON D NOT NULL, ;
                       FCHFIN D NOT NULL, ;
                       FCINGR D NOT NULL, ;
                       FCTOIN D NOT NULL, ;
                       FCTOFI D NOT NULL, ;
                       FVACIN D NOT NULL, ;
                       FVACFI D NOT NULL, ;
                       TPOCTA C(2) NOT NULL, ;
                       CTAHOR C(20) NOT NULL, ;
                       LUGPAG C(2) NOT NULL, ;
                       NHIJOS N(2, 0) NOT NULL, ;
                       NCGFAM N(1, 0) NOT NULL, ;
                       LTRIBU C(7) NOT NULL, ;
                       TPOATE C(1) NOT NULL, ;
                       FCHAFP D NOT NULL, ;
                       GRUSAN C(6) NOT NULL, ;
                       DEPEND C(25) NOT NULL, ;
                       DESCAR C(25) NOT NULL, ;
                       C_ASIS C(2) NOT NULL, ;
                       MESVAC C(2) NOT NULL, ;
                       PERVAC C(5) NOT NULL, ;
                       N_CHEQ N(8, 0) NOT NULL, ;
                       CTACTS C(10) NOT NULL, ;
                       NCUSPP C(12) NOT NULL, ;
                       GUARDI C(1) NOT NULL, ;
                       DOMINI C(1) NOT NULL, ;
                       QUINQE N(2, 0) NOT NULL, ;
                       ARECAP C(6) NOT NULL, ;
                       CODAFP C(2) NOT NULL, ;
                       CARAFP C(12) NOT NULL, ;
                       TIPOSA C(22) NOT NULL, ;
                       SOBREV N(1, 0) NOT NULL, ;
                       AREA C(6) NOT NULL, ;
                       DIVISION C(6) NOT NULL, ;
                       CODCOP C(6) NOT NULL, ;
                       GEREC C(1) NOT NULL, ;
                       TPOPER C(2) NOT NULL, ;
                       TPOAFI C(1) NOT NULL, ;
                       CODSCT C(2) NOT NULL, ;
                       CODESS C(2) NOT NULL, ;
                       CODCCO C(8) NOT NULL, ;
                       RUCEPS C(11) NOT NULL)

***** Create each index for PLNMPERS *****
INDEX ON PROGRA+CODPER TAG PERS09 COLLATE 'MACHINE'
INDEX ON CODPER TAG PERS01 COLLATE 'MACHINE'
INDEX ON UPPER(NOMPER) TAG PERS02 COLLATE 'MACHINE'
INDEX ON CODPLN+CODSEC+CODPER TAG PERS07 COLLATE 'MACHINE'
INDEX ON LUGPAG+CTACTS+CODPER TAG PERS04 COLLATE 'MACHINE'
INDEX ON CODPLN+CODSEC+UPPER(NOMPER) TAG PERS03 COLLATE 'MACHINE'
INDEX ON LUGPAG+UPPER(NOMPER) TAG PERS05 COLLATE 'MACHINE'
INDEX ON CODSEC+CODPER TAG PERS06 COLLATE 'MACHINE'
INDEX ON CODAFP TAG PERS11 COLLATE 'MACHINE'
INDEX ON CTACTS+CODPER TAG PERS13 COLLATE 'MACHINE'
INDEX ON CTACTS+CODPER TAG PERS10 COLLATE 'MACHINE'
INDEX ON GRA_SG+DIVISION+AREA+CODSEC TAG PERS12 COLLATE 'MACHINE'
INDEX ON GRA_SG+DIVISION+AREA+CODSEC+UPPER(NOMPER) TAG PERS14 COLLATE 'MACHINE'

***** Change properties for PLNMPERS *****
ENDFUNC

FUNCTION MakeTable_PLNMTSEM
***** Table setup for PLNMTSEM *****
CREATE TABLE 'PLNMTSEM.DBF' NAME 'PLNMTSEM' (SEMA C(2) NOT NULL, ;
                       FCHFER D NOT NULL, ;
                       FCHFE2 D NOT NULL, ;
                       MES C(2) NOT NULL, ;
                       NOMBRE C(15) NOT NULL)

***** Create each index for PLNMTSEM *****
INDEX ON SEMA TAG SEMA01 COLLATE 'MACHINE'
INDEX ON SEMA+MES TAG SEMA02 COLLATE 'MACHINE'
INDEX ON MES+SEMA TAG SEMA03 COLLATE 'MACHINE'

***** Change properties for PLNMTSEM *****
ENDFUNC

FUNCTION MakeTable_PLNPERIO
***** Table setup for PLNPERIO *****
CREATE TABLE 'PLNPERIO.DBF' NAME 'PLNPERIO' (NROPER C(2) NOT NULL, ;
                       FCHINI D NOT NULL, ;
                       FCHFIN D NOT NULL)

***** Create each index for PLNPERIO *****
INDEX ON NROPER TAG PRDO01 COLLATE 'MACHINE'

***** Change properties for PLNPERIO *****
ENDFUNC

FUNCTION MakeTable_PLNTDIAS
***** Table setup for PLNTDIAS *****
CREATE TABLE 'PLNTDIAS.DBF' NAME 'PLNTDIAS' (CODPLN C(1) NOT NULL, ;
                       NROPER C(2) NOT NULL, ;
                       CODPER C(6) NOT NULL, ;
                       CODMOV C(4) NOT NULL, ;
                       VALCAL N(12, 2) NOT NULL, ;
                       VALREF N(6, 0) NOT NULL, ;
                       FLGEST C(1) NOT NULL)

***** Create each index for PLNTDIAS *****

***** Change properties for PLNTDIAS *****
ENDFUNC

FUNCTION MakeTable_PLNTMOV2
***** Table setup for PLNTMOV2 *****
CREATE TABLE 'PLNTMOV2.DBF' NAME 'PLNTMOV2' (CODMOV C(4) NOT NULL, ;
                       DESMOV C(25) NOT NULL, ;
                       FLGEST C(1) NOT NULL, ;
                       AGRPSI C(1) NOT NULL, ;
                       AGRPNO C(1) NOT NULL, ;
                       TPOVAR C(1) NOT NULL, ;
                       SITMOV C(1) NOT NULL, ;
                       CIEMOV N(1, 0) NOT NULL, ;
                       CIECAL N(1, 0) NOT NULL, ;
                       ENTMOV N(2, 0) NOT NULL, ;
                       DECMOV N(1, 0) NOT NULL, ;
                       RGOMOV C(1) NOT NULL, ;
                       VALMIN N(19, 4) NOT NULL, ;
                       VALMAX N(19, 4) NOT NULL, ;
                       VALMOV N(19, 4) NOT NULL, ;
                       FMLMOV C(160) NOT NULL, ;
                       CODCTA C(5) NOT NULL, ;
                       TPOMOV C(1) NOT NULL)

***** Create each index for PLNTMOV2 *****
INDEX ON CODMOV TAG TMOV02 COLLATE 'MACHINE'
INDEX ON CODMOV TAG TMOV01 COLLATE 'MACHINE'

***** Change properties for PLNTMOV2 *****
ENDFUNC

FUNCTION MakeTable_PLNTPERI
***** Table setup for PLNTPERI *****
CREATE TABLE 'PLNTPERI.DBF' NAME 'PLNTPERI' (CODPLN C(1) NOT NULL, ;
                       NROPER C(2) NOT NULL, ;
                       CODPER C(6) NOT NULL, ;
                       CODMOV C(4) NOT NULL, ;
                       VALCAL N(12, 2) NOT NULL, ;
                       VALREF N(6, 0) NOT NULL, ;
                       FLGEST C(1) NOT NULL)

***** Create each index for PLNTPERI *****

***** Change properties for PLNTPERI *****
ENDFUNC

FUNCTION MakeTable_PLNTTCMB
***** Table setup for PLNTTCMB *****
CREATE TABLE 'PLNTTCMB.DBF' NAME 'PLNTTCMB' (NROMES C(2) NOT NULL, ;
                       OFIVTA N(12, 4) NOT NULL, ;
                       OFICMP N(12, 4) NOT NULL)

***** Create each index for PLNTTCMB *****
INDEX ON NROMES TAG TCMB01 COLLATE 'MACHINE'

***** Change properties for PLNTTCMB *****
ENDFUNC

FUNCTION MakeTable_CMPOCPRY
***** Table setup for CMPOCPRY *****
CREATE TABLE 'CMPOCPRY.DBF' NAME 'CMPOCPRY' (TIPCMP C(1) NOT NULL, ;
                       PERIODO C(6) NOT NULL, ;
                       NROORD C(8) NOT NULL, ;
                       NROOR2 C(7) NOT NULL, ;
                       FCHORD D NOT NULL, ;
                       CODAUX C(11) NOT NULL, ;
                       RUCAUX C(11) NOT NULL, ;
                       NOMAUX C(40) NOT NULL, ;
                       DIRAUX C(50) NOT NULL, ;
                       TLFAUX C(25) NOT NULL, ;
                       NROCOT C(10) NOT NULL, ;
                       DIAENT N(3, 0) NOT NULL, ;
                       CNDPGO C(70) NOT NULL, ;
                       CODMON N(1, 0) NOT NULL, ;
                       TPOCMB N(10, 4) NOT NULL, ;
                       PORIGV N(5, 2) NOT NULL, ;
                       PORDTO N(5, 2) NOT NULL, ;
                       IMPBTO N(12, 2) NOT NULL, ;
                       IMPDTO N(12, 2) NOT NULL, ;
                       IMPINT N(12, 2) NOT NULL, ;
                       IMPADM N(12, 2) NOT NULL, ;
                       IMPIGV N(12, 2) NOT NULL, ;
                       IMPNET N(12, 2) NOT NULL, ;
                       IMPFLT N(12, 2) NOT NULL, ;
                       GLODOC M NOT NULL, ;
                       FLGEST C(1) NOT NULL, ;
                       FCHENT D NOT NULL, ;
                       MARCAS M NOT NULL, ;
                       TPOCMP C(1) NOT NULL, ;
                       HORA C(5) NOT NULL, ;
                       CODCMP C(3) NOT NULL, ;
                       PORDTO1 N(5, 2) NOT NULL, ;
                       PORDTO2 N(5, 2) NOT NULL, ;
                       PORDTO3 N(5, 2) NOT NULL, ;
                       IMPDTO1 N(12, 2) NOT NULL, ;
                       IMPDTO2 N(12, 2) NOT NULL, ;
                       IMPDTO3 N(12, 2) NOT NULL, ;
                       NROREQ C(4) NOT NULL, ;
                       CODUAS C(7) NOT NULL, ;
                       USUARIO C(3) NOT NULL, ;
                       CODREF C(4) NOT NULL, ;
                       TPOO_C C(1) NOT NULL, ;
                       IMPFOB N(12, 2) NOT NULL, ;
                       IMPFLE N(12, 2) NOT NULL, ;
                       IMPSEG N(12, 2) NOT NULL, ;
                       IMPCIF N(12, 2) NOT NULL, ;
                       IMPINS N(12, 2) NOT NULL, ;
                       IMPADV N(12, 2) NOT NULL, ;
                       IMPPAP N(12, 2) NOT NULL, ;
                       IMPHAN N(12, 2) NOT NULL, ;
                       IMPOTR N(12, 2) NOT NULL, ;
                       IMPRTG N(12, 2) NOT NULL, ;
                       NROCOP N(4, 0) NOT NULL, ;
                       IMPADU N(12, 2) NOT NULL, ;
                       IMPMTT N(12, 2) NOT NULL, ;
                       STATUS C(2) NOT NULL, ;
                       LUGENT C(10) NOT NULL, ;
                       IMPVTA N(12, 2) NOT NULL, ;
                       PAGADE C(1) NOT NULL, ;
                       FMAPGO C(4) NOT NULL, ;
                       DESPGO C(25) NOT NULL, ;
                       REFERE C(15) NOT NULL, ;
                       TMPENT C(20) NOT NULL, ;
                       TIPFLE C(1) NOT NULL, ;
                       PRUEBA C(1) NOT NULL, ;
                       FLGACE C(1) NOT NULL, ;
                       TPOBIE C(1) NOT NULL, ;
                       TASA N(6, 2) NOT NULL, ;
                       PGOADU C(4) NOT NULL, ;
                       PGOSEG C(4) NOT NULL, ;
                       PGOASG C(4) NOT NULL, ;
                       PGOFLE C(4) NOT NULL, ;
                       CODADU C(2) NOT NULL, ;
                       CODSEG C(2) NOT NULL, ;
                       CODASG C(2) NOT NULL, ;
                       IMPSGS N(12, 2) NOT NULL, ;
                       DERESP N(12, 2) NOT NULL, ;
                       SOBTAS N(12, 2) NOT NULL, ;
                       REINTE N(12, 2) NOT NULL, ;
                       FLGCMB L NOT NULL, ;
                       FCHEMB D NOT NULL, ;
                       FCHLLE D NOT NULL, ;
                       NDPREV N(3, 0) NOT NULL, ;
                       FPGFLT N(1, 0) NOT NULL)

***** Create each index for CMPOCPRY *****
INDEX ON NROORD TAG CO_C01 COLLATE 'MACHINE'
INDEX ON FLGEST+NROORD TAG CO_C02 COLLATE 'MACHINE'
INDEX ON FLGEST+DTOS(FCHENT) TAG CO_C03 COLLATE 'MACHINE'
INDEX ON FLGEST+NOMAUX TAG CO_C04 COLLATE 'MACHINE'
INDEX ON DTOS(FCHORD)+NROORD TAG CO_C05 COLLATE 'MACHINE'
INDEX ON NROOR2 TAG CO_C07 COLLATE 'MACHINE'
INDEX ON CODAUX+DTOS(FCHORD) TAG CO_C06 COLLATE 'MACHINE'
INDEX ON TIPCMP+PERIODO+CODAUX+FMAPGO+LEFT(LUGENT,1) TAG CO_C08 COLLATE 'MACHINE'

***** Change properties for CMPOCPRY *****
ENDFUNC

FUNCTION MakeTable_CMPDOANT
***** Table setup for CMPDOANT *****
CREATE TABLE 'CMPDOANT.DBF' NAME 'CMPDOANT' (TPOREG C(4) NOT NULL, ;
                       NROORD C(7) NOT NULL, ;
                       NROREQ C(7) NOT NULL, ;
                       FCHENT D NOT NULL, ;
                       TPOREQ C(1) NOT NULL, ;
                       CODMAT C(15) NOT NULL, ;
                       DESMAT C(40) NOT NULL, ;
                       UNDCMP C(3) NOT NULL, ;
                       FACEQU N(10, 4) NOT NULL, ;
                       PREUNI N(16, 6) NOT NULL, ;
                       CANPED N(14, 4) NOT NULL, ;
                       PORDTO N(10, 4) NOT NULL, ;
                       IMPLIN N(12, 2) NOT NULL, ;
                       CANDES N(14, 4) NOT NULL, ;
                       FLGEST C(1) NOT NULL, ;
                       USUARIO C(3) NOT NULL, ;
                       CODUAS C(7) NOT NULL, ;
                       PREFOB N(16, 6) NOT NULL, ;
                       FCHORD D NOT NULL, ;
                       FCHPROG D NOT NULL, ;
                       MARCA C(20) NOT NULL, ;
                       PESO N(10, 4) NOT NULL, ;
                       TPOBIE C(1) NOT NULL, ;
                       CODNEW C(15) NOT NULL, ;
                       ESTFLJ C(1) NOT NULL, ;
                       CANXAT N(14, 4) NOT NULL)

***** Create each index for CMPDOANT *****
INDEX ON NROORD+USUARIO+NROREQ TAG DO_C02 COLLATE 'MACHINE'
INDEX ON USUARIO+NROREQ TAG DO_C04 COLLATE 'MACHINE'
INDEX ON NROORD+USUARIO+NROREQ+CODMAT TAG DO_C01 COLLATE 'MACHINE'
INDEX ON NROORD+CODMAT+NROREQ TAG DO_C03 COLLATE 'MACHINE'
INDEX ON CODMAT+NROORD+DTOS(FCHENT) TAG DO_C05 COLLATE 'MACHINE'
INDEX ON CODMAT+DTOS(FCHORD)+NROORD TAG DO_C06 COLLATE 'MACHINE'
INDEX ON CODMAT+NROORD+NROREQ TAG DO_C07 COLLATE 'MACHINE'
INDEX ON CODMAT+DTOS(FCHORD)+NROORD TAG DO_C08 COLLATE 'MACHINE'

***** Change properties for CMPDOANT *****
ENDFUNC

FUNCTION MakeTable_CMPDC_IM
***** Table setup for CMPDC_IM *****
CREATE TABLE 'CMPDC_IM.DBF' NAME 'CMPDC_IM' (PERENT C(6) NOT NULL, ;
                       TPOREG C(4) NOT NULL, ;
                       CODAUX C(11) NOT NULL, ;
                       FMAPGO C(4) NOT NULL, ;
                       NROORD C(8) NOT NULL, ;
                       NROREQ C(7) NOT NULL, ;
                       FCHENT D NOT NULL, ;
                       TPOREQ C(1) NOT NULL, ;
                       CODMAT C(15) NOT NULL, ;
                       DESMAT C(40) NOT NULL, ;
                       UNDCMP C(3) NOT NULL, ;
                       FACEQU N(10, 4) NOT NULL, ;
                       CANPED N(14, 4) NOT NULL, ;
                       PRECMP N(12, 4) NOT NULL, ;
                       FLGEST C(1) NOT NULL, ;
                       USUARIO C(10) NOT NULL, ;
                       TPOBIE C(1) NOT NULL, ;
                       FCHORD D NOT NULL, ;
                       PORFOB N(6, 2) NOT NULL, ;
                       IMPFOB N(12, 2) NOT NULL, ;
                       POROTR N(6, 2) NOT NULL, ;
                       IMPOTR N(12, 2) NOT NULL, ;
                       PORFLE N(6, 2) NOT NULL, ;
                       IMPFLE N(12, 2) NOT NULL, ;
                       PORSEG N(6, 2) NOT NULL, ;
                       IMPSEG N(12, 2) NOT NULL, ;
                       PORCIF N(6, 2) NOT NULL, ;
                       IMPCIF N(12, 2) NOT NULL, ;
                       PORADV N(6, 2) NOT NULL, ;
                       IMPADV N(12, 2) NOT NULL, ;
                       PORDER N(6, 2) NOT NULL, ;
                       IMPDER N(12, 2) NOT NULL, ;
                       PORTAS N(6, 2) NOT NULL, ;
                       IMPTAS N(12, 2) NOT NULL, ;
                       PORREI N(6, 2) NOT NULL, ;
                       IMPREI N(12, 2) NOT NULL, ;
                       PORADU N(6, 2) NOT NULL, ;
                       IMPADU N(12, 2) NOT NULL, ;
                       PORSGS N(6, 2) NOT NULL, ;
                       IMPSGS N(12, 2) NOT NULL, ;
                       GLOSA C(35) NOT NULL, ;
                       GLOSA2 C(35) NOT NULL, ;
                       FLGEMI C(1) NOT NULL, ;
                       NROITM C(2) NOT NULL, ;
                       CODPRV C(6) NOT NULL, ;
                       CODFPG C(4) NOT NULL, ;
                       LUGENT C(1) NOT NULL, ;
                       CODNEW C(15) NOT NULL)

***** Create each index for CMPDC_IM *****
INDEX ON TPOREG+NROORD+NROREQ TAG DC_I02 COLLATE 'MACHINE'
INDEX ON TPOREG+NROORD+CODMAT+NROREQ TAG DC_I01 COLLATE 'MACHINE'
INDEX ON TPOREG+CODMAT+DTOS(FCHORD) TAG DC_I03 DESCENDING  COLLATE 'MACHINE'
INDEX ON TPOREG+CODAUX+CODMAT TAG DC_I04 COLLATE 'MACHINE'
INDEX ON TPOREG+CODMAT+CODAUX+FMAPGO TAG DC_I05 COLLATE 'MACHINE'
INDEX ON PERENT+TPOREG+CODMAT+CODAUX+FMAPGO+NROORD TAG DC_I06 COLLATE 'MACHINE'
INDEX ON PERENT+TPOREG+CODAUX+FMAPGO+LUGENT TAG DC_I07 COLLATE 'MACHINE'
INDEX ON PERENT+TPOREG+CODMAT+CODAUX+FMAPGO TAG DC_I08 COLLATE 'MACHINE'

***** Change properties for CMPDC_IM *****
ENDFUNC

FUNCTION MakeTable_CMPCOANT
***** Table setup for CMPCOANT *****
CREATE TABLE 'CMPCOANT.DBF' NAME 'CMPCOANT' (NROORD C(7) NOT NULL, ;
                       NROOR2 C(7) NOT NULL, ;
                       FCHORD D NOT NULL, ;
                       CODAUX C(11) NOT NULL, ;
                       RUCAUX C(11) NOT NULL, ;
                       NOMAUX C(40) NOT NULL, ;
                       DIRAUX C(50) NOT NULL, ;
                       TLFAUX C(25) NOT NULL, ;
                       NROCOT C(10) NOT NULL, ;
                       DIAENT N(3, 0) NOT NULL, ;
                       CNDPGO C(70) NOT NULL, ;
                       CODMON N(1, 0) NOT NULL, ;
                       TPOCMB N(10, 4) NOT NULL, ;
                       PORIGV N(5, 2) NOT NULL, ;
                       PORDTO N(5, 2) NOT NULL, ;
                       IMPBTO N(12, 2) NOT NULL, ;
                       IMPDTO N(12, 2) NOT NULL, ;
                       IMPINT N(12, 2) NOT NULL, ;
                       IMPADM N(12, 2) NOT NULL, ;
                       IMPIGV N(12, 2) NOT NULL, ;
                       IMPNET N(12, 2) NOT NULL, ;
                       IMPFLT N(12, 2) NOT NULL, ;
                       GLODOC M NOT NULL, ;
                       FLGEST C(1) NOT NULL, ;
                       FCHENT D NOT NULL, ;
                       MARCAS M NOT NULL, ;
                       TPOCMP C(1) NOT NULL, ;
                       HORA C(5) NOT NULL, ;
                       CODCMP C(3) NOT NULL, ;
                       PORDTO1 N(5, 2) NOT NULL, ;
                       PORDTO2 N(5, 2) NOT NULL, ;
                       PORDTO3 N(5, 2) NOT NULL, ;
                       IMPDTO1 N(12, 2) NOT NULL, ;
                       IMPDTO2 N(12, 2) NOT NULL, ;
                       IMPDTO3 N(12, 2) NOT NULL, ;
                       NROREQ C(4) NOT NULL, ;
                       CODUAS C(7) NOT NULL, ;
                       USUARIO C(3) NOT NULL, ;
                       CODREF C(4) NOT NULL, ;
                       TPOO_C C(1) NOT NULL, ;
                       IMPFOB N(12, 2) NOT NULL, ;
                       IMPFLE N(12, 2) NOT NULL, ;
                       IMPSEG N(12, 2) NOT NULL, ;
                       IMPCIF N(12, 2) NOT NULL, ;
                       IMPINS N(12, 2) NOT NULL, ;
                       IMPADV N(12, 2) NOT NULL, ;
                       IMPPAP N(12, 2) NOT NULL, ;
                       IMPHAN N(12, 2) NOT NULL, ;
                       IMPOTR N(12, 2) NOT NULL, ;
                       IMPRTG N(12, 2) NOT NULL, ;
                       NROCOP N(4, 0) NOT NULL, ;
                       IMPADU N(12, 2) NOT NULL, ;
                       IMPMTT N(12, 2) NOT NULL, ;
                       STATUS C(2) NOT NULL, ;
                       LUGENT C(10) NOT NULL, ;
                       IMPVTA N(12, 2) NOT NULL, ;
                       PAGADE C(1) NOT NULL, ;
                       FMAPGO C(4) NOT NULL, ;
                       COTIMP C(25) NOT NULL, ;
                       REFERE C(15) NOT NULL, ;
                       TMPENT C(20) NOT NULL, ;
                       TIPFLE C(1) NOT NULL, ;
                       PRUEBA C(1) NOT NULL, ;
                       FLGACE C(1) NOT NULL, ;
                       TPOBIE C(1) NOT NULL, ;
                       TASA N(6, 2) NOT NULL, ;
                       PGOADU C(4) NOT NULL, ;
                       PGOSEG C(4) NOT NULL, ;
                       PGOASG C(4) NOT NULL, ;
                       PGOFLE C(4) NOT NULL, ;
                       CODADU C(2) NOT NULL, ;
                       CODSEG C(2) NOT NULL, ;
                       CODASG C(2) NOT NULL, ;
                       IMPSGS N(12, 2) NOT NULL, ;
                       DERESP N(12, 2) NOT NULL, ;
                       SOBTAS N(12, 2) NOT NULL, ;
                       REINTE N(12, 2) NOT NULL, ;
                       FLGCMB L NOT NULL, ;
                       FCHEMB D NOT NULL, ;
                       FCHLLE D NOT NULL, ;
                       NDPREV N(3, 0) NOT NULL, ;
                       FPGFLT N(1, 0) NOT NULL)

***** Create each index for CMPCOANT *****
INDEX ON NROORD TAG CO_C01 COLLATE 'MACHINE'
INDEX ON FLGEST+NROORD TAG CO_C02 COLLATE 'MACHINE'
INDEX ON FLGEST+DTOS(FCHENT) TAG CO_C03 COLLATE 'MACHINE'
INDEX ON FLGEST+NOMAUX TAG CO_C04 COLLATE 'MACHINE'
INDEX ON DTOS(FCHORD)+NROORD TAG CO_C05 COLLATE 'MACHINE'
INDEX ON NROOR2 TAG CO_C07 COLLATE 'MACHINE'
INDEX ON CODAUX+DTOS(FCHORD) TAG CO_C06 COLLATE 'MACHINE'

***** Change properties for CMPCOANT *****
ENDFUNC

FUNCTION MakeTable_ALMDSERI
***** Table setup for ALMDSERI *****
CREATE TABLE 'ALMDSERI.DBF' NAME 'ALMDSERI' (CODSED C(3) NOT NULL, ;
                       CODMAT C(15) NOT NULL, ;
                       LOTE C(15) NOT NULL, ;
                       SERIE C(20) NOT NULL, ;
                       TPOREF C(4) NOT NULL, ;
                       NROREF C(10) NOT NULL, ;
                       FCHVTO D NOT NULL, ;
                       SUBALM C(3) NOT NULL, ;
                       STKSUB N(14, 4) NOT NULL, ;
                       STKACT N(14, 4) NOT NULL, ;
                       STKINI N(14, 4) NOT NULL, ;
                       STK01 N(14, 4) NOT NULL, ;
                       STK02 N(14, 4) NOT NULL, ;
                       STK03 N(14, 4) NOT NULL, ;
                       STK04 N(14, 4) NOT NULL, ;
                       STK05 N(14, 4) NOT NULL, ;
                       STK06 N(14, 4) NOT NULL, ;
                       STK07 N(14, 4) NOT NULL, ;
                       STK08 N(14, 4) NOT NULL, ;
                       STK09 N(14, 4) NOT NULL, ;
                       STK10 N(14, 4) NOT NULL, ;
                       STK11 N(14, 4) NOT NULL, ;
                       STK12 N(14, 4) NOT NULL, ;
                       TPOREF2 C(4) NOT NULL, ;
                       NROREF2 C(10) NOT NULL, ;
                       UNIGAR C(1) NOT NULL, ;
                       GARANTIA N(3, 0) NOT NULL, ;
                       TMPENT N(6, 0) NOT NULL)

***** Create each index for ALMDSERI *****
INDEX ON CODSED+SUBALM+CODMAT+LOTE+SERIE+DTOS(FCHVTO) TAG DSERI01 COLLATE 'MACHINE'
INDEX ON CODMAT+LOTE+SERIE+DTOS(FCHVTO) TAG DSERI02 COLLATE 'MACHINE'
INDEX ON CODSED+SUBALM+CODMAT+DTOS(FCHVTO) TAG DSERI03 COLLATE 'MACHINE'
INDEX ON CODSED+SUBALM+CODMAT+SERIE TAG DSERI04 COLLATE 'MACHINE'
INDEX ON CODMAT+SERIE TAG DSERI05 COLLATE 'MACHINE'

***** Change properties for ALMDSERI *****
ENDFUNC

FUNCTION MakeTable_ALMCORRE
***** Table setup for ALMCORRE *****
CREATE TABLE 'ALMCORRE.DBF' NAME 'ALMCORRE' (TIPO C(5) NOT NULL, ;
                       CODREF C(20) NOT NULL, ;
                       NUMERO N(10, 0) NOT NULL)

***** Create each index for ALMCORRE *****
INDEX ON TIPO TAG CORR02 COLLATE 'MACHINE'
INDEX ON TIPO+CODREF TAG CORR01 COLLATE 'MACHINE'

***** Change properties for ALMCORRE *****
ENDFUNC

FUNCTION MakeTable_PLNBLPG1
***** Table setup for PLNBLPG1 *****
CREATE TABLE 'PLNBLPG1.DBF' NAME 'PLNBLPG1' (TPOVAR C(1) NOT NULL, ;
                       NROITM N(4, 0) NOT NULL, ;
                       CODMOV C(4) NOT NULL, ;
                       VALACM N(16, 2) NOT NULL, ;
                       VALPLN N(16, 2) NOT NULL, ;
                       VALSEC N(16, 2) NOT NULL, ;
                       VALSC1 N(16, 2) NOT NULL, ;
                       VALSC2 N(16, 2) NOT NULL, ;
                       VALSC3 N(16, 2) NOT NULL, ;
                       VALSC4 N(16, 2) NOT NULL, ;
                       VALSC5 N(16, 2) NOT NULL, ;
                       VALSC6 N(16, 2) NOT NULL, ;
                       CODREF C(4) NOT NULL, ;
                       CODOPE C(3) NOT NULL, ;
                       CODCTA C(8) NOT NULL, ;
                       TPOMOV_CTA C(1) NOT NULL, ;
                       CTRCTA C(8) NOT NULL, ;
                       TPOMOV_CTR C(1) NOT NULL, ;
                       NROEMP N(6, 0) NOT NULL, ;
                       NROEP1 N(6, 0) NOT NULL, ;
                       NROEP2 N(6, 0) NOT NULL, ;
                       NROEP3 N(6, 0) NOT NULL, ;
                       NROEP4 N(6, 0) NOT NULL, ;
                       NROEP5 N(6, 0) NOT NULL, ;
                       NROEP6 N(6, 0) NOT NULL, ;
                       GLODOC C(25) NOT NULL, ;
                       CODPAR C(4) NOT NULL, ;
                       FLGCAL L NOT NULL, ;
                       TPOMOV_D C(1) NOT NULL, ;
                       TPOMOV_H C(1) NOT NULL)

***** Create each index for PLNBLPG1 *****
INDEX ON TPOVAR+STR(NROITM,4,0)+CODMOV TAG BPGO01 COLLATE 'MACHINE'
INDEX ON CODOPE+CTRCTA+TPOVAR+STR(NROITM,4,0)+CODMOV TAG BPGO02 COLLATE 'MACHINE'

***** Change properties for PLNBLPG1 *****
ENDFUNC

FUNCTION MakeTable_PLNTMOV1
***** Table setup for PLNTMOV1 *****
CREATE TABLE 'PLNTMOV1.DBF' NAME 'PLNTMOV1' (CODMOV C(4) NOT NULL, ;
                       DESMOV C(25) NOT NULL, ;
                       FLGEST C(1) NOT NULL, ;
                       AGRPSI C(1) NOT NULL, ;
                       AGRPNO C(1) NOT NULL, ;
                       TPOVAR C(1) NOT NULL, ;
                       SITMOV C(1) NOT NULL, ;
                       CIEMOV N(1, 0) NOT NULL, ;
                       CIECAL N(1, 0) NOT NULL, ;
                       ENTMOV N(2, 0) NOT NULL, ;
                       DECMOV N(1, 0) NOT NULL, ;
                       RGOMOV C(1) NOT NULL, ;
                       VALMIN N(19, 4) NOT NULL, ;
                       VALMAX N(19, 4) NOT NULL, ;
                       VALMOV N(19, 4) NOT NULL, ;
                       FMLMOV C(160) NOT NULL, ;
                       CODCTA C(5) NOT NULL, ;
                       TPOMOV C(1) NOT NULL)

***** Create each index for PLNTMOV1 *****
INDEX ON CODMOV TAG TMOV01 COLLATE 'MACHINE'

***** Change properties for PLNTMOV1 *****
ENDFUNC

FUNCTION MakeTable_PLNMPDER
***** Table setup for PLNMPDER *****
CREATE TABLE 'PLNMPDER.DBF' NAME 'PLNMPDER' (CODPLN C(1) NOT NULL, ;
                       CODPER C(6) NOT NULL, ;
                       NOMDER C(60) NOT NULL, ;
                       TPODOC_DER C(2) NOT NULL, ;
                       NRODOC_DER C(15) NOT NULL, ;
                       APEPAT_DER C(20) NOT NULL, ;
                       APEMAT_DER C(20) NOT NULL, ;
                       NOMBRE_DER C(20) NOT NULL, ;
                       FCHNAC_DER D NOT NULL, ;
                       SEXO_DER C(1) NOT NULL, ;
                       VINCULO C(1) NOT NULL, ;
                       TPDOC2_DER C(1) NOT NULL, ;
                       CARTA_DER C(20) NOT NULL, ;
                       SITDER C(2) NOT NULL, ;
                       MOTBAJ_DER C(1) NOT NULL, ;
                       DOCINC_DER C(20) NOT NULL, ;
                       INDDOM_DER C(1) NOT NULL, ;
                       NOMVIA_DER C(20) NOT NULL, ;
                       NUMERO_DER C(4) NOT NULL, ;
                       INTERI_DER C(4) NOT NULL, ;
                       NOMZON_DER C(20) NOT NULL, ;
                       REFERE_DER C(40) NOT NULL, ;
                       TIPVIA_DER C(2) NOT NULL, ;
                       TIPZON_DER C(2) NOT NULL, ;
                       UBIGEO_DER C(6) NOT NULL)

***** Create each index for PLNMPDER *****
INDEX ON CODPLN+CODPER TAG PDER01 COLLATE 'MACHINE'

***** Change properties for PLNMPDER *****
ENDFUNC

FUNCTION MakeTable_CBDMCTAS
***** Table setup for CBDMCTAS *****
CREATE TABLE 'CBDMCTAS.DBF' NAME 'CBDMCTAS' (CODCTA C(8) NOT NULL, ;
                       NOMCTA C(60) NOT NULL, ;
                       CTAE2010 C(8) NOT NULL, ;
                       CTAE2010B C(8) NOT NULL, ;
                       FILTRO C(20) NOT NULL, ;
                       NIVCTA N(1, 0) NOT NULL, ;
                       TPOMOV C(1) NOT NULL, ;
                       AFTMOV C(1) NOT NULL, ;
                       AFTDCB C(1) NOT NULL, ;
                       CODMON N(1, 0) NOT NULL, ;
                       TPOCMB N(1, 0) NOT NULL, ;
                       TPOCTA N(1, 0) NOT NULL, ;
                       PIDAUX C(1) NOT NULL, ;
                       CLFAUX C(3) NOT NULL, ;
                       PIDDOC C(1) NOT NULL, ;
                       PIDCCO C(1) NOT NULL, ;
                       CODDOC C(3) NOT NULL, ;
                       CIERES C(1) NOT NULL, ;
                       GENAUT C(1) NOT NULL, ;
                       AN1CTA C(8) NOT NULL, ;
                       CC1CTA C(8) NOT NULL, ;
                       AN2CTA C(8) NOT NULL, ;
                       CC2CTA C(8) NOT NULL, ;
                       AN2CTAME C(8) NOT NULL, ;
                       CODREF C(5) NOT NULL, ;
                       NROCTA C(35) NOT NULL, ;
                       CODBCO C(3) NOT NULL, ;
                       PIDGLO C(1) NOT NULL, ;
                       MAYAUX C(1) NOT NULL, ;
                       MAYCCO C(1) NOT NULL, ;
                       NROCHQ C(10) NOT NULL, ;
                       SECBCO C(30) NOT NULL, ;
                       REFBCO C(10) NOT NULL, ;
                       TPOGTO C(3) NOT NULL, ;
                       FLGBCO C(1) NOT NULL, ;
                       CTACJA C(1) NOT NULL, ;
                       PORCEN N(5, 2) NOT NULL, ;
                       CCTDEF L NOT NULL, ;
                       AN1_SUBCTA L NOT NULL, ;
                       CC1_SUBCTA L NOT NULL, ;
                       TIP_AFE_RV C(1) NOT NULL, ;
                       TIP_AFE_RC C(1) NOT NULL, ;
                       TIP_AFE_RT C(1) NOT NULL, ;
                       CTACOB C(8) NOT NULL, ;
                       CTADES C(8) NOT NULL, ;
                       CODCTA_B C(8) NOT NULL, ;
                       CTAGAS C(8) NOT NULL, ;
                       CTAINT C(8) NOT NULL)

***** Create each index for CBDMCTAS *****
INDEX ON AN1CTA+CODCTA TAG AN1CTA COLLATE 'MACHINE'
INDEX ON CODCTA TAG CTAS01 COLLATE 'MACHINE'
INDEX ON STR(NIVCTA,1)+CODCTA TAG CTAS02 COLLATE 'MACHINE'
INDEX ON AFTMOV+PIDAUX+CLFAUX TAG CTAS03 COLLATE 'MACHINE'
INDEX ON TPOGTO TAG TPOGTO COLLATE 'MACHINE'
INDEX ON CTAE2010 TAG CTAE1 COLLATE 'MACHINE'
INDEX ON CTAE2010B TAG CTAE2 COLLATE 'MACHINE'

***** Change properties for CBDMCTAS *****
ENDFUNC

FUNCTION MakeTable_ALMCTRAN
***** Table setup for ALMCTRAN *****
CREATE TABLE 'ALMCTRAN.DBF' NAME 'ALMCTRAN' (CODSED C(3) NOT NULL, ;
                       SUBALM C(3) NOT NULL, ;
                       TIPMOV C(1) NOT NULL, ;
                       CODMOV C(3) NOT NULL, ;
                       NRODOC C(10) NOT NULL, ;
                       FCHDOC D NOT NULL, ;
                       ALMTRF C(3) NOT NULL, ;
                       ALMORI C(3) NOT NULL, ;
                       CODLOTE C(3) NOT NULL, ;
                       CODCULT C(8) NOT NULL, ;
                       CODFASE C(3) NOT NULL, ;
                       CODPROCS C(3) NOT NULL, ;
                       CODACTIV C(3) NOT NULL, ;
                       TPORF1 C(4) NOT NULL, ;
                       NRORF1 C(10) NOT NULL, ;
                       TPORF2 C(4) NOT NULL, ;
                       NRORF2 C(10) NOT NULL, ;
                       TPORF3 C(4) NOT NULL, ;
                       NRORF3 C(10) NOT NULL, ;
                       NROODT C(10) NOT NULL, ;
                       CODPRD C(13) NOT NULL, ;
                       CODPRO C(11) NOT NULL, ;
                       CODCLI C(11) NOT NULL, ;
                       CODDIRE C(3) NOT NULL, ;
                       CODVEN C(4) NOT NULL, ;
                       CODPAR C(8) NOT NULL, ;
                       OBSERV C(40) NOT NULL, ;
                       NROITM N(3, 0) NOT NULL, ;
                       CODMON N(1, 0) NOT NULL, ;
                       TPOCMB N(14, 4) NOT NULL, ;
                       IMPBRT N(14, 2) NOT NULL, ;
                       FLGEST C(1) NOT NULL, ;
                       FLGFAC C(1) NOT NULL, ;
                       NROPED C(6) NOT NULL, ;
                       TPOCLI C(2) NOT NULL, ;
                       PLZVTO N(2, 0) NOT NULL, ;
                       FMAPGO N(3, 0) NOT NULL, ;
                       TIPPRC N(1, 0) NOT NULL, ;
                       IMPDST N(16, 2) NOT NULL, ;
                       IMPIGV N(16, 2) NOT NULL, ;
                       CODOPE C(2) NOT NULL, ;
                       IMPTOT N(16, 2) NOT NULL, ;
                       PORIGV N(6, 2) NOT NULL, ;
                       USER C(10) NOT NULL, ;
                       FBATCH N(8, 4) NOT NULL, ;
                       CODTRA C(3) NOT NULL, ;
                       NOMTRA C(60) NOT NULL, ;
                       DIRTRA C(60) NOT NULL, ;
                       RUCTRA C(11) NOT NULL, ;
                       PLATRA C(10) NOT NULL, ;
                       MOTIVO N(1, 0) NOT NULL, ;
                       BREVET C(20) NOT NULL, ;
                       CODUSER C(8) NOT NULL, ;
                       FCHHORA T NOT NULL, ;
                       CNDPGO C(18) NOT NULL, ;
                       FCHFIN T NOT NULL, ;
                       TPORFB C(4) NOT NULL, ;
                       NRORFB C(10) NOT NULL)

***** Create each index for ALMCTRAN *****
INDEX ON SUBALM+TIPMOV+CODMOV+NRODOC TAG CTRA01 COLLATE 'MACHINE'
INDEX ON NROODT+SUBALM+TIPMOV+CODMOV+NRODOC TAG CTRA02 COLLATE 'MACHINE'
INDEX ON TPORF1+NRORF1+SUBALM+TIPMOV+CODMOV+NRODOC TAG CTRA03 COLLATE 'MACHINE'
INDEX ON CODPRO+DTOS(FCHDOC)+NRORF1+FLGFAC TAG CTRA04 COLLATE 'MACHINE'
INDEX ON DTOS(FCHDOC)+TIPMOV+CODMOV+NRODOC TAG CTRA05 COLLATE 'MACHINE'
INDEX ON TPORF1+NRORF1+ALMORI+SUBALM+TIPMOV+CODMOV+NRODOC TAG CTRA06 COLLATE 'MACHINE'
INDEX ON TPORFB+NRORFB+SUBALM+TIPMOV+CODMOV+NRODOC TAG CTRA07 COLLATE 'MACHINE'

***** Change properties for ALMCTRAN *****
CREATE TRIGGER ON 'ALMCTRAN' FOR DELETE AS del_guia()
CREATE TRIGGER ON 'ALMCTRAN' FOR INSERT AS add_guia()
CREATE TRIGGER ON 'ALMCTRAN' FOR UPDATE AS upd_guia()
ENDFUNC

FUNCTION MakeTable_ALMDTRAN
***** Table setup for ALMDTRAN *****
CREATE TABLE 'ALMDTRAN.DBF' NAME 'ALMDTRAN' (CODSED C(3) NOT NULL, ;
                       SUBALM C(3) NOT NULL, ;
                       ALMTRF C(3) NOT NULL, ;
                       ALMORI C(3) NOT NULL, ;
                       TIPMOV C(1) NOT NULL, ;
                       CODMOV C(3) NOT NULL, ;
                       NRODOC C(10) NOT NULL, ;
                       NROITM N(3, 0) NOT NULL, ;
                       NRO_ITM N(3, 0) NOT NULL, ;
                       FCHDOC D NOT NULL, ;
                       CODCLI C(11) NOT NULL, ;
                       CODPRO C(11) NOT NULL, ;
                       CODMON N(1, 0) NOT NULL, ;
                       TPOCMB N(10, 4) NOT NULL, ;
                       TPOREQ C(1) NOT NULL, ;
                       CODMAT C(15) NOT NULL, ;
                       CODPRD C(13) NOT NULL, ;
                       CANDES N(14, 4) NOT NULL, ;
                       CANREC N(14, 4) NOT NULL, ;
                       LOTE C(15) NOT NULL, ;
                       FCHVTO D NOT NULL, ;
                       CANDEV N(14, 4) NOT NULL, ;
                       CNFMLA N(14, 4) NOT NULL, ;
                       FACTOR N(7, 4) NOT NULL, ;
                       PREUNI N(16, 4) NOT NULL, ;
                       IMPCTO N(14, 4) NOT NULL, ;
                       STKSUB N(16, 4) NOT NULL, ;
                       STKACT N(16, 4) NOT NULL, ;
                       CODAJT C(1) NOT NULL, ;
                       UNDVTA C(3) NOT NULL, ;
                       TPOREF C(4) NOT NULL, ;
                       NROREF C(10) NOT NULL, ;
                       TPORFB C(4) NOT NULL, ;
                       NRORFB C(10) NOT NULL, ;
                       NROREF2 C(10) NOT NULL, ;
                       IMPNAC N(16, 4) NOT NULL, ;
                       IMPUSA N(16, 4) NOT NULL, ;
                       VCTOMN N(16, 4) NOT NULL, ;
                       VCTOUS N(16, 4) NOT NULL, ;
                       USER C(10) NOT NULL, ;
                       FBATCH N(8, 4) NOT NULL, ;
                       CODOPE C(3) NOT NULL, ;
                       NROAST C(6) NOT NULL, ;
                       ANOAST C(4) NOT NULL, ;
                       CODNEW C(13) NOT NULL, ;
                       CODNEW1 C(8) NOT NULL, ;
                       CODUSER C(8) NOT NULL, ;
                       FCHHORA T NOT NULL, ;
                       NROREG_1 N(10, 0) NOT NULL, ;
                       D1 N(5, 2) NOT NULL, ;
                       D2 N(5, 2) NOT NULL, ;
                       D3 N(5, 2) NOT NULL, ;
                       PREC_CIF N(14, 4) NOT NULL, ;
                       FACT_IMP N(10, 4) NOT NULL, ;
                       DESMAT V(80) NOT NULL, ;
                       SITU C(10) NOT NULL, ;
                       SERIE V(100) NOT NULL)

***** Create each index for ALMDTRAN *****
INDEX ON SUBALM+TIPMOV+CODMOV+NRODOC+STR(NROITM,3,0) TAG DTRA01 COLLATE 'MACHINE'
INDEX ON SUBALM+CODMAT+DTOS(FCHDOC)+TIPMOV+CODMOV+NRODOC TAG DTRA02 COLLATE 'MACHINE'
INDEX ON CODMAT+DTOS(FCHDOC)+TIPMOV+CODMOV+NRODOC TAG DTRA03 COLLATE 'MACHINE'
INDEX ON TPOREF+NROREF+CODMAT+SUBALM+TIPMOV+CODMOV+NRODOC TAG DTRA04 COLLATE 'MACHINE'
INDEX ON SUBALM+TIPMOV+CODMOV+CODMAT+NRODOC+DTOS(FCHDOC) TAG DTRA05 COLLATE 'MACHINE'
INDEX ON TIPMOV+CODMOV+CODMAT+DTOS(FCHDOC) TAG DTRA06 COLLATE 'MACHINE'
INDEX ON ALMORI+SUBALM+TIPMOV+CODMOV+NRODOC+CODMAT TAG DTRA07 COLLATE 'MACHINE'
INDEX ON CODOPE+NROAST+ANOAST+TPORFB+NRORFB+TPOREF+NROREF+CODMAT TAG DTRA08 COLLATE 'MACHINE'
INDEX ON CODSED+CODMAT+DTOS(FCHDOC)+TIPMOV+CODMOV+NRODOC TAG DTRA09 COLLATE 'MACHINE'
INDEX ON DTOS(FCHDOC)+CODMAT+TIPMOV+CODMOV+NRODOC TAG DTRA10 COLLATE 'MACHINE'
INDEX ON CODPRD TAG DTRA11 COLLATE 'MACHINE'

***** Change properties for ALMDTRAN *****
ENDFUNC

FUNCTION MakeTable_ALMCATG2
***** Table setup for ALMCATG2 *****
CREATE TABLE 'ALMCATG2.DBF' NAME 'ALMCATG2' (CODCLI C(11) NOT NULL, ;
                       CODMAT C(15) NOT NULL, ;
                       CODEQU C(8) NOT NULL, ;
                       CODANT C(15) NOT NULL, ;
                       CODREF C(10) NOT NULL, ;
                       DESMAT C(80) NOT NULL, ;
                       DESMAT2 C(20) NOT NULL, ;
                       CODAGR C(8) NOT NULL, ;
                       MARCA C(25) NOT NULL, ;
                       UNDSTK C(3) NOT NULL, ;
                       UNDCMP C(3) NOT NULL, ;
                       FACEQU N(10, 4) NOT NULL, ;
                       PMAXMN N(18, 6) NOT NULL, ;
                       PMAXUS N(18, 6) NOT NULL, ;
                       PCTOMN N(18, 6) NOT NULL, ;
                       PCTOUS N(18, 6) NOT NULL, ;
                       PULTMN N(18, 6) NOT NULL, ;
                       PULTUS N(18, 6) NOT NULL, ;
                       CODPR1 C(6) NOT NULL, ;
                       CODPR2 C(6) NOT NULL, ;
                       FCHALZ D NOT NULL, ;
                       ULTCMP D NOT NULL, ;
                       ULTSAL D NOT NULL, ;
                       STKACT N(14, 4) NOT NULL, ;
                       STKINI N(14, 4) NOT NULL, ;
                       PINIMN N(18, 6) NOT NULL, ;
                       PINIUS N(18, 6) NOT NULL, ;
                       STKREP N(14, 4) NOT NULL, ;
                       STKMAX N(14, 4) NOT NULL, ;
                       VOLPED N(14, 4) NOT NULL, ;
                       TMPREP N(9, 0) NOT NULL, ;
                       STKSEG N(9, 0) NOT NULL, ;
                       PESO N(14, 4) NOT NULL, ;
                       TPOEMB N(4, 0) NOT NULL, ;
                       TL_PTO N(4, 0) NOT NULL, ;
                       TIPMAT C(2) NOT NULL, ;
                       EQMAT1 C(8) NOT NULL, ;
                       EQMAT2 C(8) NOT NULL, ;
                       EQMAT3 C(8) NOT NULL, ;
                       EQMAT4 C(8) NOT NULL, ;
                       EQMAT5 C(8) NOT NULL, ;
                       EQMAT6 C(8) NOT NULL, ;
                       EQMAT7 C(8) NOT NULL, ;
                       EQMAT8 C(8) NOT NULL, ;
                       EQMAT9 C(8) NOT NULL, ;
                       EQMAT10 C(8) NOT NULL, ;
                       STKMIN N(14, 4) NOT NULL, ;
                       VINIMN N(18, 6) NOT NULL, ;
                       VINIUS N(18, 6) NOT NULL, ;
                       CODSEC C(2) NOT NULL, ;
                       ORIGEN N(1, 0) NOT NULL, ;
                       PUINMN N(12, 4) NOT NULL, ;
                       PUINUS N(12, 4) NOT NULL, ;
                       VCTOMN N(18, 4) NOT NULL, ;
                       VCTOUS N(18, 4) NOT NULL, ;
                       DENSIDAD N(10, 4) NOT NULL, ;
                       UNDNUM C(3) NOT NULL, ;
                       UNDDEN C(3) NOT NULL, ;
                       NOPROM L NOT NULL, ;
                       INACTIVO L NOT NULL, ;
                       CODCTA C(8) NOT NULL, ;
                       CTAC2X C(8) NOT NULL, ;
                       CTAC33 C(8) NOT NULL, ;
                       CTAC70 C(8) NOT NULL, ;
                       CTAC71 C(8) NOT NULL, ;
                       CTAC60 C(8) NOT NULL, ;
                       CTAC61 C(8) NOT NULL, ;
                       CTAC61C C(8) NOT NULL, ;
                       CTAC16 C(8) NOT NULL, ;
                       CTAC69 C(8) NOT NULL, ;
                       UNDEQU N(14, 4) NOT NULL, ;
                       DESEQU C(20) NOT NULL, ;
                       FACVTA N(9, 4) NOT NULL, ;
                       STK01 N(14, 4) NOT NULL, ;
                       STK02 N(14, 4) NOT NULL, ;
                       STK03 N(14, 4) NOT NULL, ;
                       STK04 N(14, 4) NOT NULL, ;
                       STK05 N(14, 4) NOT NULL, ;
                       STK06 N(14, 4) NOT NULL, ;
                       STK07 N(14, 4) NOT NULL, ;
                       STK08 N(14, 4) NOT NULL, ;
                       STK09 N(14, 4) NOT NULL, ;
                       STK10 N(14, 4) NOT NULL, ;
                       STK11 N(14, 4) NOT NULL, ;
                       STK12 N(14, 4) NOT NULL, ;
                       VMN01 N(14, 4) NOT NULL, ;
                       VMN02 N(14, 4) NOT NULL, ;
                       VMN03 N(14, 4) NOT NULL, ;
                       VMN04 N(14, 4) NOT NULL, ;
                       VMN05 N(14, 4) NOT NULL, ;
                       VMN06 N(14, 4) NOT NULL, ;
                       VMN07 N(14, 4) NOT NULL, ;
                       VMN08 N(14, 4) NOT NULL, ;
                       VMN09 N(14, 4) NOT NULL, ;
                       VMN10 N(14, 4) NOT NULL, ;
                       VMN11 N(14, 4) NOT NULL, ;
                       VMN12 N(14, 4) NOT NULL, ;
                       VUS01 N(14, 4) NOT NULL, ;
                       VUS02 N(14, 4) NOT NULL, ;
                       VUS03 N(14, 4) NOT NULL, ;
                       VUS04 N(14, 4) NOT NULL, ;
                       VUS05 N(14, 4) NOT NULL, ;
                       VUS06 N(14, 4) NOT NULL, ;
                       VUS07 N(14, 4) NOT NULL, ;
                       VUS08 N(14, 4) NOT NULL, ;
                       VUS09 N(14, 4) NOT NULL, ;
                       VUS10 N(14, 4) NOT NULL, ;
                       VUS11 N(14, 4) NOT NULL, ;
                       VUS12 N(14, 4) NOT NULL, ;
                       PS01 N(12, 4) NOT NULL, ;
                       PS02 N(12, 4) NOT NULL, ;
                       PS03 N(12, 4) NOT NULL, ;
                       PS04 N(12, 4) NOT NULL, ;
                       PS05 N(12, 4) NOT NULL, ;
                       PS06 N(12, 4) NOT NULL, ;
                       PS07 N(12, 4) NOT NULL, ;
                       PS08 N(12, 4) NOT NULL, ;
                       PS09 N(12, 4) NOT NULL, ;
                       PS10 N(12, 4) NOT NULL, ;
                       PS11 N(12, 4) NOT NULL, ;
                       PS12 N(12, 4) NOT NULL, ;
                       PD01 N(12, 4) NOT NULL, ;
                       PD02 N(12, 4) NOT NULL, ;
                       PD03 N(12, 4) NOT NULL, ;
                       PD04 N(12, 4) NOT NULL, ;
                       PD05 N(12, 4) NOT NULL, ;
                       PD06 N(12, 4) NOT NULL, ;
                       PD07 N(12, 4) NOT NULL, ;
                       PD08 N(12, 4) NOT NULL, ;
                       PD09 N(12, 4) NOT NULL, ;
                       PD10 N(12, 4) NOT NULL, ;
                       PD11 N(12, 4) NOT NULL, ;
                       PD12 N(12, 4) NOT NULL, ;
                       CODNEW C(15) NOT NULL, ;
                       LUGENT N(1, 0) NOT NULL, ;
                       CODUSER C(8) NOT NULL, ;
                       FCHHORA D NOT NULL, ;
                       PREVE1 N(16, 4) NOT NULL, ;
                       PREVE2 N(16, 4) NOT NULL, ;
                       PREVE3 N(16, 4) NOT NULL, ;
                       PREVN1 N(16, 4) NOT NULL, ;
                       PREVN2 N(16, 4) NOT NULL, ;
                       PREVN3 N(16, 4) NOT NULL, ;
                       FLGIGV L NOT NULL, ;
                       FLGPRE L NOT NULL)

***** Create each index for ALMCATG2 *****
INDEX ON CODMAT TAG CATG01 COLLATE 'MACHINE'
INDEX ON UPPER(DESMAT) TAG CATG02 COLLATE 'MACHINE'
INDEX ON LEFT(CODMAT,3)+UPPER(DESMAT) TAG CATG03 COLLATE 'MACHINE'
INDEX ON CODEQU TAG CATG05 COLLATE 'MACHINE'
INDEX ON CODREF TAG CATG06 COLLATE 'MACHINE'
INDEX ON CODANT TAG CODANT COLLATE 'MACHINE'
INDEX ON CODMAT+CODCLI TAG PXCLI01 COLLATE 'MACHINE'
INDEX ON CODCLI+CODMAT TAG PXCLI02 COLLATE 'MACHINE'

***** Change properties for ALMCATG2 *****
ENDFUNC

FUNCTION MakeView_V_MATERIALES_X_ALMACEN
PARAMETERS PsNomcia, PsNomBdAno
***************** View setup for V_MATERIALES_X_ALMACEN ***************

CREATE SQL VIEW "V_MATERIALES_X_ALMACEN" ; 
   AS SELECT Almcatal.subalm, Almcatal.codmat, Almcatge.desmat, Almcatge.undstk, Almcatal.stkact, Almcatge.codant, Almcatge.codsec ;
    FROM  &PsNomBdAno.!almcatal  INNER JOIN &PsNomBdAno.!almcatge  ON  Almcatal.codmat = Almcatge.codmat ORDER BY Almcatal.subalm, Almcatal.codmat

DBSetProp('V_MATERIALES_X_ALMACEN', 'View', 'UpdateType', 1)
DBSetProp('V_MATERIALES_X_ALMACEN', 'View', 'WhereType', 3)
DBSetProp('V_MATERIALES_X_ALMACEN', 'View', 'FetchMemo', .T.)
DBSetProp('V_MATERIALES_X_ALMACEN', 'View', 'SendUpdates', .F.)
DBSetProp('V_MATERIALES_X_ALMACEN', 'View', 'UseMemoSize', 255)
DBSetProp('V_MATERIALES_X_ALMACEN', 'View', 'FetchSize', 100)
DBSetProp('V_MATERIALES_X_ALMACEN', 'View', 'MaxRecords', -1)
DBSetProp('V_MATERIALES_X_ALMACEN', 'View', 'Tables', PsNomBDAno+'!almcatge')
DBSetProp('V_MATERIALES_X_ALMACEN', 'View', 'Prepared', .F.)
DBSetProp('V_MATERIALES_X_ALMACEN', 'View', 'CompareMemo', .T.)
DBSetProp('V_MATERIALES_X_ALMACEN', 'View', 'FetchAsNeeded', .F.)
DBSetProp('V_MATERIALES_X_ALMACEN', 'View', 'Comment', "")
DBSetProp('V_MATERIALES_X_ALMACEN', 'View', 'BatchUpdateCount', 1)
DBSetProp('V_MATERIALES_X_ALMACEN', 'View', 'ShareConnection', .F.)
DBSetProp('V_MATERIALES_X_ALMACEN', 'View', 'AllowSimultaneousFetch', .F.)

*!* Field Level Properties for V_MATERIALES_X_ALMACEN
* Props for the V_MATERIALES_X_ALMACEN.subalm field.
DBSetProp('V_MATERIALES_X_ALMACEN.subalm', 'Field', 'KeyField', .T.)
DBSetProp('V_MATERIALES_X_ALMACEN.subalm', 'Field', 'Updatable', .F.)
DBSetProp('V_MATERIALES_X_ALMACEN.subalm', 'Field', 'UpdateName', PsNomBDAno+'!almcatal.subalm')
DBSetProp('V_MATERIALES_X_ALMACEN.subalm', 'Field', 'DataType', "C(3)")
* Props for the V_MATERIALES_X_ALMACEN.codmat field.
DBSetProp('V_MATERIALES_X_ALMACEN.codmat', 'Field', 'KeyField', .F.)
DBSetProp('V_MATERIALES_X_ALMACEN.codmat', 'Field', 'Updatable', .F.)
DBSetProp('V_MATERIALES_X_ALMACEN.codmat', 'Field', 'UpdateName', PsNomBDAno+'!almcatal.codmat')
DBSetProp('V_MATERIALES_X_ALMACEN.codmat', 'Field', 'DataType', "C(13)")
* Props for the V_MATERIALES_X_ALMACEN.desmat field.
DBSetProp('V_MATERIALES_X_ALMACEN.desmat', 'Field', 'KeyField', .F.)
DBSetProp('V_MATERIALES_X_ALMACEN.desmat', 'Field', 'Updatable', .T.)
DBSetProp('V_MATERIALES_X_ALMACEN.desmat', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.desmat')
DBSetProp('V_MATERIALES_X_ALMACEN.desmat', 'Field', 'DataType', "C(40)")
* Props for the V_MATERIALES_X_ALMACEN.undstk field.
DBSetProp('V_MATERIALES_X_ALMACEN.undstk', 'Field', 'KeyField', .F.)
DBSetProp('V_MATERIALES_X_ALMACEN.undstk', 'Field', 'Updatable', .T.)
DBSetProp('V_MATERIALES_X_ALMACEN.undstk', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.undstk')
DBSetProp('V_MATERIALES_X_ALMACEN.undstk', 'Field', 'DataType', "C(3)")
* Props for the V_MATERIALES_X_ALMACEN.stkact field.
DBSetProp('V_MATERIALES_X_ALMACEN.stkact', 'Field', 'KeyField', .F.)
DBSetProp('V_MATERIALES_X_ALMACEN.stkact', 'Field', 'Updatable', .F.)
DBSetProp('V_MATERIALES_X_ALMACEN.stkact', 'Field', 'UpdateName', PsNomBDAno+'!almcatal.stkact')
DBSetProp('V_MATERIALES_X_ALMACEN.stkact', 'Field', 'DataType', "N(14,4)")
* Props for the V_MATERIALES_X_ALMACEN.codant field.
DBSetProp('V_MATERIALES_X_ALMACEN.codant', 'Field', 'KeyField', .F.)
DBSetProp('V_MATERIALES_X_ALMACEN.codant', 'Field', 'Updatable', .T.)
DBSetProp('V_MATERIALES_X_ALMACEN.codant', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.codant')
DBSetProp('V_MATERIALES_X_ALMACEN.codant', 'Field', 'DataType', "C(15)")
* Props for the V_MATERIALES_X_ALMACEN.codsec field.
DBSetProp('V_MATERIALES_X_ALMACEN.codsec', 'Field', 'KeyField', .F.)
DBSetProp('V_MATERIALES_X_ALMACEN.codsec', 'Field', 'Updatable', .F.)
DBSetProp('V_MATERIALES_X_ALMACEN.codsec', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.codsec')
DBSetProp('V_MATERIALES_X_ALMACEN.codsec', 'Field', 'DataType', "C(2)")
ENDFUNC
 
FUNCTION MakeView_V_CULTIVOS_X_LOTE
PARAMETERS PsNomCia, PsNomBdAno
***************** View setup for V_CULTIVOS_X_LOTE ***************

CREATE SQL VIEW "V_CULTIVOS_X_LOTE" ; 
   AS SELECT Cpicuxlt.codsed, Cpicuxlt.codlote, Cpicuxlt.codcult, Cpiculti.descult FROM  &PsNomBDAno.!cpiculti  ; 
   INNER JOIN &PsNomBDAno.!cpicuxlt  ON  Cpiculti.codcult = Cpicuxlt.codcult

DBSetProp('V_CULTIVOS_X_LOTE', 'View', 'UpdateType', 1)
DBSetProp('V_CULTIVOS_X_LOTE', 'View', 'WhereType', 3)
DBSetProp('V_CULTIVOS_X_LOTE', 'View', 'FetchMemo', .T.)
DBSetProp('V_CULTIVOS_X_LOTE', 'View', 'SendUpdates', .F.)
DBSetProp('V_CULTIVOS_X_LOTE', 'View', 'UseMemoSize', 255)
DBSetProp('V_CULTIVOS_X_LOTE', 'View', 'FetchSize', 100)
DBSetProp('V_CULTIVOS_X_LOTE', 'View', 'MaxRecords', -1)
DBSetProp('V_CULTIVOS_X_LOTE', 'View', 'Tables', PsNomBDAno+'!cpicuxlt,'+PsNomBDAno+'!cpiculti')
DBSetProp('V_CULTIVOS_X_LOTE', 'View', 'Prepared', .F.)
DBSetProp('V_CULTIVOS_X_LOTE', 'View', 'CompareMemo', .T.)
DBSetProp('V_CULTIVOS_X_LOTE', 'View', 'FetchAsNeeded', .F.)
DBSetProp('V_CULTIVOS_X_LOTE', 'View', 'Comment', "")
DBSetProp('V_CULTIVOS_X_LOTE', 'View', 'BatchUpdateCount', 1)
DBSetProp('V_CULTIVOS_X_LOTE', 'View', 'ShareConnection', .F.)
DBSetProp('V_CULTIVOS_X_LOTE', 'View', 'AllowSimultaneousFetch', .F.)

*!* Field Level Properties for V_CULTIVOS_X_LOTE
* Props for the V_CULTIVOS_X_LOTE.codsed field.
DBSetProp('V_CULTIVOS_X_LOTE.codsed', 'Field', 'KeyField', .F.)
DBSetProp('V_CULTIVOS_X_LOTE.codsed', 'Field', 'Updatable', .T.)
DBSetProp('V_CULTIVOS_X_LOTE.codsed', 'Field', 'UpdateName', PsNomBDAno+'!cpicuxlt.codsed')
DBSetProp('V_CULTIVOS_X_LOTE.codsed', 'Field', 'DataType', "C(3)")
* Props for the V_CULTIVOS_X_LOTE.codlote field.
DBSetProp('V_CULTIVOS_X_LOTE.codlote', 'Field', 'KeyField', .F.)
DBSetProp('V_CULTIVOS_X_LOTE.codlote', 'Field', 'Updatable', .T.)
DBSetProp('V_CULTIVOS_X_LOTE.codlote', 'Field', 'UpdateName', PsNomBDAno+'!cpicuxlt.codlote')
DBSetProp('V_CULTIVOS_X_LOTE.codlote', 'Field', 'DataType', "C(3)")
* Props for the V_CULTIVOS_X_LOTE.codcult field.
DBSetProp('V_CULTIVOS_X_LOTE.codcult', 'Field', 'KeyField', .F.)
DBSetProp('V_CULTIVOS_X_LOTE.codcult', 'Field', 'Updatable', .F.)
DBSetProp('V_CULTIVOS_X_LOTE.codcult', 'Field', 'UpdateName', PsNomBDAno+'!cpicuxlt.codcult')
DBSetProp('V_CULTIVOS_X_LOTE.codcult', 'Field', 'DataType', "C(8)")
* Props for the V_CULTIVOS_X_LOTE.descult field.
DBSetProp('V_CULTIVOS_X_LOTE.descult', 'Field', 'KeyField', .F.)
DBSetProp('V_CULTIVOS_X_LOTE.descult', 'Field', 'Updatable', .T.)
DBSetProp('V_CULTIVOS_X_LOTE.descult', 'Field', 'UpdateName', PsNomBDAno+'!cpiculti.descult')
DBSetProp('V_CULTIVOS_X_LOTE.descult', 'Field', 'DataType', "C(30)")
ENDFUNC
 
FUNCTION MakeView_V_MATERIALES_X_ALMACEN_2
PARAMETERS PsNomCia,PsNomBdAno
***************** View setup for V_MATERIALES_X_ALMACEN_2 ***************

CREATE SQL VIEW "V_MATERIALES_X_ALMACEN_2" ; 
   AS SELECT V_materiales_x_almacen.subalm, Almtalma.dessub, V_materiales_x_almacen.codmat, ; 
   RTRIM(V_materiales_x_almacen.desmat)+" "+LTRIM(V_materiales_x_almacen.codant) AS desmat, ;
    V_materiales_x_almacen.undstk, V_materiales_x_almacen.stkact, V_materiales_x_almacen.codsec, ;
    V_materiales_x_almacen.codant FROM  &PsNomCia.!almtalma  INNER JOIN &PsNomBDAno.!v_materiales_x_almacen  ; 
    ON  Almtalma.subalm = V_materiales_x_almacen.subalm

DBSetProp('V_MATERIALES_X_ALMACEN_2', 'View', 'UpdateType', 1)
DBSetProp('V_MATERIALES_X_ALMACEN_2', 'View', 'WhereType', 3)
DBSetProp('V_MATERIALES_X_ALMACEN_2', 'View', 'FetchMemo', .T.)
DBSetProp('V_MATERIALES_X_ALMACEN_2', 'View', 'SendUpdates', .F.)
DBSetProp('V_MATERIALES_X_ALMACEN_2', 'View', 'UseMemoSize', 255)
DBSetProp('V_MATERIALES_X_ALMACEN_2', 'View', 'FetchSize', 100)
DBSetProp('V_MATERIALES_X_ALMACEN_2', 'View', 'MaxRecords', -1)
DBSetProp('V_MATERIALES_X_ALMACEN_2', 'View', 'Tables', PsNomBDAno+'!v_materiales_x_almacen,'+PsNomCia+'!almtalma')
DBSetProp('V_MATERIALES_X_ALMACEN_2', 'View', 'Prepared', .F.)
DBSetProp('V_MATERIALES_X_ALMACEN_2', 'View', 'CompareMemo', .T.)
DBSetProp('V_MATERIALES_X_ALMACEN_2', 'View', 'FetchAsNeeded', .F.)
DBSetProp('V_MATERIALES_X_ALMACEN_2', 'View', 'Comment', "")
DBSetProp('V_MATERIALES_X_ALMACEN_2', 'View', 'BatchUpdateCount', 1)
DBSetProp('V_MATERIALES_X_ALMACEN_2', 'View', 'ShareConnection', .F.)
DBSetProp('V_MATERIALES_X_ALMACEN_2', 'View', 'AllowSimultaneousFetch', .F.)

*!* Field Level Properties for V_MATERIALES_X_ALMACEN_2
* Props for the V_MATERIALES_X_ALMACEN_2.subalm field.
DBSetProp('V_MATERIALES_X_ALMACEN_2.subalm', 'Field', 'KeyField', .F.)
DBSetProp('V_MATERIALES_X_ALMACEN_2.subalm', 'Field', 'Updatable', .T.)
DBSetProp('V_MATERIALES_X_ALMACEN_2.subalm', 'Field', 'UpdateName', PsNomBDAno+'!v_materiales_x_almacen.subalm')
DBSetProp('V_MATERIALES_X_ALMACEN_2.subalm', 'Field', 'DataType', "C(3)")
* Props for the V_MATERIALES_X_ALMACEN_2.dessub field.
DBSetProp('V_MATERIALES_X_ALMACEN_2.dessub', 'Field', 'KeyField', .F.)
DBSetProp('V_MATERIALES_X_ALMACEN_2.dessub', 'Field', 'Updatable', .T.)
DBSetProp('V_MATERIALES_X_ALMACEN_2.dessub', 'Field', 'UpdateName', PsNomCia+'!almtalma.dessub')
DBSetProp('V_MATERIALES_X_ALMACEN_2.dessub', 'Field', 'DataType', "C(32)")
* Props for the V_MATERIALES_X_ALMACEN_2.codmat field.
DBSetProp('V_MATERIALES_X_ALMACEN_2.codmat', 'Field', 'KeyField', .F.)
DBSetProp('V_MATERIALES_X_ALMACEN_2.codmat', 'Field', 'Updatable', .F.)
DBSetProp('V_MATERIALES_X_ALMACEN_2.codmat', 'Field', 'UpdateName', PsNomBDAno+'!v_materiales_x_almacen.codmat')
DBSetProp('V_MATERIALES_X_ALMACEN_2.codmat', 'Field', 'DataType', "C(13)")
* Props for the V_MATERIALES_X_ALMACEN_2.desmat field.
DBSetProp('V_MATERIALES_X_ALMACEN_2.desmat', 'Field', 'KeyField', .F.)
DBSetProp('V_MATERIALES_X_ALMACEN_2.desmat', 'Field', 'Updatable', .F.)
DBSetProp('V_MATERIALES_X_ALMACEN_2.desmat', 'Field', 'UpdateName', '')
DBSetProp('V_MATERIALES_X_ALMACEN_2.desmat', 'Field', 'DataType', "C(56)")
* Props for the V_MATERIALES_X_ALMACEN_2.undstk field.
DBSetProp('V_MATERIALES_X_ALMACEN_2.undstk', 'Field', 'KeyField', .F.)
DBSetProp('V_MATERIALES_X_ALMACEN_2.undstk', 'Field', 'Updatable', .F.)
DBSetProp('V_MATERIALES_X_ALMACEN_2.undstk', 'Field', 'UpdateName', PsNomBDAno+'!v_materiales_x_almacen.undstk')
DBSetProp('V_MATERIALES_X_ALMACEN_2.undstk', 'Field', 'DataType', "C(3)")
* Props for the V_MATERIALES_X_ALMACEN_2.stkact field.
DBSetProp('V_MATERIALES_X_ALMACEN_2.stkact', 'Field', 'KeyField', .F.)
DBSetProp('V_MATERIALES_X_ALMACEN_2.stkact', 'Field', 'Updatable', .F.)
DBSetProp('V_MATERIALES_X_ALMACEN_2.stkact', 'Field', 'UpdateName', PsNomBDAno+'!v_materiales_x_almacen.stkact')
DBSetProp('V_MATERIALES_X_ALMACEN_2.stkact', 'Field', 'DataType', "N(14,4)")
* Props for the V_MATERIALES_X_ALMACEN_2.codsec field.
DBSetProp('V_MATERIALES_X_ALMACEN_2.codsec', 'Field', 'KeyField', .F.)
DBSetProp('V_MATERIALES_X_ALMACEN_2.codsec', 'Field', 'Updatable', .F.)
DBSetProp('V_MATERIALES_X_ALMACEN_2.codsec', 'Field', 'UpdateName', PsNomBDAno+'!v_materiales_x_almacen.codsec')
DBSetProp('V_MATERIALES_X_ALMACEN_2.codsec', 'Field', 'DataType', "C(2)")
* Props for the V_MATERIALES_X_ALMACEN_2.codant field.
DBSetProp('V_MATERIALES_X_ALMACEN_2.codant', 'Field', 'KeyField', .F.)
DBSetProp('V_MATERIALES_X_ALMACEN_2.codant', 'Field', 'Updatable', .F.)
DBSetProp('V_MATERIALES_X_ALMACEN_2.codant', 'Field', 'UpdateName', PsNomBDAno+'!v_materiales_x_almacen.codant')
DBSetProp('V_MATERIALES_X_ALMACEN_2.codant', 'Field', 'DataType', "C(15)")
ENDFUNC
 
FUNCTION MakeView_V_MATERIALES_SIN_ALMACEN
PARAMETERS PsNomCia,PsNomBdAno
***************** View setup for V_MATERIALES_SIN_ALMACEN ***************

CREATE SQL VIEW "V_MATERIALES_SIN_ALMACEN" ; 
   AS SELECT Almcatge.codmat, Almcatge.desmat, Almcatge.undstk, Almcatge.codant, Almtalma.dessub, Almcatal.subalm, ;
    0.0000 AS stk_sede, 0.0000 AS stk_alm, 0.0000 AS stk_gen FROM  &PsNomBDAno.!almcatge  LEFT OUTER JOIN &PsNomBDAno.!almcatal  ON ;
     Almcatge.codmat = Almcatal.codmat  INNER JOIN &PsNomCia.!almtalma  ON  Almcatal.subalm = Almtalma.subalm

DBSetProp('V_MATERIALES_SIN_ALMACEN', 'View', 'UpdateType', 1)
DBSetProp('V_MATERIALES_SIN_ALMACEN', 'View', 'WhereType', 3)
DBSetProp('V_MATERIALES_SIN_ALMACEN', 'View', 'FetchMemo', .T.)
DBSetProp('V_MATERIALES_SIN_ALMACEN', 'View', 'SendUpdates', .F.)
DBSetProp('V_MATERIALES_SIN_ALMACEN', 'View', 'UseMemoSize', 255)
DBSetProp('V_MATERIALES_SIN_ALMACEN', 'View', 'FetchSize', 100)
DBSetProp('V_MATERIALES_SIN_ALMACEN', 'View', 'MaxRecords', -1)
DBSetProp('V_MATERIALES_SIN_ALMACEN', 'View', 'Tables', PsNomBDAno+'!almcatge')
DBSetProp('V_MATERIALES_SIN_ALMACEN', 'View', 'Prepared', .F.)
DBSetProp('V_MATERIALES_SIN_ALMACEN', 'View', 'CompareMemo', .T.)
DBSetProp('V_MATERIALES_SIN_ALMACEN', 'View', 'FetchAsNeeded', .F.)
DBSetProp('V_MATERIALES_SIN_ALMACEN', 'View', 'Comment', "")
DBSetProp('V_MATERIALES_SIN_ALMACEN', 'View', 'BatchUpdateCount', 1)
DBSetProp('V_MATERIALES_SIN_ALMACEN', 'View', 'ShareConnection', .F.)
DBSetProp('V_MATERIALES_SIN_ALMACEN', 'View', 'AllowSimultaneousFetch', .F.)

*!* Field Level Properties for V_MATERIALES_SIN_ALMACEN
* Props for the V_MATERIALES_SIN_ALMACEN.codmat field.
DBSetProp('V_MATERIALES_SIN_ALMACEN.codmat', 'Field', 'KeyField', .F.)
DBSetProp('V_MATERIALES_SIN_ALMACEN.codmat', 'Field', 'Updatable', .F.)
DBSetProp('V_MATERIALES_SIN_ALMACEN.codmat', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.codmat')
DBSetProp('V_MATERIALES_SIN_ALMACEN.codmat', 'Field', 'DataType', "C(13)")
* Props for the V_MATERIALES_SIN_ALMACEN.desmat field.
DBSetProp('V_MATERIALES_SIN_ALMACEN.desmat', 'Field', 'KeyField', .F.)
DBSetProp('V_MATERIALES_SIN_ALMACEN.desmat', 'Field', 'Updatable', .T.)
DBSetProp('V_MATERIALES_SIN_ALMACEN.desmat', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.desmat')
DBSetProp('V_MATERIALES_SIN_ALMACEN.desmat', 'Field', 'DataType', "C(40)")
* Props for the V_MATERIALES_SIN_ALMACEN.undstk field.
DBSetProp('V_MATERIALES_SIN_ALMACEN.undstk', 'Field', 'KeyField', .F.)
DBSetProp('V_MATERIALES_SIN_ALMACEN.undstk', 'Field', 'Updatable', .T.)
DBSetProp('V_MATERIALES_SIN_ALMACEN.undstk', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.undstk')
DBSetProp('V_MATERIALES_SIN_ALMACEN.undstk', 'Field', 'DataType', "C(3)")
* Props for the V_MATERIALES_SIN_ALMACEN.codant field.
DBSetProp('V_MATERIALES_SIN_ALMACEN.codant', 'Field', 'KeyField', .F.)
DBSetProp('V_MATERIALES_SIN_ALMACEN.codant', 'Field', 'Updatable', .T.)
DBSetProp('V_MATERIALES_SIN_ALMACEN.codant', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.codant')
DBSetProp('V_MATERIALES_SIN_ALMACEN.codant', 'Field', 'DataType', "C(15)")
* Props for the V_MATERIALES_SIN_ALMACEN.dessub field.
DBSetProp('V_MATERIALES_SIN_ALMACEN.dessub', 'Field', 'KeyField', .F.)
DBSetProp('V_MATERIALES_SIN_ALMACEN.dessub', 'Field', 'Updatable', .F.)
DBSetProp('V_MATERIALES_SIN_ALMACEN.dessub', 'Field', 'UpdateName', PsNomCia+'!almtalma.dessub')
DBSetProp('V_MATERIALES_SIN_ALMACEN.dessub', 'Field', 'DataType', "C(32)")
* Props for the V_MATERIALES_SIN_ALMACEN.subalm field.
DBSetProp('V_MATERIALES_SIN_ALMACEN.subalm', 'Field', 'KeyField', .T.)
DBSetProp('V_MATERIALES_SIN_ALMACEN.subalm', 'Field', 'Updatable', .F.)
DBSetProp('V_MATERIALES_SIN_ALMACEN.subalm', 'Field', 'UpdateName', PsNomBDAno+'!almcatal.subalm')
DBSetProp('V_MATERIALES_SIN_ALMACEN.subalm', 'Field', 'DataType', "C(3)")
* Props for the V_MATERIALES_SIN_ALMACEN.stk_sede field.
DBSetProp('V_MATERIALES_SIN_ALMACEN.stk_sede', 'Field', 'KeyField', .F.)
DBSetProp('V_MATERIALES_SIN_ALMACEN.stk_sede', 'Field', 'Updatable', .F.)
DBSetProp('V_MATERIALES_SIN_ALMACEN.stk_sede', 'Field', 'UpdateName', '0000')
DBSetProp('V_MATERIALES_SIN_ALMACEN.stk_sede', 'Field', 'DataType', "N(6,4)")
* Props for the V_MATERIALES_SIN_ALMACEN.stk_alm field.
DBSetProp('V_MATERIALES_SIN_ALMACEN.stk_alm', 'Field', 'KeyField', .F.)
DBSetProp('V_MATERIALES_SIN_ALMACEN.stk_alm', 'Field', 'Updatable', .F.)
DBSetProp('V_MATERIALES_SIN_ALMACEN.stk_alm', 'Field', 'UpdateName', '0000')
DBSetProp('V_MATERIALES_SIN_ALMACEN.stk_alm', 'Field', 'DataType', "N(6,4)")
* Props for the V_MATERIALES_SIN_ALMACEN.stk_gen field.
DBSetProp('V_MATERIALES_SIN_ALMACEN.stk_gen', 'Field', 'KeyField', .F.)
DBSetProp('V_MATERIALES_SIN_ALMACEN.stk_gen', 'Field', 'Updatable', .F.)
DBSetProp('V_MATERIALES_SIN_ALMACEN.stk_gen', 'Field', 'UpdateName', '0000')
DBSetProp('V_MATERIALES_SIN_ALMACEN.stk_gen', 'Field', 'DataType', "N(6,4)")
ENDFUNC
 
FUNCTION MakeView_V_MATERIALES_X_ALMACEN_3
PARAMETERS PsNomCia,PsNomBdAno
***************** View setup for V_MATERIALES_X_ALMACEN_3 ***************

CREATE SQL VIEW "V_MATERIALES_X_ALMACEN_3" ; 
   AS SELECT Almcatge.codmat, Almcatge.desmat, Almcatge.undstk, Almcatal.undvta, Almcatal.facequ, Almtalma.codsed, Almcatal.subalm, ; 
   Almtalma.dessub, 0.0000 AS stk_sede, 0.0000 AS stk_alm, 0.0000 AS stk_gen, Almcatge.puinmn, Almcatge.puinus, Almcatal.fching, ;
   Almcatal.fchsal, Almcatal.stkact, Almcatge.codant, Almcatge.codsec FROM  &PsNomBDAno.!almcatge  LEFT OUTER JOIN  &PsNomBDAno.!almcatal  ;
   INNER JOIN &PsNomCia.!almtalma  ON  Almcatal.subalm = Almtalma.subalm  ON  Almcatge.codmat = Almcatal.codmat ; 
   WHERE  Almcatal.subalm = ( ?_SubAlm ) AND  Almcatal.codmat = ( ?_CodMat )

DBSetProp('V_MATERIALES_X_ALMACEN_3', 'View', 'UpdateType', 1)
DBSetProp('V_MATERIALES_X_ALMACEN_3', 'View', 'WhereType', 3)
DBSetProp('V_MATERIALES_X_ALMACEN_3', 'View', 'FetchMemo', .T.)
DBSetProp('V_MATERIALES_X_ALMACEN_3', 'View', 'SendUpdates', .F.)
DBSetProp('V_MATERIALES_X_ALMACEN_3', 'View', 'UseMemoSize', 255)
DBSetProp('V_MATERIALES_X_ALMACEN_3', 'View', 'FetchSize', 100)
DBSetProp('V_MATERIALES_X_ALMACEN_3', 'View', 'MaxRecords', -1)
DBSetProp('V_MATERIALES_X_ALMACEN_3', 'View', 'Tables', PsNomBDAno+'!almcatge,'+PsNomBdAno+'!almcatal,'+PsNomCia+'!almtalma')
DBSetProp('V_MATERIALES_X_ALMACEN_3', 'View', 'Prepared', .F.)
DBSetProp('V_MATERIALES_X_ALMACEN_3', 'View', 'CompareMemo', .T.)
DBSetProp('V_MATERIALES_X_ALMACEN_3', 'View', 'FetchAsNeeded', .F.)
DBSetProp('V_MATERIALES_X_ALMACEN_3', 'View', 'Comment', "")
DBSetProp('V_MATERIALES_X_ALMACEN_3', 'View', 'BatchUpdateCount', 1)
DBSetProp('V_MATERIALES_X_ALMACEN_3', 'View', 'ShareConnection', .F.)
DBSetProp('V_MATERIALES_X_ALMACEN_3', 'View', 'AllowSimultaneousFetch', .F.)

*!* Field Level Properties for V_MATERIALES_X_ALMACEN_3
* Props for the V_MATERIALES_X_ALMACEN_3.codmat field.
DBSetProp('V_MATERIALES_X_ALMACEN_3.codmat', 'Field', 'KeyField', .F.)
DBSetProp('V_MATERIALES_X_ALMACEN_3.codmat', 'Field', 'Updatable', .F.)
DBSetProp('V_MATERIALES_X_ALMACEN_3.codmat', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.codmat')
DBSetProp('V_MATERIALES_X_ALMACEN_3.codmat', 'Field', 'DataType', "C(13)")
* Props for the V_MATERIALES_X_ALMACEN_3.desmat field.
DBSetProp('V_MATERIALES_X_ALMACEN_3.desmat', 'Field', 'KeyField', .F.)
DBSetProp('V_MATERIALES_X_ALMACEN_3.desmat', 'Field', 'Updatable', .T.)
DBSetProp('V_MATERIALES_X_ALMACEN_3.desmat', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.desmat')
DBSetProp('V_MATERIALES_X_ALMACEN_3.desmat', 'Field', 'DataType', "C(40)")
* Props for the V_MATERIALES_X_ALMACEN_3.undstk field.
DBSetProp('V_MATERIALES_X_ALMACEN_3.undstk', 'Field', 'KeyField', .F.)
DBSetProp('V_MATERIALES_X_ALMACEN_3.undstk', 'Field', 'Updatable', .T.)
DBSetProp('V_MATERIALES_X_ALMACEN_3.undstk', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.undstk')
DBSetProp('V_MATERIALES_X_ALMACEN_3.undstk', 'Field', 'DataType', "C(3)")
* Props for the V_MATERIALES_X_ALMACEN_3.undvta field.
DBSetProp('V_MATERIALES_X_ALMACEN_3.undvta', 'Field', 'KeyField', .F.)
DBSetProp('V_MATERIALES_X_ALMACEN_3.undvta', 'Field', 'Updatable', .T.)
DBSetProp('V_MATERIALES_X_ALMACEN_3.undvta', 'Field', 'UpdateName', PsNomBDAno+'!almcatal.undvta')
DBSetProp('V_MATERIALES_X_ALMACEN_3.undvta', 'Field', 'DataType', "C(3)")
* Props for the V_MATERIALES_X_ALMACEN_3.facequ field.
DBSetProp('V_MATERIALES_X_ALMACEN_3.facequ', 'Field', 'KeyField', .F.)
DBSetProp('V_MATERIALES_X_ALMACEN_3.facequ', 'Field', 'Updatable', .F.)
DBSetProp('V_MATERIALES_X_ALMACEN_3.facequ', 'Field', 'UpdateName', PsNomBDAno+'!almcatal.facequ')
DBSetProp('V_MATERIALES_X_ALMACEN_3.facequ', 'Field', 'DataType', "N(10,4)")
* Props for the V_MATERIALES_X_ALMACEN_3.codsed field.
DBSetProp('V_MATERIALES_X_ALMACEN_3.codsed', 'Field', 'KeyField', .F.)
DBSetProp('V_MATERIALES_X_ALMACEN_3.codsed', 'Field', 'Updatable', .F.)
DBSetProp('V_MATERIALES_X_ALMACEN_3.codsed', 'Field', 'UpdateName', PsNomCia+'!almtalma.codsed')
DBSetProp('V_MATERIALES_X_ALMACEN_3.codsed', 'Field', 'DataType', "C(3)")
* Props for the V_MATERIALES_X_ALMACEN_3.subalm field.
DBSetProp('V_MATERIALES_X_ALMACEN_3.subalm', 'Field', 'KeyField', .F.)
DBSetProp('V_MATERIALES_X_ALMACEN_3.subalm', 'Field', 'Updatable', .F.)
DBSetProp('V_MATERIALES_X_ALMACEN_3.subalm', 'Field', 'UpdateName', PsNomBDAno+'!almcatal.subalm')
DBSetProp('V_MATERIALES_X_ALMACEN_3.subalm', 'Field', 'DataType', "C(3)")
* Props for the V_MATERIALES_X_ALMACEN_3.dessub field.
DBSetProp('V_MATERIALES_X_ALMACEN_3.dessub', 'Field', 'KeyField', .F.)
DBSetProp('V_MATERIALES_X_ALMACEN_3.dessub', 'Field', 'Updatable', .T.)
DBSetProp('V_MATERIALES_X_ALMACEN_3.dessub', 'Field', 'UpdateName', PsNomCia+'!almtalma.dessub')
DBSetProp('V_MATERIALES_X_ALMACEN_3.dessub', 'Field', 'DataType', "C(32)")
* Props for the V_MATERIALES_X_ALMACEN_3.stk_sede field.
DBSetProp('V_MATERIALES_X_ALMACEN_3.stk_sede', 'Field', 'KeyField', .F.)
DBSetProp('V_MATERIALES_X_ALMACEN_3.stk_sede', 'Field', 'Updatable', .F.)
DBSetProp('V_MATERIALES_X_ALMACEN_3.stk_sede', 'Field', 'UpdateName', '0000')
DBSetProp('V_MATERIALES_X_ALMACEN_3.stk_sede', 'Field', 'DataType', "N(6,4)")
* Props for the V_MATERIALES_X_ALMACEN_3.stk_alm field.
DBSetProp('V_MATERIALES_X_ALMACEN_3.stk_alm', 'Field', 'KeyField', .F.)
DBSetProp('V_MATERIALES_X_ALMACEN_3.stk_alm', 'Field', 'Updatable', .F.)
DBSetProp('V_MATERIALES_X_ALMACEN_3.stk_alm', 'Field', 'UpdateName', '0000')
DBSetProp('V_MATERIALES_X_ALMACEN_3.stk_alm', 'Field', 'DataType', "N(6,4)")
* Props for the V_MATERIALES_X_ALMACEN_3.stk_gen field.
DBSetProp('V_MATERIALES_X_ALMACEN_3.stk_gen', 'Field', 'KeyField', .F.)
DBSetProp('V_MATERIALES_X_ALMACEN_3.stk_gen', 'Field', 'Updatable', .F.)
DBSetProp('V_MATERIALES_X_ALMACEN_3.stk_gen', 'Field', 'UpdateName', '0000')
DBSetProp('V_MATERIALES_X_ALMACEN_3.stk_gen', 'Field', 'DataType', "N(6,4)")
* Props for the V_MATERIALES_X_ALMACEN_3.puinmn field.
DBSetProp('V_MATERIALES_X_ALMACEN_3.puinmn', 'Field', 'KeyField', .F.)
DBSetProp('V_MATERIALES_X_ALMACEN_3.puinmn', 'Field', 'Updatable', .T.)
DBSetProp('V_MATERIALES_X_ALMACEN_3.puinmn', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.puinmn')
DBSetProp('V_MATERIALES_X_ALMACEN_3.puinmn', 'Field', 'DataType', "N(12,4)")
* Props for the V_MATERIALES_X_ALMACEN_3.puinus field.
DBSetProp('V_MATERIALES_X_ALMACEN_3.puinus', 'Field', 'KeyField', .F.)
DBSetProp('V_MATERIALES_X_ALMACEN_3.puinus', 'Field', 'Updatable', .T.)
DBSetProp('V_MATERIALES_X_ALMACEN_3.puinus', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.puinus')
DBSetProp('V_MATERIALES_X_ALMACEN_3.puinus', 'Field', 'DataType', "N(12,4)")
* Props for the V_MATERIALES_X_ALMACEN_3.fching field.
DBSetProp('V_MATERIALES_X_ALMACEN_3.fching', 'Field', 'KeyField', .F.)
DBSetProp('V_MATERIALES_X_ALMACEN_3.fching', 'Field', 'Updatable', .T.)
DBSetProp('V_MATERIALES_X_ALMACEN_3.fching', 'Field', 'UpdateName', PsNomBDAno+'!almcatal.fching')
DBSetProp('V_MATERIALES_X_ALMACEN_3.fching', 'Field', 'DataType', "D")
* Props for the V_MATERIALES_X_ALMACEN_3.fchsal field.
DBSetProp('V_MATERIALES_X_ALMACEN_3.fchsal', 'Field', 'KeyField', .F.)
DBSetProp('V_MATERIALES_X_ALMACEN_3.fchsal', 'Field', 'Updatable', .T.)
DBSetProp('V_MATERIALES_X_ALMACEN_3.fchsal', 'Field', 'UpdateName', PsNomBDAno+'!almcatal.fchsal')
DBSetProp('V_MATERIALES_X_ALMACEN_3.fchsal', 'Field', 'DataType', "D")
* Props for the V_MATERIALES_X_ALMACEN_3.stkact field.
DBSetProp('V_MATERIALES_X_ALMACEN_3.stkact', 'Field', 'KeyField', .F.)
DBSetProp('V_MATERIALES_X_ALMACEN_3.stkact', 'Field', 'Updatable', .F.)
DBSetProp('V_MATERIALES_X_ALMACEN_3.stkact', 'Field', 'UpdateName', PsNomBDAno+'!almcatal.stkact')
DBSetProp('V_MATERIALES_X_ALMACEN_3.stkact', 'Field', 'DataType', "N(14,4)")
* Props for the V_MATERIALES_X_ALMACEN_3.codant field.
DBSetProp('V_MATERIALES_X_ALMACEN_3.codant', 'Field', 'KeyField', .F.)
DBSetProp('V_MATERIALES_X_ALMACEN_3.codant', 'Field', 'Updatable', .T.)
DBSetProp('V_MATERIALES_X_ALMACEN_3.codant', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.codant')
DBSetProp('V_MATERIALES_X_ALMACEN_3.codant', 'Field', 'DataType', "C(15)")
* Props for the V_MATERIALES_X_ALMACEN_3.codsec field.
DBSetProp('V_MATERIALES_X_ALMACEN_3.codsec', 'Field', 'KeyField', .F.)
DBSetProp('V_MATERIALES_X_ALMACEN_3.codsec', 'Field', 'Updatable', .F.)
DBSetProp('V_MATERIALES_X_ALMACEN_3.codsec', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.codsec')
DBSetProp('V_MATERIALES_X_ALMACEN_3.codsec', 'Field', 'DataType', "C(2)")
ENDFUNC
 
FUNCTION MakeView_V_MOVIMIENTOS_ALMACEN
PARAMETERS PsNomCia,PsNomBdAno
***************** View setup for V_MOVIMIENTOS_ALMACEN ***************

CREATE SQL VIEW "V_MOVIMIENTOS_ALMACEN" ; 
   AS SELECT Almdtran.codsed, Almdtran.subalm, Almdtran.almori, Almdtran.tipmov, Almdtran.codmov, Almdtran.nrodoc, ; 
   Almdtran.nroitm, Almdtran.fchdoc, Almdtran.codcli, Almdtran.codpro, Almdtran.codmon, Almdtran.tpocmb, ;
   Almdtran.tporeq, Almdtran.codmat, Almdtran.codprd, Almdtran.candes, Almdtran.canrec, Almdtran.lote, Almdtran.fchvto, ;
   Almdtran.candev, Almdtran.cnfmla, Almdtran.factor, Almdtran.preuni, Almdtran.impcto, Almdtran.stksub, Almdtran.stkact, ;
   Almdtran.codajt, Almdtran.undvta, Almdtran.tporef, Almdtran.nroref, Almdtran.tporfb, Almdtran.nrorfb, Almdtran.nroref2, ;
   Almdtran.impnac, Almdtran.impusa, Almdtran.vctomn, Almdtran.vctous, Almdtran.user, Almdtran.fbatch, Almdtran.codope, ;
   Almdtran.nroast, Almdtran.anoast, Almdtran.codnew, Almdtran.codnew1, Almdtran.coduser, Almdtran.fchhora, Almctran.nrorf1, ;
   Almctran.nrorf2, Almctran.nrorf3, Almctran.nroodt, Almcatge.desmat, Almcftra.desmov, Almcftra.pidpco, Almcatge.undstk, ;
   Almdtran.situ, Almdtran.serie, Almctran.fchfin FROM  &PsNomBDAno.!almcftra, &PsNomBDAno.!almctran ;
   INNER JOIN  &PsNomBDAno.!almdtran  INNER JOIN &PsNomBDAno.!almcatge  ON  Almdtran.codmat = Almcatge.codmat  ; 
   ON ( (  Almctran.subalm = Almdtran.subalm AND  Almctran.tipmov = Almdtran.tipmov ) AND  Almctran.codmov = Almdtran.codmov ) AND  Almctran.nrodoc = Almdtran.nrodoc WHERE  Almctran.tipmov = Almcftra.tipmov AND  Almctran.codmov = Almcftra.codmov ORDER BY Almdtran.tipmov, Almdtran.codmov, Almdtran.subalm

DBSetProp('V_MOVIMIENTOS_ALMACEN', 'View', 'UpdateType', 1)
DBSetProp('V_MOVIMIENTOS_ALMACEN', 'View', 'WhereType', 3)
DBSetProp('V_MOVIMIENTOS_ALMACEN', 'View', 'FetchMemo', .T.)
DBSetProp('V_MOVIMIENTOS_ALMACEN', 'View', 'SendUpdates', .F.)
DBSetProp('V_MOVIMIENTOS_ALMACEN', 'View', 'UseMemoSize', 255)
DBSetProp('V_MOVIMIENTOS_ALMACEN', 'View', 'FetchSize', 100)
DBSetProp('V_MOVIMIENTOS_ALMACEN', 'View', 'MaxRecords', -1)
DBSetProp('V_MOVIMIENTOS_ALMACEN', 'View', 'Tables', PsNomBDAno+'!almdtran,'+PsNomBDAno+'!almctran,'+PsNomBDAno+'!almcftra')
DBSetProp('V_MOVIMIENTOS_ALMACEN', 'View', 'Prepared', .F.)
DBSetProp('V_MOVIMIENTOS_ALMACEN', 'View', 'CompareMemo', .T.)
DBSetProp('V_MOVIMIENTOS_ALMACEN', 'View', 'FetchAsNeeded', .F.)
DBSetProp('V_MOVIMIENTOS_ALMACEN', 'View', 'Comment', "")
DBSetProp('V_MOVIMIENTOS_ALMACEN', 'View', 'BatchUpdateCount', 1)
DBSetProp('V_MOVIMIENTOS_ALMACEN', 'View', 'ShareConnection', .F.)
DBSetProp('V_MOVIMIENTOS_ALMACEN', 'View', 'AllowSimultaneousFetch', .F.)

*!* Field Level Properties for V_MOVIMIENTOS_ALMACEN
* Props for the V_MOVIMIENTOS_ALMACEN.codsed field.
DBSetProp('V_MOVIMIENTOS_ALMACEN.codsed', 'Field', 'KeyField', .F.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.codsed', 'Field', 'Updatable', .F.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.codsed', 'Field', 'UpdateName', PsNomBDAno+'!almdtran.codsed')
DBSetProp('V_MOVIMIENTOS_ALMACEN.codsed', 'Field', 'DataType', "C(3)")
* Props for the V_MOVIMIENTOS_ALMACEN.subalm field.
DBSetProp('V_MOVIMIENTOS_ALMACEN.subalm', 'Field', 'KeyField', .F.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.subalm', 'Field', 'Updatable', .F.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.subalm', 'Field', 'UpdateName', PsNomBDAno+'!almdtran.subalm')
DBSetProp('V_MOVIMIENTOS_ALMACEN.subalm', 'Field', 'DataType', "C(3)")
* Props for the V_MOVIMIENTOS_ALMACEN.almori field.
DBSetProp('V_MOVIMIENTOS_ALMACEN.almori', 'Field', 'KeyField', .F.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.almori', 'Field', 'Updatable', .F.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.almori', 'Field', 'UpdateName', PsNomBDAno+'!almdtran.almori')
DBSetProp('V_MOVIMIENTOS_ALMACEN.almori', 'Field', 'DataType', "C(3)")
* Props for the V_MOVIMIENTOS_ALMACEN.tipmov field.
DBSetProp('V_MOVIMIENTOS_ALMACEN.tipmov', 'Field', 'KeyField', .F.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.tipmov', 'Field', 'Updatable', .F.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.tipmov', 'Field', 'UpdateName', PsNomBDAno+'!almdtran.tipmov')
DBSetProp('V_MOVIMIENTOS_ALMACEN.tipmov', 'Field', 'DataType', "C(1)")
* Props for the V_MOVIMIENTOS_ALMACEN.codmov field.
DBSetProp('V_MOVIMIENTOS_ALMACEN.codmov', 'Field', 'KeyField', .F.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.codmov', 'Field', 'Updatable', .F.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.codmov', 'Field', 'UpdateName', PsNomBDAno+'!almdtran.codmov')
DBSetProp('V_MOVIMIENTOS_ALMACEN.codmov', 'Field', 'DataType', "C(3)")
* Props for the V_MOVIMIENTOS_ALMACEN.nrodoc field.
DBSetProp('V_MOVIMIENTOS_ALMACEN.nrodoc', 'Field', 'KeyField', .F.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.nrodoc', 'Field', 'Updatable', .F.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.nrodoc', 'Field', 'UpdateName', PsNomBDAno+'!almdtran.nrodoc')
DBSetProp('V_MOVIMIENTOS_ALMACEN.nrodoc', 'Field', 'DataType', "C(10)")
* Props for the V_MOVIMIENTOS_ALMACEN.nroitm field.
DBSetProp('V_MOVIMIENTOS_ALMACEN.nroitm', 'Field', 'KeyField', .F.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.nroitm', 'Field', 'Updatable', .F.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.nroitm', 'Field', 'UpdateName', PsNomBDAno+'!almdtran.nroitm')
DBSetProp('V_MOVIMIENTOS_ALMACEN.nroitm', 'Field', 'DataType', "N(3)")
* Props for the V_MOVIMIENTOS_ALMACEN.fchdoc field.
DBSetProp('V_MOVIMIENTOS_ALMACEN.fchdoc', 'Field', 'KeyField', .F.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.fchdoc', 'Field', 'Updatable', .F.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.fchdoc', 'Field', 'UpdateName', PsNomBDAno+'!almdtran.fchdoc')
DBSetProp('V_MOVIMIENTOS_ALMACEN.fchdoc', 'Field', 'DataType', "D")
* Props for the V_MOVIMIENTOS_ALMACEN.codcli field.
DBSetProp('V_MOVIMIENTOS_ALMACEN.codcli', 'Field', 'KeyField', .F.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.codcli', 'Field', 'Updatable', .F.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.codcli', 'Field', 'UpdateName', PsNomBDAno+'!almdtran.codcli')
DBSetProp('V_MOVIMIENTOS_ALMACEN.codcli', 'Field', 'DataType', "C(11)")
* Props for the V_MOVIMIENTOS_ALMACEN.codpro field.
DBSetProp('V_MOVIMIENTOS_ALMACEN.codpro', 'Field', 'KeyField', .F.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.codpro', 'Field', 'Updatable', .F.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.codpro', 'Field', 'UpdateName', PsNomBDAno+'!almdtran.codpro')
DBSetProp('V_MOVIMIENTOS_ALMACEN.codpro', 'Field', 'DataType', "C(11)")
* Props for the V_MOVIMIENTOS_ALMACEN.codmon field.
DBSetProp('V_MOVIMIENTOS_ALMACEN.codmon', 'Field', 'KeyField', .F.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.codmon', 'Field', 'Updatable', .F.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.codmon', 'Field', 'UpdateName', PsNomBDAno+'!almdtran.codmon')
DBSetProp('V_MOVIMIENTOS_ALMACEN.codmon', 'Field', 'DataType', "N(1)")
* Props for the V_MOVIMIENTOS_ALMACEN.tpocmb field.
DBSetProp('V_MOVIMIENTOS_ALMACEN.tpocmb', 'Field', 'KeyField', .F.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.tpocmb', 'Field', 'Updatable', .F.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.tpocmb', 'Field', 'UpdateName', PsNomBDAno+'!almdtran.tpocmb')
DBSetProp('V_MOVIMIENTOS_ALMACEN.tpocmb', 'Field', 'DataType', "N(10,4)")
* Props for the V_MOVIMIENTOS_ALMACEN.tporeq field.
DBSetProp('V_MOVIMIENTOS_ALMACEN.tporeq', 'Field', 'KeyField', .F.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.tporeq', 'Field', 'Updatable', .T.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.tporeq', 'Field', 'UpdateName', PsNomBDAno+'!almdtran.tporeq')
DBSetProp('V_MOVIMIENTOS_ALMACEN.tporeq', 'Field', 'DataType', "C(1)")
* Props for the V_MOVIMIENTOS_ALMACEN.codmat field.
DBSetProp('V_MOVIMIENTOS_ALMACEN.codmat', 'Field', 'KeyField', .F.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.codmat', 'Field', 'Updatable', .F.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.codmat', 'Field', 'UpdateName', PsNomBDAno+'!almdtran.codmat')
DBSetProp('V_MOVIMIENTOS_ALMACEN.codmat', 'Field', 'DataType', "C(13)")
* Props for the V_MOVIMIENTOS_ALMACEN.codprd field.
DBSetProp('V_MOVIMIENTOS_ALMACEN.codprd', 'Field', 'KeyField', .F.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.codprd', 'Field', 'Updatable', .F.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.codprd', 'Field', 'UpdateName', PsNomBDAno+'!almdtran.codprd')
DBSetProp('V_MOVIMIENTOS_ALMACEN.codprd', 'Field', 'DataType', "C(13)")
* Props for the V_MOVIMIENTOS_ALMACEN.candes field.
DBSetProp('V_MOVIMIENTOS_ALMACEN.candes', 'Field', 'KeyField', .F.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.candes', 'Field', 'Updatable', .T.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.candes', 'Field', 'UpdateName', PsNomBDAno+'!almdtran.candes')
DBSetProp('V_MOVIMIENTOS_ALMACEN.candes', 'Field', 'DataType', "N(14,4)")
* Props for the V_MOVIMIENTOS_ALMACEN.canrec field.
DBSetProp('V_MOVIMIENTOS_ALMACEN.canrec', 'Field', 'KeyField', .F.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.canrec', 'Field', 'Updatable', .T.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.canrec', 'Field', 'UpdateName', PsNomBDAno+'!almdtran.canrec')
DBSetProp('V_MOVIMIENTOS_ALMACEN.canrec', 'Field', 'DataType', "N(14,4)")
* Props for the V_MOVIMIENTOS_ALMACEN.lote field.
DBSetProp('V_MOVIMIENTOS_ALMACEN.lote', 'Field', 'KeyField', .F.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.lote', 'Field', 'Updatable', .T.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.lote', 'Field', 'UpdateName', PsNomBDAno+'!almdtran.lote')
DBSetProp('V_MOVIMIENTOS_ALMACEN.lote', 'Field', 'DataType', "C(15)")
* Props for the V_MOVIMIENTOS_ALMACEN.fchvto field.
DBSetProp('V_MOVIMIENTOS_ALMACEN.fchvto', 'Field', 'KeyField', .F.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.fchvto', 'Field', 'Updatable', .T.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.fchvto', 'Field', 'UpdateName', PsNomBDAno+'!almdtran.fchvto')
DBSetProp('V_MOVIMIENTOS_ALMACEN.fchvto', 'Field', 'DataType', "D")
* Props for the V_MOVIMIENTOS_ALMACEN.candev field.
DBSetProp('V_MOVIMIENTOS_ALMACEN.candev', 'Field', 'KeyField', .F.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.candev', 'Field', 'Updatable', .T.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.candev', 'Field', 'UpdateName', PsNomBDAno+'!almdtran.candev')
DBSetProp('V_MOVIMIENTOS_ALMACEN.candev', 'Field', 'DataType', "N(14,4)")
* Props for the V_MOVIMIENTOS_ALMACEN.cnfmla field.
DBSetProp('V_MOVIMIENTOS_ALMACEN.cnfmla', 'Field', 'KeyField', .F.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.cnfmla', 'Field', 'Updatable', .T.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.cnfmla', 'Field', 'UpdateName', PsNomBDAno+'!almdtran.cnfmla')
DBSetProp('V_MOVIMIENTOS_ALMACEN.cnfmla', 'Field', 'DataType', "N(14,4)")
* Props for the V_MOVIMIENTOS_ALMACEN.factor field.
DBSetProp('V_MOVIMIENTOS_ALMACEN.factor', 'Field', 'KeyField', .F.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.factor', 'Field', 'Updatable', .T.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.factor', 'Field', 'UpdateName', PsNomBDAno+'!almdtran.factor')
DBSetProp('V_MOVIMIENTOS_ALMACEN.factor', 'Field', 'DataType', "N(7,4)")
* Props for the V_MOVIMIENTOS_ALMACEN.preuni field.
DBSetProp('V_MOVIMIENTOS_ALMACEN.preuni', 'Field', 'KeyField', .F.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.preuni', 'Field', 'Updatable', .T.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.preuni', 'Field', 'UpdateName', PsNomBDAno+'!almdtran.preuni')
DBSetProp('V_MOVIMIENTOS_ALMACEN.preuni', 'Field', 'DataType', "N(16,4)")
* Props for the V_MOVIMIENTOS_ALMACEN.impcto field.
DBSetProp('V_MOVIMIENTOS_ALMACEN.impcto', 'Field', 'KeyField', .F.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.impcto', 'Field', 'Updatable', .T.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.impcto', 'Field', 'UpdateName', PsNomBDAno+'!almdtran.impcto')
DBSetProp('V_MOVIMIENTOS_ALMACEN.impcto', 'Field', 'DataType', "N(14,4)")
* Props for the V_MOVIMIENTOS_ALMACEN.stksub field.
DBSetProp('V_MOVIMIENTOS_ALMACEN.stksub', 'Field', 'KeyField', .F.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.stksub', 'Field', 'Updatable', .T.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.stksub', 'Field', 'UpdateName', PsNomBDAno+'!almdtran.stksub')
DBSetProp('V_MOVIMIENTOS_ALMACEN.stksub', 'Field', 'DataType', "N(16,4)")
* Props for the V_MOVIMIENTOS_ALMACEN.stkact field.
DBSetProp('V_MOVIMIENTOS_ALMACEN.stkact', 'Field', 'KeyField', .F.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.stkact', 'Field', 'Updatable', .F.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.stkact', 'Field', 'UpdateName', PsNomBDAno+'!almdtran.stkact')
DBSetProp('V_MOVIMIENTOS_ALMACEN.stkact', 'Field', 'DataType', "N(16,4)")
* Props for the V_MOVIMIENTOS_ALMACEN.codajt field.
DBSetProp('V_MOVIMIENTOS_ALMACEN.codajt', 'Field', 'KeyField', .F.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.codajt', 'Field', 'Updatable', .T.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.codajt', 'Field', 'UpdateName', PsNomBDAno+'!almdtran.codajt')
DBSetProp('V_MOVIMIENTOS_ALMACEN.codajt', 'Field', 'DataType', "C(1)")
* Props for the V_MOVIMIENTOS_ALMACEN.undvta field.
DBSetProp('V_MOVIMIENTOS_ALMACEN.undvta', 'Field', 'KeyField', .F.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.undvta', 'Field', 'Updatable', .F.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.undvta', 'Field', 'UpdateName', PsNomBDAno+'!almdtran.undvta')
DBSetProp('V_MOVIMIENTOS_ALMACEN.undvta', 'Field', 'DataType', "C(3)")
* Props for the V_MOVIMIENTOS_ALMACEN.tporef field.
DBSetProp('V_MOVIMIENTOS_ALMACEN.tporef', 'Field', 'KeyField', .F.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.tporef', 'Field', 'Updatable', .T.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.tporef', 'Field', 'UpdateName', PsNomBDAno+'!almdtran.tporef')
DBSetProp('V_MOVIMIENTOS_ALMACEN.tporef', 'Field', 'DataType', "C(4)")
* Props for the V_MOVIMIENTOS_ALMACEN.nroref field.
DBSetProp('V_MOVIMIENTOS_ALMACEN.nroref', 'Field', 'KeyField', .F.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.nroref', 'Field', 'Updatable', .T.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.nroref', 'Field', 'UpdateName', PsNomBDAno+'!almdtran.nroref')
DBSetProp('V_MOVIMIENTOS_ALMACEN.nroref', 'Field', 'DataType', "C(10)")
* Props for the V_MOVIMIENTOS_ALMACEN.tporfb field.
DBSetProp('V_MOVIMIENTOS_ALMACEN.tporfb', 'Field', 'KeyField', .F.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.tporfb', 'Field', 'Updatable', .T.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.tporfb', 'Field', 'UpdateName', PsNomBDAno+'!almdtran.tporfb')
DBSetProp('V_MOVIMIENTOS_ALMACEN.tporfb', 'Field', 'DataType', "C(4)")
* Props for the V_MOVIMIENTOS_ALMACEN.nrorfb field.
DBSetProp('V_MOVIMIENTOS_ALMACEN.nrorfb', 'Field', 'KeyField', .F.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.nrorfb', 'Field', 'Updatable', .T.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.nrorfb', 'Field', 'UpdateName', PsNomBDAno+'!almdtran.nrorfb')
DBSetProp('V_MOVIMIENTOS_ALMACEN.nrorfb', 'Field', 'DataType', "C(10)")
* Props for the V_MOVIMIENTOS_ALMACEN.nroref2 field.
DBSetProp('V_MOVIMIENTOS_ALMACEN.nroref2', 'Field', 'KeyField', .F.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.nroref2', 'Field', 'Updatable', .T.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.nroref2', 'Field', 'UpdateName', PsNomBDAno+'!almdtran.nroref2')
DBSetProp('V_MOVIMIENTOS_ALMACEN.nroref2', 'Field', 'DataType', "C(10)")
* Props for the V_MOVIMIENTOS_ALMACEN.impnac field.
DBSetProp('V_MOVIMIENTOS_ALMACEN.impnac', 'Field', 'KeyField', .F.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.impnac', 'Field', 'Updatable', .T.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.impnac', 'Field', 'UpdateName', PsNomBDAno+'!almdtran.impnac')
DBSetProp('V_MOVIMIENTOS_ALMACEN.impnac', 'Field', 'DataType', "N(16,4)")
* Props for the V_MOVIMIENTOS_ALMACEN.impusa field.
DBSetProp('V_MOVIMIENTOS_ALMACEN.impusa', 'Field', 'KeyField', .F.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.impusa', 'Field', 'Updatable', .T.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.impusa', 'Field', 'UpdateName', PsNomBDAno+'!almdtran.impusa')
DBSetProp('V_MOVIMIENTOS_ALMACEN.impusa', 'Field', 'DataType', "N(16,4)")
* Props for the V_MOVIMIENTOS_ALMACEN.vctomn field.
DBSetProp('V_MOVIMIENTOS_ALMACEN.vctomn', 'Field', 'KeyField', .F.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.vctomn', 'Field', 'Updatable', .F.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.vctomn', 'Field', 'UpdateName', PsNomBDAno+'!almdtran.vctomn')
DBSetProp('V_MOVIMIENTOS_ALMACEN.vctomn', 'Field', 'DataType', "N(16,4)")
* Props for the V_MOVIMIENTOS_ALMACEN.vctous field.
DBSetProp('V_MOVIMIENTOS_ALMACEN.vctous', 'Field', 'KeyField', .F.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.vctous', 'Field', 'Updatable', .F.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.vctous', 'Field', 'UpdateName', PsNomBDAno+'!almdtran.vctous')
DBSetProp('V_MOVIMIENTOS_ALMACEN.vctous', 'Field', 'DataType', "N(16,4)")
* Props for the V_MOVIMIENTOS_ALMACEN.user field.
DBSetProp('V_MOVIMIENTOS_ALMACEN.user', 'Field', 'KeyField', .F.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.user', 'Field', 'Updatable', .F.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.user', 'Field', 'UpdateName', PsNomBDAno+'!almdtran.user')
DBSetProp('V_MOVIMIENTOS_ALMACEN.user', 'Field', 'DataType', "C(10)")
* Props for the V_MOVIMIENTOS_ALMACEN.fbatch field.
DBSetProp('V_MOVIMIENTOS_ALMACEN.fbatch', 'Field', 'KeyField', .F.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.fbatch', 'Field', 'Updatable', .F.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.fbatch', 'Field', 'UpdateName', PsNomBDAno+'!almdtran.fbatch')
DBSetProp('V_MOVIMIENTOS_ALMACEN.fbatch', 'Field', 'DataType', "N(8,4)")
* Props for the V_MOVIMIENTOS_ALMACEN.codope field.
DBSetProp('V_MOVIMIENTOS_ALMACEN.codope', 'Field', 'KeyField', .F.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.codope', 'Field', 'Updatable', .F.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.codope', 'Field', 'UpdateName', PsNomBDAno+'!almdtran.codope')
DBSetProp('V_MOVIMIENTOS_ALMACEN.codope', 'Field', 'DataType', "C(3)")
* Props for the V_MOVIMIENTOS_ALMACEN.nroast field.
DBSetProp('V_MOVIMIENTOS_ALMACEN.nroast', 'Field', 'KeyField', .F.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.nroast', 'Field', 'Updatable', .T.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.nroast', 'Field', 'UpdateName', PsNomBDAno+'!almdtran.nroast')
DBSetProp('V_MOVIMIENTOS_ALMACEN.nroast', 'Field', 'DataType', "C(6)")
* Props for the V_MOVIMIENTOS_ALMACEN.anoast field.
DBSetProp('V_MOVIMIENTOS_ALMACEN.anoast', 'Field', 'KeyField', .F.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.anoast', 'Field', 'Updatable', .T.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.anoast', 'Field', 'UpdateName', PsNomBDAno+'!almdtran.anoast')
DBSetProp('V_MOVIMIENTOS_ALMACEN.anoast', 'Field', 'DataType', "C(4)")
* Props for the V_MOVIMIENTOS_ALMACEN.codnew field.
DBSetProp('V_MOVIMIENTOS_ALMACEN.codnew', 'Field', 'KeyField', .F.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.codnew', 'Field', 'Updatable', .F.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.codnew', 'Field', 'UpdateName', PsNomBDAno+'!almdtran.codnew')
DBSetProp('V_MOVIMIENTOS_ALMACEN.codnew', 'Field', 'DataType', "C(13)")
* Props for the V_MOVIMIENTOS_ALMACEN.codnew1 field.
DBSetProp('V_MOVIMIENTOS_ALMACEN.codnew1', 'Field', 'KeyField', .F.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.codnew1', 'Field', 'Updatable', .T.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.codnew1', 'Field', 'UpdateName', PsNomBDAno+'!almdtran.codnew1')
DBSetProp('V_MOVIMIENTOS_ALMACEN.codnew1', 'Field', 'DataType', "C(8)")
* Props for the V_MOVIMIENTOS_ALMACEN.coduser field.
DBSetProp('V_MOVIMIENTOS_ALMACEN.coduser', 'Field', 'KeyField', .F.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.coduser', 'Field', 'Updatable', .F.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.coduser', 'Field', 'UpdateName', PsNomBDAno+'!almdtran.coduser')
DBSetProp('V_MOVIMIENTOS_ALMACEN.coduser', 'Field', 'DataType', "C(8)")
* Props for the V_MOVIMIENTOS_ALMACEN.fchhora field.
DBSetProp('V_MOVIMIENTOS_ALMACEN.fchhora', 'Field', 'KeyField', .F.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.fchhora', 'Field', 'Updatable', .F.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.fchhora', 'Field', 'UpdateName', PsNomBDAno+'!almdtran.fchhora')
DBSetProp('V_MOVIMIENTOS_ALMACEN.fchhora', 'Field', 'DataType', "T")
* Props for the V_MOVIMIENTOS_ALMACEN.nrorf1 field.
DBSetProp('V_MOVIMIENTOS_ALMACEN.nrorf1', 'Field', 'KeyField', .F.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.nrorf1', 'Field', 'Updatable', .T.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.nrorf1', 'Field', 'UpdateName', PsNomBDAno+'!almctran.nrorf1')
DBSetProp('V_MOVIMIENTOS_ALMACEN.nrorf1', 'Field', 'DataType', "C(10)")
* Props for the V_MOVIMIENTOS_ALMACEN.nrorf2 field.
DBSetProp('V_MOVIMIENTOS_ALMACEN.nrorf2', 'Field', 'KeyField', .F.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.nrorf2', 'Field', 'Updatable', .T.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.nrorf2', 'Field', 'UpdateName', PsNomBDAno+'!almctran.nrorf2')
DBSetProp('V_MOVIMIENTOS_ALMACEN.nrorf2', 'Field', 'DataType', "C(10)")
* Props for the V_MOVIMIENTOS_ALMACEN.nrorf3 field.
DBSetProp('V_MOVIMIENTOS_ALMACEN.nrorf3', 'Field', 'KeyField', .F.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.nrorf3', 'Field', 'Updatable', .T.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.nrorf3', 'Field', 'UpdateName', PsNomBDAno+'!almctran.nrorf3')
DBSetProp('V_MOVIMIENTOS_ALMACEN.nrorf3', 'Field', 'DataType', "C(10)")
* Props for the V_MOVIMIENTOS_ALMACEN.nroodt field.
DBSetProp('V_MOVIMIENTOS_ALMACEN.nroodt', 'Field', 'KeyField', .F.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.nroodt', 'Field', 'Updatable', .T.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.nroodt', 'Field', 'UpdateName', PsNomBDAno+'!almctran.nroodt')
DBSetProp('V_MOVIMIENTOS_ALMACEN.nroodt', 'Field', 'DataType', "C(10)")
* Props for the V_MOVIMIENTOS_ALMACEN.desmat field.
DBSetProp('V_MOVIMIENTOS_ALMACEN.desmat', 'Field', 'KeyField', .F.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.desmat', 'Field', 'Updatable', .F.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.desmat', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.desmat')
DBSetProp('V_MOVIMIENTOS_ALMACEN.desmat', 'Field', 'DataType', "C(40)")
* Props for the V_MOVIMIENTOS_ALMACEN.desmov field.
DBSetProp('V_MOVIMIENTOS_ALMACEN.desmov', 'Field', 'KeyField', .F.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.desmov', 'Field', 'Updatable', .T.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.desmov', 'Field', 'UpdateName', PsNomBDAno+'!almcftra.desmov')
DBSetProp('V_MOVIMIENTOS_ALMACEN.desmov', 'Field', 'DataType', "C(37)")
* Props for the V_MOVIMIENTOS_ALMACEN.pidpco field.
DBSetProp('V_MOVIMIENTOS_ALMACEN.pidpco', 'Field', 'KeyField', .F.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.pidpco', 'Field', 'Updatable', .T.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.pidpco', 'Field', 'UpdateName', PsNomBDAno+'!almcftra.pidpco')
DBSetProp('V_MOVIMIENTOS_ALMACEN.pidpco', 'Field', 'DataType', "L")
* Props for the V_MOVIMIENTOS_ALMACEN.undstk field.
DBSetProp('V_MOVIMIENTOS_ALMACEN.undstk', 'Field', 'KeyField', .F.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.undstk', 'Field', 'Updatable', .F.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.undstk', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.undstk')
DBSetProp('V_MOVIMIENTOS_ALMACEN.undstk', 'Field', 'DataType', "C(3)")
* Props for the V_MOVIMIENTOS_ALMACEN.situ field.
DBSetProp('V_MOVIMIENTOS_ALMACEN.situ', 'Field', 'KeyField', .F.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.situ', 'Field', 'Updatable', .T.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.situ', 'Field', 'UpdateName', PsNomBDAno+'!almdtran.situ')
DBSetProp('V_MOVIMIENTOS_ALMACEN.situ', 'Field', 'DataType', "C(10)")
* Props for the V_MOVIMIENTOS_ALMACEN.serie field.
DBSetProp('V_MOVIMIENTOS_ALMACEN.serie', 'Field', 'KeyField', .F.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.serie', 'Field', 'Updatable', .T.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.serie', 'Field', 'UpdateName', PsNomBDAno+'!almdtran.serie')
DBSetProp('V_MOVIMIENTOS_ALMACEN.serie', 'Field', 'DataType', "V(100)")
* Props for the V_MOVIMIENTOS_ALMACEN.fchfin field.
DBSetProp('V_MOVIMIENTOS_ALMACEN.fchfin', 'Field', 'KeyField', .F.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.fchfin', 'Field', 'Updatable', .T.)
DBSetProp('V_MOVIMIENTOS_ALMACEN.fchfin', 'Field', 'UpdateName', PsNomBDAno+'!almctran.fchfin')
DBSetProp('V_MOVIMIENTOS_ALMACEN.fchfin', 'Field', 'DataType', "T")
ENDFUNC
 
FUNCTION MakeView_V_MATERIALES_X_LOTE
PARAMETERS PsNomCia,PsNomBdAno
***************** View setup for V_MATERIALES_X_LOTE ***************

CREATE SQL VIEW "V_MATERIALES_X_LOTE" ; 
   AS SELECT V_materiales_x_almacen_3_a.codmat, V_materiales_x_almacen_3_a.desmat, V_materiales_x_almacen_3_a.undstk,;
   Almdlote.lote, Almdlote.stkact, Almdlote.fchvto, 0.0000 AS stk_alm, V_materiales_x_almacen_3_a.codsed, ;
   V_materiales_x_almacen_3_a.subalm FROM  &PsNomBDAno.!v_materiales_x_almacen_3 V_materiales_x_almacen_3_a  ;
   INNER JOIN &PsNomBDAno.!almdlote  ON  V_materiales_x_almacen_3_a.subalm = Almdlote.subalm AND ;
   V_materiales_x_almacen_3_a.codmat = Almdlote.codmat ORDER BY V_materiales_x_almacen_3_a.codmat 

DBSetProp('V_MATERIALES_X_LOTE', 'View', 'UpdateType', 1)
DBSetProp('V_MATERIALES_X_LOTE', 'View', 'WhereType', 3)
DBSetProp('V_MATERIALES_X_LOTE', 'View', 'FetchMemo', .T.)
DBSetProp('V_MATERIALES_X_LOTE', 'View', 'SendUpdates', .F.)
DBSetProp('V_MATERIALES_X_LOTE', 'View', 'UseMemoSize', 255)
DBSetProp('V_MATERIALES_X_LOTE', 'View', 'FetchSize', 100)
DBSetProp('V_MATERIALES_X_LOTE', 'View', 'MaxRecords', -1)
DBSetProp('V_MATERIALES_X_LOTE', 'View', 'Tables', PsNomBDAno+'!almdlote,'+PsNomBDAno+'!v_materiales_x_almacen_3')
DBSetProp('V_MATERIALES_X_LOTE', 'View', 'Prepared', .F.)
DBSetProp('V_MATERIALES_X_LOTE', 'View', 'CompareMemo', .T.)
DBSetProp('V_MATERIALES_X_LOTE', 'View', 'FetchAsNeeded', .F.)
DBSetProp('V_MATERIALES_X_LOTE', 'View', 'Comment', "")
DBSetProp('V_MATERIALES_X_LOTE', 'View', 'BatchUpdateCount', 1)
DBSetProp('V_MATERIALES_X_LOTE', 'View', 'ShareConnection', .F.)
DBSetProp('V_MATERIALES_X_LOTE', 'View', 'AllowSimultaneousFetch', .F.)

*!* Field Level Properties for V_MATERIALES_X_LOTE
* Props for the V_MATERIALES_X_LOTE.codmat field.
DBSetProp('V_MATERIALES_X_LOTE.codmat', 'Field', 'KeyField', .F.)
DBSetProp('V_MATERIALES_X_LOTE.codmat', 'Field', 'Updatable', .F.)
DBSetProp('V_MATERIALES_X_LOTE.codmat', 'Field', 'UpdateName', PsNomBDAno+'!v_materiales_x_almacen_3.codmat')
DBSetProp('V_MATERIALES_X_LOTE.codmat', 'Field', 'DataType', "C(13)")
* Props for the V_MATERIALES_X_LOTE.desmat field.
DBSetProp('V_MATERIALES_X_LOTE.desmat', 'Field', 'KeyField', .F.)
DBSetProp('V_MATERIALES_X_LOTE.desmat', 'Field', 'Updatable', .F.)
DBSetProp('V_MATERIALES_X_LOTE.desmat', 'Field', 'UpdateName', PsNomBDAno+'!v_materiales_x_almacen_3.desmat')
DBSetProp('V_MATERIALES_X_LOTE.desmat', 'Field', 'DataType', "C(40)")
* Props for the V_MATERIALES_X_LOTE.undstk field.
DBSetProp('V_MATERIALES_X_LOTE.undstk', 'Field', 'KeyField', .F.)
DBSetProp('V_MATERIALES_X_LOTE.undstk', 'Field', 'Updatable', .F.)
DBSetProp('V_MATERIALES_X_LOTE.undstk', 'Field', 'UpdateName', PsNomBDAno+'!v_materiales_x_almacen_3.undstk')
DBSetProp('V_MATERIALES_X_LOTE.undstk', 'Field', 'DataType', "C(3)")
* Props for the V_MATERIALES_X_LOTE.lote field.
DBSetProp('V_MATERIALES_X_LOTE.lote', 'Field', 'KeyField', .F.)
DBSetProp('V_MATERIALES_X_LOTE.lote', 'Field', 'Updatable', .F.)
DBSetProp('V_MATERIALES_X_LOTE.lote', 'Field', 'UpdateName', PsNomBDAno+'!almdlote.lote')
DBSetProp('V_MATERIALES_X_LOTE.lote', 'Field', 'DataType', "C(15)")
* Props for the V_MATERIALES_X_LOTE.stkact field.
DBSetProp('V_MATERIALES_X_LOTE.stkact', 'Field', 'KeyField', .F.)
DBSetProp('V_MATERIALES_X_LOTE.stkact', 'Field', 'Updatable', .T.)
DBSetProp('V_MATERIALES_X_LOTE.stkact', 'Field', 'UpdateName', PsNomBDAno+'!almdlote.stkact')
DBSetProp('V_MATERIALES_X_LOTE.stkact', 'Field', 'DataType', "N(14,4)")
* Props for the V_MATERIALES_X_LOTE.fchvto field.
DBSetProp('V_MATERIALES_X_LOTE.fchvto', 'Field', 'KeyField', .F.)
DBSetProp('V_MATERIALES_X_LOTE.fchvto', 'Field', 'Updatable', .T.)
DBSetProp('V_MATERIALES_X_LOTE.fchvto', 'Field', 'UpdateName', PsNomBDAno+'!almdlote.fchvto')
DBSetProp('V_MATERIALES_X_LOTE.fchvto', 'Field', 'DataType', "D")
* Props for the V_MATERIALES_X_LOTE.stk_alm field.
DBSetProp('V_MATERIALES_X_LOTE.stk_alm', 'Field', 'KeyField', .F.)
DBSetProp('V_MATERIALES_X_LOTE.stk_alm', 'Field', 'Updatable', .F.)
DBSetProp('V_MATERIALES_X_LOTE.stk_alm', 'Field', 'UpdateName', PsNomBDAno+'!v_materiales_x_almacen_3.0000')
DBSetProp('V_MATERIALES_X_LOTE.stk_alm', 'Field', 'DataType', "N(6,4)")
* Props for the V_MATERIALES_X_LOTE.codsed field.
DBSetProp('V_MATERIALES_X_LOTE.codsed', 'Field', 'KeyField', .F.)
DBSetProp('V_MATERIALES_X_LOTE.codsed', 'Field', 'Updatable', .T.)
DBSetProp('V_MATERIALES_X_LOTE.codsed', 'Field', 'UpdateName', PsNomBDAno+'!v_materiales_x_almacen_3.codsed')
DBSetProp('V_MATERIALES_X_LOTE.codsed', 'Field', 'DataType', "C(3)")
* Props for the V_MATERIALES_X_LOTE.subalm field.
DBSetProp('V_MATERIALES_X_LOTE.subalm', 'Field', 'KeyField', .F.)
DBSetProp('V_MATERIALES_X_LOTE.subalm', 'Field', 'Updatable', .T.)
DBSetProp('V_MATERIALES_X_LOTE.subalm', 'Field', 'UpdateName', PsNomBDAno+'!v_materiales_x_almacen_3.subalm')
DBSetProp('V_MATERIALES_X_LOTE.subalm', 'Field', 'DataType', "C(3)")
ENDFUNC
 
FUNCTION MakeView_V_REPORTE_GUIA
PARAMETERS PsNomCia , PsNomBdAno
***************** View setup for V_REPORTE_GUIA ***************

CREATE SQL VIEW "V_REPORTE_GUIA" ; 
   AS SELECT Vtavguia.nrodoc, Vtavguia.fchdoc, Vtavguia.nomtra, Vtavguia.dirtra, Vtavguia.ructra, Vtavguia.platra, Vtavguia.nomcli, ; 
   Vtavguia.dircli, Vtavguia.ruccli, Almdtran.codmat, Almdtran.candes FROM  &PsNomCia.!vtavguia  INNER JOIN  ; 
   &PsNomBDAno.!almDTRAN  INNER JOIN &PsNomBDAno.!almcatge  ON  Almdtran.codmat = Almcatge.codmat  ON  Vtavguia.coddoc = Almdtran.tporef ;
    AND  Vtavguia.nrodoc = Almdtran.nroref WHERE  Vtavguia.coddoc = ( ?_CodDoc ) AND  Vtavguia.nrodoc = ( ?_NroDoc )

DBSetProp('V_REPORTE_GUIA', 'View', 'UpdateType', 1)
DBSetProp('V_REPORTE_GUIA', 'View', 'WhereType', 3)
DBSetProp('V_REPORTE_GUIA', 'View', 'FetchMemo', .T.)
DBSetProp('V_REPORTE_GUIA', 'View', 'SendUpdates', .F.)
DBSetProp('V_REPORTE_GUIA', 'View', 'UseMemoSize', 255)
DBSetProp('V_REPORTE_GUIA', 'View', 'FetchSize', 100)
DBSetProp('V_REPORTE_GUIA', 'View', 'MaxRecords', -1)
DBSetProp('V_REPORTE_GUIA', 'View', 'Tables', PsNomCia+'!vtavguia,'+PsNomBDAno+'!almdtran')
DBSetProp('V_REPORTE_GUIA', 'View', 'Prepared', .F.)
DBSetProp('V_REPORTE_GUIA', 'View', 'CompareMemo', .T.)
DBSetProp('V_REPORTE_GUIA', 'View', 'FetchAsNeeded', .F.)
DBSetProp('V_REPORTE_GUIA', 'View', 'Comment', "")
DBSetProp('V_REPORTE_GUIA', 'View', 'BatchUpdateCount', 1)
DBSetProp('V_REPORTE_GUIA', 'View', 'ShareConnection', .F.)
DBSetProp('V_REPORTE_GUIA', 'View', 'AllowSimultaneousFetch', .F.)

*!* Field Level Properties for V_REPORTE_GUIA
* Props for the V_REPORTE_GUIA.nrodoc field.
DBSetProp('V_REPORTE_GUIA.nrodoc', 'Field', 'KeyField', .F.)
DBSetProp('V_REPORTE_GUIA.nrodoc', 'Field', 'Updatable', .T.)
DBSetProp('V_REPORTE_GUIA.nrodoc', 'Field', 'UpdateName', PsNomCia+'!vtavguia.nrodoc')
DBSetProp('V_REPORTE_GUIA.nrodoc', 'Field', 'DataType', "C(10)")
* Props for the V_REPORTE_GUIA.fchdoc field.
DBSetProp('V_REPORTE_GUIA.fchdoc', 'Field', 'KeyField', .F.)
DBSetProp('V_REPORTE_GUIA.fchdoc', 'Field', 'Updatable', .T.)
DBSetProp('V_REPORTE_GUIA.fchdoc', 'Field', 'UpdateName', PsNomCia+'!vtavguia.fchdoc')
DBSetProp('V_REPORTE_GUIA.fchdoc', 'Field', 'DataType', "D")
* Props for the V_REPORTE_GUIA.nomtra field.
DBSetProp('V_REPORTE_GUIA.nomtra', 'Field', 'KeyField', .F.)
DBSetProp('V_REPORTE_GUIA.nomtra', 'Field', 'Updatable', .T.)
DBSetProp('V_REPORTE_GUIA.nomtra', 'Field', 'UpdateName', PsNomCia+'!vtavguia.nomtra')
DBSetProp('V_REPORTE_GUIA.nomtra', 'Field', 'DataType', "C(40)")
* Props for the V_REPORTE_GUIA.dirtra field.
DBSetProp('V_REPORTE_GUIA.dirtra', 'Field', 'KeyField', .F.)
DBSetProp('V_REPORTE_GUIA.dirtra', 'Field', 'Updatable', .T.)
DBSetProp('V_REPORTE_GUIA.dirtra', 'Field', 'UpdateName', PsNomCia+'!vtavguia.dirtra')
DBSetProp('V_REPORTE_GUIA.dirtra', 'Field', 'DataType', "C(40)")
* Props for the V_REPORTE_GUIA.ructra field.
DBSetProp('V_REPORTE_GUIA.ructra', 'Field', 'KeyField', .F.)
DBSetProp('V_REPORTE_GUIA.ructra', 'Field', 'Updatable', .T.)
DBSetProp('V_REPORTE_GUIA.ructra', 'Field', 'UpdateName', PsNomCia+'!vtavguia.ructra')
DBSetProp('V_REPORTE_GUIA.ructra', 'Field', 'DataType', "C(8)")
* Props for the V_REPORTE_GUIA.platra field.
DBSetProp('V_REPORTE_GUIA.platra', 'Field', 'KeyField', .F.)
DBSetProp('V_REPORTE_GUIA.platra', 'Field', 'Updatable', .T.)
DBSetProp('V_REPORTE_GUIA.platra', 'Field', 'UpdateName', PsNomCia+'!vtavguia.platra')
DBSetProp('V_REPORTE_GUIA.platra', 'Field', 'DataType', "C(10)")
* Props for the V_REPORTE_GUIA.nomcli field.
DBSetProp('V_REPORTE_GUIA.nomcli', 'Field', 'KeyField', .F.)
DBSetProp('V_REPORTE_GUIA.nomcli', 'Field', 'Updatable', .T.)
DBSetProp('V_REPORTE_GUIA.nomcli', 'Field', 'UpdateName', PsNomCia+'!vtavguia.nomcli')
DBSetProp('V_REPORTE_GUIA.nomcli', 'Field', 'DataType', "C(50)")
* Props for the V_REPORTE_GUIA.dircli field.
DBSetProp('V_REPORTE_GUIA.dircli', 'Field', 'KeyField', .F.)
DBSetProp('V_REPORTE_GUIA.dircli', 'Field', 'Updatable', .T.)
DBSetProp('V_REPORTE_GUIA.dircli', 'Field', 'UpdateName', PsNomCia+'!vtavguia.dircli')
DBSetProp('V_REPORTE_GUIA.dircli', 'Field', 'DataType', "C(60)")
* Props for the V_REPORTE_GUIA.ruccli field.
DBSetProp('V_REPORTE_GUIA.ruccli', 'Field', 'KeyField', .F.)
DBSetProp('V_REPORTE_GUIA.ruccli', 'Field', 'Updatable', .T.)
DBSetProp('V_REPORTE_GUIA.ruccli', 'Field', 'UpdateName', PsNomCia+'!vtavguia.ruccli')
DBSetProp('V_REPORTE_GUIA.ruccli', 'Field', 'DataType', "C(10)")
* Props for the V_REPORTE_GUIA.codmat field.
DBSetProp('V_REPORTE_GUIA.codmat', 'Field', 'KeyField', .F.)
DBSetProp('V_REPORTE_GUIA.codmat', 'Field', 'Updatable', .T.)
DBSetProp('V_REPORTE_GUIA.codmat', 'Field', 'UpdateName', PsNomBDAno+'!almdtran.codmat')
DBSetProp('V_REPORTE_GUIA.codmat', 'Field', 'DataType', "C(13)")
* Props for the V_REPORTE_GUIA.candes field.
DBSetProp('V_REPORTE_GUIA.candes', 'Field', 'KeyField', .F.)
DBSetProp('V_REPORTE_GUIA.candes', 'Field', 'Updatable', .T.)
DBSetProp('V_REPORTE_GUIA.candes', 'Field', 'UpdateName', PsNomBDAno+'!almdtran.candes')
DBSetProp('V_REPORTE_GUIA.candes', 'Field', 'DataType', "N(14,4)")
ENDFUNC
 
FUNCTION MakeView_V_NOTAS_BALANCE
PARAMETERS PsNomCia,PsNomBDAno
***************** View setup for V_NOTAS_BALANCE ***************

CREATE SQL VIEW "V_NOTAS_BALANCE" ; 
   AS SELECT Cbdnbalc.nota, Cbdnbalc.codcta, Cbdmctas.nomcta, Cbdnbalc.signo, Cbdnbalc.forma, Cbdtbalc.nroitm, ;
   Cbdnbalc.rubro FROM  &PsNomCia.!cbdtbalc  INNER JOIN  &PsNomCia.!cbdnbalc  LEFT OUTER JOIN &PsNomBDAno.!CBDMCTAS  ON ;
     Cbdnbalc.codcta = Cbdmctas.codcta  ON  Cbdtbalc.rubro = Cbdnbalc.rubro AND  Cbdtbalc.nota = Cbdnbalc.nota ORDER BY Cbdnbalc.rubro, Cbdnbalc.nota

DBSetProp('V_NOTAS_BALANCE', 'View', 'UpdateType', 1)
DBSetProp('V_NOTAS_BALANCE', 'View', 'WhereType', 3)
DBSetProp('V_NOTAS_BALANCE', 'View', 'FetchMemo', .T.)
DBSetProp('V_NOTAS_BALANCE', 'View', 'SendUpdates', .T.)
DBSetProp('V_NOTAS_BALANCE', 'View', 'UseMemoSize', 255)
DBSetProp('V_NOTAS_BALANCE', 'View', 'FetchSize', 100)
DBSetProp('V_NOTAS_BALANCE', 'View', 'MaxRecords', -1)

DBSetProp('V_NOTAS_BALANCE', 'View', 'Tables', PsNomCia+'!cbdnbalc')
DBSetProp('V_NOTAS_BALANCE', 'View', 'Prepared', .F.)
DBSetProp('V_NOTAS_BALANCE', 'View', 'CompareMemo', .T.)
DBSetProp('V_NOTAS_BALANCE', 'View', 'FetchAsNeeded', .F.)
DBSetProp('V_NOTAS_BALANCE', 'View', 'Comment', "")
DBSetProp('V_NOTAS_BALANCE', 'View', 'BatchUpdateCount', 1)
DBSetProp('V_NOTAS_BALANCE', 'View', 'ShareConnection', .F.)
DBSetProp('V_NOTAS_BALANCE', 'View', 'AllowSimultaneousFetch', .F.)

*!* Field Level Properties for V_NOTAS_BALANCE
* Props for the V_NOTAS_BALANCE.nota field.
DBSetProp('V_NOTAS_BALANCE.nota', 'Field', 'KeyField', .T.)
DBSetProp('V_NOTAS_BALANCE.nota', 'Field', 'Updatable', .T.)
DBSetProp('V_NOTAS_BALANCE.nota', 'Field', 'UpdateName', PsNomCia+'!cbdnbalc.nota')
DBSetProp('V_NOTAS_BALANCE.nota', 'Field', 'DataType', "C(2)")
* Props for the V_NOTAS_BALANCE.codcta field.
DBSetProp('V_NOTAS_BALANCE.codcta', 'Field', 'KeyField', .T.)
DBSetProp('V_NOTAS_BALANCE.codcta', 'Field', 'Updatable', .T.)
DBSetProp('V_NOTAS_BALANCE.codcta', 'Field', 'UpdateName', PsNomCia+'!cbdnbalc.codcta')
DBSetProp('V_NOTAS_BALANCE.codcta', 'Field', 'DataType', "C(8)")
* Props for the V_NOTAS_BALANCE.nomcta field.
DBSetProp('V_NOTAS_BALANCE.nomcta', 'Field', 'KeyField', .F.)
DBSetProp('V_NOTAS_BALANCE.nomcta', 'Field', 'Updatable', .F.)
DBSetProp('V_NOTAS_BALANCE.nomcta', 'Field', 'UpdateName', PsNomBDAno+'!cbdmctas.nomcta')
DBSetProp('V_NOTAS_BALANCE.nomcta', 'Field', 'DataType', "C(40)")
* Props for the V_NOTAS_BALANCE.signo field.
DBSetProp('V_NOTAS_BALANCE.signo', 'Field', 'KeyField', .F.)
DBSetProp('V_NOTAS_BALANCE.signo', 'Field', 'Updatable', .T.)
DBSetProp('V_NOTAS_BALANCE.signo', 'Field', 'UpdateName', PsNomCia+'!cbdnbalc.signo')
DBSetProp('V_NOTAS_BALANCE.signo', 'Field', 'DataType', "C(1)")
* Props for the V_NOTAS_BALANCE.forma field.
DBSetProp('V_NOTAS_BALANCE.forma', 'Field', 'KeyField', .F.)
DBSetProp('V_NOTAS_BALANCE.forma', 'Field', 'Updatable', .T.)
DBSetProp('V_NOTAS_BALANCE.forma', 'Field', 'UpdateName', PsNomCia+'!cbdnbalc.forma')
DBSetProp('V_NOTAS_BALANCE.forma', 'Field', 'DataType', "C(1)")
* Props for the V_NOTAS_BALANCE.nroitm field.
DBSetProp('V_NOTAS_BALANCE.nroitm', 'Field', 'KeyField', .F.)
DBSetProp('V_NOTAS_BALANCE.nroitm', 'Field', 'Updatable', .F.)
DBSetProp('V_NOTAS_BALANCE.nroitm', 'Field', 'UpdateName', PsNomCia+'!cbdtbalc.nroitm')
DBSetProp('V_NOTAS_BALANCE.nroitm', 'Field', 'DataType', "N(3)")
* Props for the V_NOTAS_BALANCE.rubro field.
DBSetProp('V_NOTAS_BALANCE.rubro', 'Field', 'KeyField', .T.)
DBSetProp('V_NOTAS_BALANCE.rubro', 'Field', 'Updatable', .T.)
DBSetProp('V_NOTAS_BALANCE.rubro', 'Field', 'UpdateName', PsNomCia+'!cbdnbalc.rubro')
DBSetProp('V_NOTAS_BALANCE.rubro', 'Field', 'DataType', "C(3)")
ENDFUNC
 
FUNCTION MakeView_V_FORMULAS_DESC
PARAMETERS PsNomCia,PsNomBdAno
***************** View setup for V_FORMULAS_DESC ***************

CREATE SQL VIEW "V_FORMULAS_DESC" ; 
   AS SELECT Cpicfpro.codpro, Almcatge.codmat, Almcatge.undstk, RTRIM(Almcatge.desmat)+" "+LTRIM(Almcatge.codant) AS desmat, ; 
   Cpicfpro.peso, Cpicfpro.udpeso, Cpicfpro.canobj, Cpicfpro.modelo, Cpicfpro.cdmodelo, Cpicfpro.facnum, Cpicfpro.facden, ;
   Cpicfpro.facpobj, Cpicfpro.unirea, Cpicfpro.unirea2, Cpicfpro.precosteo, Almtdivf.codfam, Cpicfpro.porppr, Cpicfpro.pesoitems, ;
   Cpicfpro.aliasform, Cpicfpro.usrnew, Cpicfpro.fchnew, Cpicfpro.usrcmb, Cpicfpro.fchcmb, Cpicfpro.usrdel, Cpicfpro.fchdel, ;
   Cpicfpro.cto_mp_us, Cpicfpro.cto_wl_us, Cpicfpro.lab_pr_us, Cpicfpro.cost_pr_us, Cpicfpro.factor, Cpicfpro.ctome_sigv, ;
   Cpicfpro.ctomn_sigv, Cpicfpro.ctome_cigv, Cpicfpro.ctomn_cigv, Cpicfpro.util_mn, Cpicfpro.pvmn_cigv, Cpicfpro.pvme_cigv, ; 
   Cpicfpro.pvmn_sigv, Cpicfpro.pvme_sigv, Cpicfpro.num_part FROM  &PsNomCia.!cpicfpro  INNER JOIN &PsNomBDAno.!almcatge  ON ;
   Cpicfpro.codpro = Almcatge.codmat  INNER JOIN &PsNomCia.!almtdivf  ON  ( clfdiv+codfam ) = gaclfdiv(2)+PADR(codmat,galencod(2)) ; 
   ORDER BY Almcatge.desmat

DBSetProp('V_FORMULAS_DESC', 'View', 'UpdateType', 1)
DBSetProp('V_FORMULAS_DESC', 'View', 'WhereType', 3)
DBSetProp('V_FORMULAS_DESC', 'View', 'FetchMemo', .T.)
DBSetProp('V_FORMULAS_DESC', 'View', 'SendUpdates', .F.)
DBSetProp('V_FORMULAS_DESC', 'View', 'UseMemoSize', 255)
DBSetProp('V_FORMULAS_DESC', 'View', 'FetchSize', 100)
DBSetProp('V_FORMULAS_DESC', 'View', 'MaxRecords', -1)
DBSetProp('V_FORMULAS_DESC', 'View', 'Tables', PsNomCia+'!cpicfpro')
DBSetProp('V_FORMULAS_DESC', 'View', 'Prepared', .F.)
DBSetProp('V_FORMULAS_DESC', 'View', 'CompareMemo', .T.)
DBSetProp('V_FORMULAS_DESC', 'View', 'FetchAsNeeded', .F.)
DBSetProp('V_FORMULAS_DESC', 'View', 'Comment', "")
DBSetProp('V_FORMULAS_DESC', 'View', 'BatchUpdateCount', 1)
DBSetProp('V_FORMULAS_DESC', 'View', 'ShareConnection', .F.)
DBSetProp('V_FORMULAS_DESC', 'View', 'AllowSimultaneousFetch', .F.)

*!* Field Level Properties for V_FORMULAS_DESC
* Props for the V_FORMULAS_DESC.codpro field.
DBSetProp('V_FORMULAS_DESC.codpro', 'Field', 'KeyField', .F.)
DBSetProp('V_FORMULAS_DESC.codpro', 'Field', 'Updatable', .F.)
DBSetProp('V_FORMULAS_DESC.codpro', 'Field', 'UpdateName', PsNomCia+'!cpicfpro.codpro')
DBSetProp('V_FORMULAS_DESC.codpro', 'Field', 'DataType', "C(15)")
* Props for the V_FORMULAS_DESC.codmat field.
DBSetProp('V_FORMULAS_DESC.codmat', 'Field', 'KeyField', .F.)
DBSetProp('V_FORMULAS_DESC.codmat', 'Field', 'Updatable', .F.)
DBSetProp('V_FORMULAS_DESC.codmat', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.codmat')
DBSetProp('V_FORMULAS_DESC.codmat', 'Field', 'DataType', "C(15)")
* Props for the V_FORMULAS_DESC.undstk field.
DBSetProp('V_FORMULAS_DESC.undstk', 'Field', 'KeyField', .F.)
DBSetProp('V_FORMULAS_DESC.undstk', 'Field', 'Updatable', .F.)
DBSetProp('V_FORMULAS_DESC.undstk', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.undstk')
DBSetProp('V_FORMULAS_DESC.undstk', 'Field', 'DataType', "C(3)")
* Props for the V_FORMULAS_DESC.desmat field.
DBSetProp('V_FORMULAS_DESC.desmat', 'Field', 'KeyField', .F.)
DBSetProp('V_FORMULAS_DESC.desmat', 'Field', 'Updatable', .F.)
DBSetProp('V_FORMULAS_DESC.desmat', 'Field', 'UpdateName', 'desmat')
DBSetProp('V_FORMULAS_DESC.desmat', 'Field', 'DataType', "C(96)")
* Props for the V_FORMULAS_DESC.peso field.
DBSetProp('V_FORMULAS_DESC.peso', 'Field', 'KeyField', .F.)
DBSetProp('V_FORMULAS_DESC.peso', 'Field', 'Updatable', .F.)
DBSetProp('V_FORMULAS_DESC.peso', 'Field', 'UpdateName', PsNomCia+'!cpicfpro.peso')
DBSetProp('V_FORMULAS_DESC.peso', 'Field', 'DataType', "N(14,4)")
* Props for the V_FORMULAS_DESC.udpeso field.
DBSetProp('V_FORMULAS_DESC.udpeso', 'Field', 'KeyField', .F.)
DBSetProp('V_FORMULAS_DESC.udpeso', 'Field', 'Updatable', .F.)
DBSetProp('V_FORMULAS_DESC.udpeso', 'Field', 'UpdateName', PsNomCia+'!cpicfpro.udpeso')
DBSetProp('V_FORMULAS_DESC.udpeso', 'Field', 'DataType', "C(3)")
* Props for the V_FORMULAS_DESC.canobj field.
DBSetProp('V_FORMULAS_DESC.canobj', 'Field', 'KeyField', .F.)
DBSetProp('V_FORMULAS_DESC.canobj', 'Field', 'Updatable', .F.)
DBSetProp('V_FORMULAS_DESC.canobj', 'Field', 'UpdateName', PsNomCia+'!cpicfpro.canobj')
DBSetProp('V_FORMULAS_DESC.canobj', 'Field', 'DataType', "N(14,4)")
* Props for the V_FORMULAS_DESC.modelo field.
DBSetProp('V_FORMULAS_DESC.modelo', 'Field', 'KeyField', .F.)
DBSetProp('V_FORMULAS_DESC.modelo', 'Field', 'Updatable', .F.)
DBSetProp('V_FORMULAS_DESC.modelo', 'Field', 'UpdateName', PsNomCia+'!cpicfpro.modelo')
DBSetProp('V_FORMULAS_DESC.modelo', 'Field', 'DataType', "L")
* Props for the V_FORMULAS_DESC.cdmodelo field.
DBSetProp('V_FORMULAS_DESC.cdmodelo', 'Field', 'KeyField', .F.)
DBSetProp('V_FORMULAS_DESC.cdmodelo', 'Field', 'Updatable', .T.)
DBSetProp('V_FORMULAS_DESC.cdmodelo', 'Field', 'UpdateName', PsNomCia+'!cpicfpro.cdmodelo')
DBSetProp('V_FORMULAS_DESC.cdmodelo', 'Field', 'DataType', "C(50)")
* Props for the V_FORMULAS_DESC.facnum field.
DBSetProp('V_FORMULAS_DESC.facnum', 'Field', 'KeyField', .F.)
DBSetProp('V_FORMULAS_DESC.facnum', 'Field', 'Updatable', .F.)
DBSetProp('V_FORMULAS_DESC.facnum', 'Field', 'UpdateName', PsNomCia+'!cpicfpro.facnum')
DBSetProp('V_FORMULAS_DESC.facnum', 'Field', 'DataType', "N(10,4)")
* Props for the V_FORMULAS_DESC.facden field.
DBSetProp('V_FORMULAS_DESC.facden', 'Field', 'KeyField', .F.)
DBSetProp('V_FORMULAS_DESC.facden', 'Field', 'Updatable', .F.)
DBSetProp('V_FORMULAS_DESC.facden', 'Field', 'UpdateName', PsNomCia+'!cpicfpro.facden')
DBSetProp('V_FORMULAS_DESC.facden', 'Field', 'DataType', "N(10,4)")
* Props for the V_FORMULAS_DESC.facpobj field.
DBSetProp('V_FORMULAS_DESC.facpobj', 'Field', 'KeyField', .F.)
DBSetProp('V_FORMULAS_DESC.facpobj', 'Field', 'Updatable', .F.)
DBSetProp('V_FORMULAS_DESC.facpobj', 'Field', 'UpdateName', PsNomCia+'!cpicfpro.facpobj')
DBSetProp('V_FORMULAS_DESC.facpobj', 'Field', 'DataType', "F(10,4)")
* Props for the V_FORMULAS_DESC.unirea field.
DBSetProp('V_FORMULAS_DESC.unirea', 'Field', 'KeyField', .F.)
DBSetProp('V_FORMULAS_DESC.unirea', 'Field', 'Updatable', .F.)
DBSetProp('V_FORMULAS_DESC.unirea', 'Field', 'UpdateName', PsNomCia+'!cpicfpro.unirea')
DBSetProp('V_FORMULAS_DESC.unirea', 'Field', 'DataType', "F(14,4)")
* Props for the V_FORMULAS_DESC.unirea2 field.
DBSetProp('V_FORMULAS_DESC.unirea2', 'Field', 'KeyField', .F.)
DBSetProp('V_FORMULAS_DESC.unirea2', 'Field', 'Updatable', .T.)
DBSetProp('V_FORMULAS_DESC.unirea2', 'Field', 'UpdateName', PsNomCia+'!cpicfpro.unirea2')
DBSetProp('V_FORMULAS_DESC.unirea2', 'Field', 'DataType', "F(14,4)")
* Props for the V_FORMULAS_DESC.precosteo field.
DBSetProp('V_FORMULAS_DESC.precosteo', 'Field', 'KeyField', .F.)
DBSetProp('V_FORMULAS_DESC.precosteo', 'Field', 'Updatable', .F.)
DBSetProp('V_FORMULAS_DESC.precosteo', 'Field', 'UpdateName', PsNomCia+'!cpicfpro.precosteo')
DBSetProp('V_FORMULAS_DESC.precosteo', 'Field', 'DataType', "L")
* Props for the V_FORMULAS_DESC.codfam field.
DBSetProp('V_FORMULAS_DESC.codfam', 'Field', 'KeyField', .F.)
DBSetProp('V_FORMULAS_DESC.codfam', 'Field', 'Updatable', .F.)
DBSetProp('V_FORMULAS_DESC.codfam', 'Field', 'UpdateName', PsNomCia+'!almtdivf.codfam')
DBSetProp('V_FORMULAS_DESC.codfam', 'Field', 'DataType', "C(6)")
* Props for the V_FORMULAS_DESC.porppr field.
DBSetProp('V_FORMULAS_DESC.porppr', 'Field', 'KeyField', .F.)
DBSetProp('V_FORMULAS_DESC.porppr', 'Field', 'Updatable', .F.)
DBSetProp('V_FORMULAS_DESC.porppr', 'Field', 'UpdateName', PsNomCia+'!cpicfpro.porppr')
DBSetProp('V_FORMULAS_DESC.porppr', 'Field', 'DataType', "F(6,2)")
* Props for the V_FORMULAS_DESC.pesoitems field.
DBSetProp('V_FORMULAS_DESC.pesoitems', 'Field', 'KeyField', .F.)
DBSetProp('V_FORMULAS_DESC.pesoitems', 'Field', 'Updatable', .F.)
DBSetProp('V_FORMULAS_DESC.pesoitems', 'Field', 'UpdateName', PsNomCia+'!cpicfpro.pesoitems')
DBSetProp('V_FORMULAS_DESC.pesoitems', 'Field', 'DataType', "F(14,4)")
* Props for the V_FORMULAS_DESC.aliasform field.
DBSetProp('V_FORMULAS_DESC.aliasform', 'Field', 'KeyField', .F.)
DBSetProp('V_FORMULAS_DESC.aliasform', 'Field', 'Updatable', .F.)
DBSetProp('V_FORMULAS_DESC.aliasform', 'Field', 'UpdateName', PsNomCia+'!cpicfpro.aliasform')
DBSetProp('V_FORMULAS_DESC.aliasform', 'Field', 'DataType', "C(40)")
* Props for the V_FORMULAS_DESC.usrnew field.
DBSetProp('V_FORMULAS_DESC.usrnew', 'Field', 'KeyField', .F.)
DBSetProp('V_FORMULAS_DESC.usrnew', 'Field', 'Updatable', .F.)
DBSetProp('V_FORMULAS_DESC.usrnew', 'Field', 'UpdateName', PsNomCia+'!cpicfpro.usrnew')
DBSetProp('V_FORMULAS_DESC.usrnew', 'Field', 'DataType', "C(10)")
* Props for the V_FORMULAS_DESC.fchnew field.
DBSetProp('V_FORMULAS_DESC.fchnew', 'Field', 'KeyField', .F.)
DBSetProp('V_FORMULAS_DESC.fchnew', 'Field', 'Updatable', .F.)
DBSetProp('V_FORMULAS_DESC.fchnew', 'Field', 'UpdateName', PsNomCia+'!cpicfpro.fchnew')
DBSetProp('V_FORMULAS_DESC.fchnew', 'Field', 'DataType', "T")
* Props for the V_FORMULAS_DESC.usrcmb field.
DBSetProp('V_FORMULAS_DESC.usrcmb', 'Field', 'KeyField', .F.)
DBSetProp('V_FORMULAS_DESC.usrcmb', 'Field', 'Updatable', .F.)
DBSetProp('V_FORMULAS_DESC.usrcmb', 'Field', 'UpdateName', PsNomCia+'!cpicfpro.usrcmb')
DBSetProp('V_FORMULAS_DESC.usrcmb', 'Field', 'DataType', "C(10)")
* Props for the V_FORMULAS_DESC.fchcmb field.
DBSetProp('V_FORMULAS_DESC.fchcmb', 'Field', 'KeyField', .F.)
DBSetProp('V_FORMULAS_DESC.fchcmb', 'Field', 'Updatable', .F.)
DBSetProp('V_FORMULAS_DESC.fchcmb', 'Field', 'UpdateName', PsNomCia+'!cpicfpro.fchcmb')
DBSetProp('V_FORMULAS_DESC.fchcmb', 'Field', 'DataType', "T")
* Props for the V_FORMULAS_DESC.usrdel field.
DBSetProp('V_FORMULAS_DESC.usrdel', 'Field', 'KeyField', .F.)
DBSetProp('V_FORMULAS_DESC.usrdel', 'Field', 'Updatable', .F.)
DBSetProp('V_FORMULAS_DESC.usrdel', 'Field', 'UpdateName', PsNomCia+'!cpicfpro.usrdel')
DBSetProp('V_FORMULAS_DESC.usrdel', 'Field', 'DataType', "C(10)")
* Props for the V_FORMULAS_DESC.fchdel field.
DBSetProp('V_FORMULAS_DESC.fchdel', 'Field', 'KeyField', .F.)
DBSetProp('V_FORMULAS_DESC.fchdel', 'Field', 'Updatable', .F.)
DBSetProp('V_FORMULAS_DESC.fchdel', 'Field', 'UpdateName', PsNomCia+'!cpicfpro.fchdel')
DBSetProp('V_FORMULAS_DESC.fchdel', 'Field', 'DataType', "T")
* Props for the V_FORMULAS_DESC.cto_mp_us field.
DBSetProp('V_FORMULAS_DESC.cto_mp_us', 'Field', 'KeyField', .F.)
DBSetProp('V_FORMULAS_DESC.cto_mp_us', 'Field', 'Updatable', .T.)
DBSetProp('V_FORMULAS_DESC.cto_mp_us', 'Field', 'UpdateName', PsNomCia+'!cpicfpro.cto_mp_us')
DBSetProp('V_FORMULAS_DESC.cto_mp_us', 'Field', 'DataType', "N(10,4)")
* Props for the V_FORMULAS_DESC.cto_wl_us field.
DBSetProp('V_FORMULAS_DESC.cto_wl_us', 'Field', 'KeyField', .F.)
DBSetProp('V_FORMULAS_DESC.cto_wl_us', 'Field', 'Updatable', .T.)
DBSetProp('V_FORMULAS_DESC.cto_wl_us', 'Field', 'UpdateName', PsNomCia+'!cpicfpro.cto_wl_us')
DBSetProp('V_FORMULAS_DESC.cto_wl_us', 'Field', 'DataType', "N(10,4)")
* Props for the V_FORMULAS_DESC.lab_pr_us field.
DBSetProp('V_FORMULAS_DESC.lab_pr_us', 'Field', 'KeyField', .F.)
DBSetProp('V_FORMULAS_DESC.lab_pr_us', 'Field', 'Updatable', .T.)
DBSetProp('V_FORMULAS_DESC.lab_pr_us', 'Field', 'UpdateName', PsNomCia+'!cpicfpro.lab_pr_us')
DBSetProp('V_FORMULAS_DESC.lab_pr_us', 'Field', 'DataType', "N(10,4)")
* Props for the V_FORMULAS_DESC.cost_pr_us field.
DBSetProp('V_FORMULAS_DESC.cost_pr_us', 'Field', 'KeyField', .F.)
DBSetProp('V_FORMULAS_DESC.cost_pr_us', 'Field', 'Updatable', .T.)
DBSetProp('V_FORMULAS_DESC.cost_pr_us', 'Field', 'UpdateName', PsNomCia+'!cpicfpro.cost_pr_us')
DBSetProp('V_FORMULAS_DESC.cost_pr_us', 'Field', 'DataType', "N(10,4)")
* Props for the V_FORMULAS_DESC.factor field.
DBSetProp('V_FORMULAS_DESC.factor', 'Field', 'KeyField', .F.)
DBSetProp('V_FORMULAS_DESC.factor', 'Field', 'Updatable', .T.)
DBSetProp('V_FORMULAS_DESC.factor', 'Field', 'UpdateName', PsNomCia+'!cpicfpro.factor')
DBSetProp('V_FORMULAS_DESC.factor', 'Field', 'DataType', "N(10,4)")
* Props for the V_FORMULAS_DESC.ctome_sigv field.
DBSetProp('V_FORMULAS_DESC.ctome_sigv', 'Field', 'KeyField', .F.)
DBSetProp('V_FORMULAS_DESC.ctome_sigv', 'Field', 'Updatable', .T.)
DBSetProp('V_FORMULAS_DESC.ctome_sigv', 'Field', 'UpdateName', PsNomCia+'!cpicfpro.ctome_sigv')
DBSetProp('V_FORMULAS_DESC.ctome_sigv', 'Field', 'DataType', "N(10,4)")
* Props for the V_FORMULAS_DESC.ctomn_sigv field.
DBSetProp('V_FORMULAS_DESC.ctomn_sigv', 'Field', 'KeyField', .F.)
DBSetProp('V_FORMULAS_DESC.ctomn_sigv', 'Field', 'Updatable', .T.)
DBSetProp('V_FORMULAS_DESC.ctomn_sigv', 'Field', 'UpdateName', PsNomCia+'!cpicfpro.ctomn_sigv')
DBSetProp('V_FORMULAS_DESC.ctomn_sigv', 'Field', 'DataType', "N(10,4)")
* Props for the V_FORMULAS_DESC.ctome_cigv field.
DBSetProp('V_FORMULAS_DESC.ctome_cigv', 'Field', 'KeyField', .F.)
DBSetProp('V_FORMULAS_DESC.ctome_cigv', 'Field', 'Updatable', .T.)
DBSetProp('V_FORMULAS_DESC.ctome_cigv', 'Field', 'UpdateName', PsNomCia+'!cpicfpro.ctome_cigv')
DBSetProp('V_FORMULAS_DESC.ctome_cigv', 'Field', 'DataType', "N(10,4)")
* Props for the V_FORMULAS_DESC.ctomn_cigv field.
DBSetProp('V_FORMULAS_DESC.ctomn_cigv', 'Field', 'KeyField', .F.)
DBSetProp('V_FORMULAS_DESC.ctomn_cigv', 'Field', 'Updatable', .T.)
DBSetProp('V_FORMULAS_DESC.ctomn_cigv', 'Field', 'UpdateName', PsNomCia+'!cpicfpro.ctomn_cigv')
DBSetProp('V_FORMULAS_DESC.ctomn_cigv', 'Field', 'DataType', "N(10,4)")
* Props for the V_FORMULAS_DESC.util_mn field.
DBSetProp('V_FORMULAS_DESC.util_mn', 'Field', 'KeyField', .F.)
DBSetProp('V_FORMULAS_DESC.util_mn', 'Field', 'Updatable', .T.)
DBSetProp('V_FORMULAS_DESC.util_mn', 'Field', 'UpdateName', PsNomCia+'!cpicfpro.util_mn')
DBSetProp('V_FORMULAS_DESC.util_mn', 'Field', 'DataType', "N(10,4)")
* Props for the V_FORMULAS_DESC.pvmn_cigv field.
DBSetProp('V_FORMULAS_DESC.pvmn_cigv', 'Field', 'KeyField', .F.)
DBSetProp('V_FORMULAS_DESC.pvmn_cigv', 'Field', 'Updatable', .T.)
DBSetProp('V_FORMULAS_DESC.pvmn_cigv', 'Field', 'UpdateName', PsNomCia+'!cpicfpro.pvmn_cigv')
DBSetProp('V_FORMULAS_DESC.pvmn_cigv', 'Field', 'DataType', "N(10,4)")
* Props for the V_FORMULAS_DESC.pvme_cigv field.
DBSetProp('V_FORMULAS_DESC.pvme_cigv', 'Field', 'KeyField', .F.)
DBSetProp('V_FORMULAS_DESC.pvme_cigv', 'Field', 'Updatable', .T.)
DBSetProp('V_FORMULAS_DESC.pvme_cigv', 'Field', 'UpdateName', PsNomCia+'!cpicfpro.pvme_cigv')
DBSetProp('V_FORMULAS_DESC.pvme_cigv', 'Field', 'DataType', "N(10,4)")
* Props for the V_FORMULAS_DESC.pvmn_sigv field.
DBSetProp('V_FORMULAS_DESC.pvmn_sigv', 'Field', 'KeyField', .F.)
DBSetProp('V_FORMULAS_DESC.pvmn_sigv', 'Field', 'Updatable', .T.)
DBSetProp('V_FORMULAS_DESC.pvmn_sigv', 'Field', 'UpdateName', PsNomCia+'!cpicfpro.pvmn_sigv')
DBSetProp('V_FORMULAS_DESC.pvmn_sigv', 'Field', 'DataType', "N(10,4)")
* Props for the V_FORMULAS_DESC.pvme_sigv field.
DBSetProp('V_FORMULAS_DESC.pvme_sigv', 'Field', 'KeyField', .F.)
DBSetProp('V_FORMULAS_DESC.pvme_sigv', 'Field', 'Updatable', .T.)
DBSetProp('V_FORMULAS_DESC.pvme_sigv', 'Field', 'UpdateName', PsNomCia+'!cpicfpro.pvme_sigv')
DBSetProp('V_FORMULAS_DESC.pvme_sigv', 'Field', 'DataType', "N(10,4)")
* Props for the V_FORMULAS_DESC.num_part field.
DBSetProp('V_FORMULAS_DESC.num_part', 'Field', 'KeyField', .F.)
DBSetProp('V_FORMULAS_DESC.num_part', 'Field', 'Updatable', .T.)
DBSetProp('V_FORMULAS_DESC.num_part', 'Field', 'UpdateName', PsNomCia+'!cpicfpro.num_part')
DBSetProp('V_FORMULAS_DESC.num_part', 'Field', 'DataType', "C(10)")
ENDFUNC
 
FUNCTION MakeView_V_ALMCATGE
PARAMETERS PsNomCia,PsNomBdAno 
***************** View setup for V_ALMCATGE ***************

CREATE SQL VIEW "V_ALMCATGE" ; 
   AS SELECT Almcatge.codmat, Almcatge.codequ, Almcatge.codant, Almcatge.codref, ; 
   RTRIM(Almcatge.desmat)+" "+LTRIM(Almcatge.codant) AS desmat, Almcatge.desmat2, Almcatge.codagr, Almcatge.marca, ; 
   Almcatge.undstk, Almcatge.undcmp, Almcatge.facequ, Almcatge.pmaxmn, Almcatge.pmaxus, Almcatge.pctomn, Almcatge.pctous, ;
   Almcatge.pultmn, Almcatge.pultus, Almcatge.codpr1, Almcatge.codpr2, Almcatge.fchalz, Almcatge.ultcmp, Almcatge.ultsal, ;
   Almcatge.stkact, Almcatge.stkini, Almcatge.pinimn, Almcatge.pinius, Almcatge.stkrep, Almcatge.stkmax, Almcatge.volped, ;
   Almcatge.tmprep, Almcatge.stkseg, Almcatge.peso, Almcatge.tpoemb, Almcatge.tl_pto, Almcatge.tipmat, Almcatge.eqmat1, ; 
   Almcatge.eqmat2, Almcatge.eqmat3, Almcatge.eqmat4, Almcatge.eqmat5, Almcatge.eqmat6, Almcatge.eqmat7, Almcatge.eqmat8, ;
   Almcatge.eqmat9, Almcatge.eqmat10, Almcatge.stkmin, Almcatge.vinimn, Almcatge.vinius, Almcatge.codsec, Almcatge.origen, ; 
   Almcatge.puinmn, Almcatge.puinus, Almcatge.vctomn, Almcatge.vctous, Almcatge.densidad, Almcatge.undnum, Almcatge.undden, ;
   Almcatge.noprom, Almcatge.inactivo, Almcatge.codcta, Almcatge.ctac2x, Almcatge.ctac33, Almcatge.ctac70, Almcatge.ctac71, ;
   Almcatge.ctac60, Almcatge.ctac61, Almcatge.ctac61c, Almcatge.ctac16, Almcatge.ctac69, Almcatge.undequ, Almcatge.desequ, ; 
   Almcatge.facvta, Almcatge.stk01, Almcatge.stk02, Almcatge.stk03, Almcatge.stk04, Almcatge.stk05, Almcatge.stk06, Almcatge.stk07, ;
   Almcatge.stk08, Almcatge.stk09, Almcatge.stk10, Almcatge.stk11, Almcatge.stk12, Almcatge.vmn01, Almcatge.vmn02, Almcatge.vmn03, ;
   Almcatge.vmn04, Almcatge.vmn05, Almcatge.vmn06, Almcatge.vmn07, Almcatge.vmn08, Almcatge.vmn09, Almcatge.vmn10, Almcatge.vmn11, ; 
   Almcatge.vmn12, Almcatge.vus01, Almcatge.vus02, Almcatge.vus03, Almcatge.vus04, Almcatge.vus05, Almcatge.vus06, Almcatge.vus07, ;
   Almcatge.vus08, Almcatge.vus09, Almcatge.vus10, Almcatge.vus11, Almcatge.vus12, Almcatge.ps01, Almcatge.ps02, Almcatge.ps03, ; 
   Almcatge.ps04, Almcatge.ps05, Almcatge.ps06, Almcatge.ps07, Almcatge.ps08, Almcatge.ps09, Almcatge.ps10, Almcatge.ps11, ; 
   Almcatge.ps12, Almcatge.pd01, Almcatge.pd02, Almcatge.pd03, Almcatge.pd04, Almcatge.pd05, Almcatge.pd06, Almcatge.pd07, ; 
   Almcatge.pd08, Almcatge.pd09, Almcatge.pd10, Almcatge.pd11, Almcatge.pd12, Almcatge.codnew, Almcatge.lugent, Almcatge.coduser, ;
   Almcatge.fchhora, Almcatge.preve1, Almcatge.preve2, Almcatge.preve3, Almcatge.prevn1, Almcatge.prevn2, Almcatge.prevn3  ; 
   FROM  &PsNomBdAno.!almcatge

DBSetProp('V_ALMCATGE', 'View', 'UpdateType', 1)
DBSetProp('V_ALMCATGE', 'View', 'WhereType', 3)
DBSetProp('V_ALMCATGE', 'View', 'FetchMemo', .T.)
DBSetProp('V_ALMCATGE', 'View', 'SendUpdates', .F.)
DBSetProp('V_ALMCATGE', 'View', 'UseMemoSize', 255)
DBSetProp('V_ALMCATGE', 'View', 'FetchSize', 100)
DBSetProp('V_ALMCATGE', 'View', 'MaxRecords', -1)
DBSetProp('V_ALMCATGE', 'View', 'Tables', PsNomBDAno+'!almcatge')
DBSetProp('V_ALMCATGE', 'View', 'Prepared', .F.)
DBSetProp('V_ALMCATGE', 'View', 'CompareMemo', .T.)
DBSetProp('V_ALMCATGE', 'View', 'FetchAsNeeded', .F.)
DBSetProp('V_ALMCATGE', 'View', 'Comment', "")
DBSetProp('V_ALMCATGE', 'View', 'BatchUpdateCount', 1)
DBSetProp('V_ALMCATGE', 'View', 'ShareConnection', .F.)
DBSetProp('V_ALMCATGE', 'View', 'AllowSimultaneousFetch', .F.)

*!* Field Level Properties for V_ALMCATGE
* Props for the V_ALMCATGE.codmat field.
DBSetProp('V_ALMCATGE.codmat', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.codmat', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.codmat', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.codmat')
DBSetProp('V_ALMCATGE.codmat', 'Field', 'DataType', "C(13)")
* Props for the V_ALMCATGE.codequ field.
DBSetProp('V_ALMCATGE.codequ', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.codequ', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.codequ', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.codequ')
DBSetProp('V_ALMCATGE.codequ', 'Field', 'DataType', "C(8)")
* Props for the V_ALMCATGE.codant field.
DBSetProp('V_ALMCATGE.codant', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.codant', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.codant', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.codant')
DBSetProp('V_ALMCATGE.codant', 'Field', 'DataType', "C(15)")
* Props for the V_ALMCATGE.codref field.
DBSetProp('V_ALMCATGE.codref', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.codref', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.codref', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.codref')
DBSetProp('V_ALMCATGE.codref', 'Field', 'DataType', "C(10)")
* Props for the V_ALMCATGE.desmat field.
DBSetProp('V_ALMCATGE.desmat', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.desmat', 'Field', 'Updatable', .F.)
DBSetProp('V_ALMCATGE.desmat', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.desmat')
DBSetProp('V_ALMCATGE.desmat', 'Field', 'DataType', "C(56)")
* Props for the V_ALMCATGE.desmat2 field.
DBSetProp('V_ALMCATGE.desmat2', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.desmat2', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.desmat2', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.desmat2')
DBSetProp('V_ALMCATGE.desmat2', 'Field', 'DataType', "C(20)")
* Props for the V_ALMCATGE.codagr field.
DBSetProp('V_ALMCATGE.codagr', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.codagr', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.codagr', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.codagr')
DBSetProp('V_ALMCATGE.codagr', 'Field', 'DataType', "C(8)")
* Props for the V_ALMCATGE.marca field.
DBSetProp('V_ALMCATGE.marca', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.marca', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.marca', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.marca')
DBSetProp('V_ALMCATGE.marca', 'Field', 'DataType', "C(25)")
* Props for the V_ALMCATGE.undstk field.
DBSetProp('V_ALMCATGE.undstk', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.undstk', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.undstk', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.undstk')
DBSetProp('V_ALMCATGE.undstk', 'Field', 'DataType', "C(3)")
* Props for the V_ALMCATGE.undcmp field.
DBSetProp('V_ALMCATGE.undcmp', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.undcmp', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.undcmp', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.undcmp')
DBSetProp('V_ALMCATGE.undcmp', 'Field', 'DataType', "C(3)")
* Props for the V_ALMCATGE.facequ field.
DBSetProp('V_ALMCATGE.facequ', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.facequ', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.facequ', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.facequ')
DBSetProp('V_ALMCATGE.facequ', 'Field', 'DataType', "N(10,4)")
* Props for the V_ALMCATGE.pmaxmn field.
DBSetProp('V_ALMCATGE.pmaxmn', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.pmaxmn', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.pmaxmn', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.pmaxmn')
DBSetProp('V_ALMCATGE.pmaxmn', 'Field', 'DataType', "N(18,6)")
* Props for the V_ALMCATGE.pmaxus field.
DBSetProp('V_ALMCATGE.pmaxus', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.pmaxus', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.pmaxus', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.pmaxus')
DBSetProp('V_ALMCATGE.pmaxus', 'Field', 'DataType', "N(18,6)")
* Props for the V_ALMCATGE.pctomn field.
DBSetProp('V_ALMCATGE.pctomn', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.pctomn', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.pctomn', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.pctomn')
DBSetProp('V_ALMCATGE.pctomn', 'Field', 'DataType', "N(18,6)")
* Props for the V_ALMCATGE.pctous field.
DBSetProp('V_ALMCATGE.pctous', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.pctous', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.pctous', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.pctous')
DBSetProp('V_ALMCATGE.pctous', 'Field', 'DataType', "N(18,6)")
* Props for the V_ALMCATGE.pultmn field.
DBSetProp('V_ALMCATGE.pultmn', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.pultmn', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.pultmn', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.pultmn')
DBSetProp('V_ALMCATGE.pultmn', 'Field', 'DataType', "N(18,6)")
* Props for the V_ALMCATGE.pultus field.
DBSetProp('V_ALMCATGE.pultus', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.pultus', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.pultus', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.pultus')
DBSetProp('V_ALMCATGE.pultus', 'Field', 'DataType', "N(18,6)")
* Props for the V_ALMCATGE.codpr1 field.
DBSetProp('V_ALMCATGE.codpr1', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.codpr1', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.codpr1', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.codpr1')
DBSetProp('V_ALMCATGE.codpr1', 'Field', 'DataType', "C(6)")
* Props for the V_ALMCATGE.codpr2 field.
DBSetProp('V_ALMCATGE.codpr2', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.codpr2', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.codpr2', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.codpr2')
DBSetProp('V_ALMCATGE.codpr2', 'Field', 'DataType', "C(6)")
* Props for the V_ALMCATGE.fchalz field.
DBSetProp('V_ALMCATGE.fchalz', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.fchalz', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.fchalz', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.fchalz')
DBSetProp('V_ALMCATGE.fchalz', 'Field', 'DataType', "D")
* Props for the V_ALMCATGE.ultcmp field.
DBSetProp('V_ALMCATGE.ultcmp', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.ultcmp', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.ultcmp', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.ultcmp')
DBSetProp('V_ALMCATGE.ultcmp', 'Field', 'DataType', "D")
* Props for the V_ALMCATGE.ultsal field.
DBSetProp('V_ALMCATGE.ultsal', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.ultsal', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.ultsal', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.ultsal')
DBSetProp('V_ALMCATGE.ultsal', 'Field', 'DataType', "D")
* Props for the V_ALMCATGE.stkact field.
DBSetProp('V_ALMCATGE.stkact', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.stkact', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.stkact', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.stkact')
DBSetProp('V_ALMCATGE.stkact', 'Field', 'DataType', "N(14,4)")
* Props for the V_ALMCATGE.stkini field.
DBSetProp('V_ALMCATGE.stkini', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.stkini', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.stkini', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.stkini')
DBSetProp('V_ALMCATGE.stkini', 'Field', 'DataType', "N(14,4)")
* Props for the V_ALMCATGE.pinimn field.
DBSetProp('V_ALMCATGE.pinimn', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.pinimn', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.pinimn', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.pinimn')
DBSetProp('V_ALMCATGE.pinimn', 'Field', 'DataType', "N(18,6)")
* Props for the V_ALMCATGE.pinius field.
DBSetProp('V_ALMCATGE.pinius', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.pinius', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.pinius', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.pinius')
DBSetProp('V_ALMCATGE.pinius', 'Field', 'DataType', "N(18,6)")
* Props for the V_ALMCATGE.stkrep field.
DBSetProp('V_ALMCATGE.stkrep', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.stkrep', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.stkrep', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.stkrep')
DBSetProp('V_ALMCATGE.stkrep', 'Field', 'DataType', "N(14,4)")
* Props for the V_ALMCATGE.stkmax field.
DBSetProp('V_ALMCATGE.stkmax', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.stkmax', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.stkmax', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.stkmax')
DBSetProp('V_ALMCATGE.stkmax', 'Field', 'DataType', "N(14,4)")
* Props for the V_ALMCATGE.volped field.
DBSetProp('V_ALMCATGE.volped', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.volped', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.volped', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.volped')
DBSetProp('V_ALMCATGE.volped', 'Field', 'DataType', "N(14,4)")
* Props for the V_ALMCATGE.tmprep field.
DBSetProp('V_ALMCATGE.tmprep', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.tmprep', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.tmprep', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.tmprep')
DBSetProp('V_ALMCATGE.tmprep', 'Field', 'DataType', "N(9)")
* Props for the V_ALMCATGE.stkseg field.
DBSetProp('V_ALMCATGE.stkseg', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.stkseg', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.stkseg', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.stkseg')
DBSetProp('V_ALMCATGE.stkseg', 'Field', 'DataType', "N(9)")
* Props for the V_ALMCATGE.peso field.
DBSetProp('V_ALMCATGE.peso', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.peso', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.peso', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.peso')
DBSetProp('V_ALMCATGE.peso', 'Field', 'DataType', "N(14,4)")
* Props for the V_ALMCATGE.tpoemb field.
DBSetProp('V_ALMCATGE.tpoemb', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.tpoemb', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.tpoemb', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.tpoemb')
DBSetProp('V_ALMCATGE.tpoemb', 'Field', 'DataType', "N(4)")
* Props for the V_ALMCATGE.tl_pto field.
DBSetProp('V_ALMCATGE.tl_pto', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.tl_pto', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.tl_pto', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.tl_pto')
DBSetProp('V_ALMCATGE.tl_pto', 'Field', 'DataType', "N(4)")
* Props for the V_ALMCATGE.tipmat field.
DBSetProp('V_ALMCATGE.tipmat', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.tipmat', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.tipmat', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.tipmat')
DBSetProp('V_ALMCATGE.tipmat', 'Field', 'DataType', "C(2)")
* Props for the V_ALMCATGE.eqmat1 field.
DBSetProp('V_ALMCATGE.eqmat1', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.eqmat1', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.eqmat1', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.eqmat1')
DBSetProp('V_ALMCATGE.eqmat1', 'Field', 'DataType', "C(8)")
* Props for the V_ALMCATGE.eqmat2 field.
DBSetProp('V_ALMCATGE.eqmat2', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.eqmat2', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.eqmat2', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.eqmat2')
DBSetProp('V_ALMCATGE.eqmat2', 'Field', 'DataType', "C(8)")
* Props for the V_ALMCATGE.eqmat3 field.
DBSetProp('V_ALMCATGE.eqmat3', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.eqmat3', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.eqmat3', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.eqmat3')
DBSetProp('V_ALMCATGE.eqmat3', 'Field', 'DataType', "C(8)")
* Props for the V_ALMCATGE.eqmat4 field.
DBSetProp('V_ALMCATGE.eqmat4', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.eqmat4', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.eqmat4', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.eqmat4')
DBSetProp('V_ALMCATGE.eqmat4', 'Field', 'DataType', "C(8)")
* Props for the V_ALMCATGE.eqmat5 field.
DBSetProp('V_ALMCATGE.eqmat5', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.eqmat5', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.eqmat5', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.eqmat5')
DBSetProp('V_ALMCATGE.eqmat5', 'Field', 'DataType', "C(8)")
* Props for the V_ALMCATGE.eqmat6 field.
DBSetProp('V_ALMCATGE.eqmat6', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.eqmat6', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.eqmat6', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.eqmat6')
DBSetProp('V_ALMCATGE.eqmat6', 'Field', 'DataType', "C(8)")
* Props for the V_ALMCATGE.eqmat7 field.
DBSetProp('V_ALMCATGE.eqmat7', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.eqmat7', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.eqmat7', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.eqmat7')
DBSetProp('V_ALMCATGE.eqmat7', 'Field', 'DataType', "C(8)")
* Props for the V_ALMCATGE.eqmat8 field.
DBSetProp('V_ALMCATGE.eqmat8', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.eqmat8', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.eqmat8', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.eqmat8')
DBSetProp('V_ALMCATGE.eqmat8', 'Field', 'DataType', "C(8)")
* Props for the V_ALMCATGE.eqmat9 field.
DBSetProp('V_ALMCATGE.eqmat9', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.eqmat9', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.eqmat9', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.eqmat9')
DBSetProp('V_ALMCATGE.eqmat9', 'Field', 'DataType', "C(8)")
* Props for the V_ALMCATGE.eqmat10 field.
DBSetProp('V_ALMCATGE.eqmat10', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.eqmat10', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.eqmat10', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.eqmat10')
DBSetProp('V_ALMCATGE.eqmat10', 'Field', 'DataType', "C(8)")
* Props for the V_ALMCATGE.stkmin field.
DBSetProp('V_ALMCATGE.stkmin', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.stkmin', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.stkmin', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.stkmin')
DBSetProp('V_ALMCATGE.stkmin', 'Field', 'DataType', "N(14,4)")
* Props for the V_ALMCATGE.vinimn field.
DBSetProp('V_ALMCATGE.vinimn', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.vinimn', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.vinimn', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.vinimn')
DBSetProp('V_ALMCATGE.vinimn', 'Field', 'DataType', "N(18,6)")
* Props for the V_ALMCATGE.vinius field.
DBSetProp('V_ALMCATGE.vinius', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.vinius', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.vinius', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.vinius')
DBSetProp('V_ALMCATGE.vinius', 'Field', 'DataType', "N(18,6)")
* Props for the V_ALMCATGE.codsec field.
DBSetProp('V_ALMCATGE.codsec', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.codsec', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.codsec', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.codsec')
DBSetProp('V_ALMCATGE.codsec', 'Field', 'DataType', "C(2)")
* Props for the V_ALMCATGE.origen field.
DBSetProp('V_ALMCATGE.origen', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.origen', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.origen', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.origen')
DBSetProp('V_ALMCATGE.origen', 'Field', 'DataType', "N(1)")
* Props for the V_ALMCATGE.puinmn field.
DBSetProp('V_ALMCATGE.puinmn', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.puinmn', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.puinmn', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.puinmn')
DBSetProp('V_ALMCATGE.puinmn', 'Field', 'DataType', "N(12,4)")
* Props for the V_ALMCATGE.puinus field.
DBSetProp('V_ALMCATGE.puinus', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.puinus', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.puinus', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.puinus')
DBSetProp('V_ALMCATGE.puinus', 'Field', 'DataType', "N(12,4)")
* Props for the V_ALMCATGE.vctomn field.
DBSetProp('V_ALMCATGE.vctomn', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.vctomn', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.vctomn', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.vctomn')
DBSetProp('V_ALMCATGE.vctomn', 'Field', 'DataType', "N(18,4)")
* Props for the V_ALMCATGE.vctous field.
DBSetProp('V_ALMCATGE.vctous', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.vctous', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.vctous', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.vctous')
DBSetProp('V_ALMCATGE.vctous', 'Field', 'DataType', "N(18,4)")
* Props for the V_ALMCATGE.densidad field.
DBSetProp('V_ALMCATGE.densidad', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.densidad', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.densidad', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.densidad')
DBSetProp('V_ALMCATGE.densidad', 'Field', 'DataType', "N(10,4)")
* Props for the V_ALMCATGE.undnum field.
DBSetProp('V_ALMCATGE.undnum', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.undnum', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.undnum', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.undnum')
DBSetProp('V_ALMCATGE.undnum', 'Field', 'DataType', "C(3)")
* Props for the V_ALMCATGE.undden field.
DBSetProp('V_ALMCATGE.undden', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.undden', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.undden', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.undden')
DBSetProp('V_ALMCATGE.undden', 'Field', 'DataType', "C(3)")
* Props for the V_ALMCATGE.noprom field.
DBSetProp('V_ALMCATGE.noprom', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.noprom', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.noprom', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.noprom')
DBSetProp('V_ALMCATGE.noprom', 'Field', 'DataType', "L")
* Props for the V_ALMCATGE.inactivo field.
DBSetProp('V_ALMCATGE.inactivo', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.inactivo', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.inactivo', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.inactivo')
DBSetProp('V_ALMCATGE.inactivo', 'Field', 'DataType', "L")
* Props for the V_ALMCATGE.codcta field.
DBSetProp('V_ALMCATGE.codcta', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.codcta', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.codcta', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.codcta')
DBSetProp('V_ALMCATGE.codcta', 'Field', 'DataType', "C(8)")
* Props for the V_ALMCATGE.ctac2x field.
DBSetProp('V_ALMCATGE.ctac2x', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.ctac2x', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.ctac2x', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.ctac2x')
DBSetProp('V_ALMCATGE.ctac2x', 'Field', 'DataType', "C(8)")
* Props for the V_ALMCATGE.ctac33 field.
DBSetProp('V_ALMCATGE.ctac33', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.ctac33', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.ctac33', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.ctac33')
DBSetProp('V_ALMCATGE.ctac33', 'Field', 'DataType', "C(8)")
* Props for the V_ALMCATGE.ctac70 field.
DBSetProp('V_ALMCATGE.ctac70', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.ctac70', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.ctac70', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.ctac70')
DBSetProp('V_ALMCATGE.ctac70', 'Field', 'DataType', "C(8)")
* Props for the V_ALMCATGE.ctac71 field.
DBSetProp('V_ALMCATGE.ctac71', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.ctac71', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.ctac71', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.ctac71')
DBSetProp('V_ALMCATGE.ctac71', 'Field', 'DataType', "C(8)")
* Props for the V_ALMCATGE.ctac60 field.
DBSetProp('V_ALMCATGE.ctac60', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.ctac60', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.ctac60', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.ctac60')
DBSetProp('V_ALMCATGE.ctac60', 'Field', 'DataType', "C(8)")
* Props for the V_ALMCATGE.ctac61 field.
DBSetProp('V_ALMCATGE.ctac61', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.ctac61', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.ctac61', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.ctac61')
DBSetProp('V_ALMCATGE.ctac61', 'Field', 'DataType', "C(8)")
* Props for the V_ALMCATGE.ctac61c field.
DBSetProp('V_ALMCATGE.ctac61c', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.ctac61c', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.ctac61c', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.ctac61c')
DBSetProp('V_ALMCATGE.ctac61c', 'Field', 'DataType', "C(8)")
* Props for the V_ALMCATGE.ctac16 field.
DBSetProp('V_ALMCATGE.ctac16', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.ctac16', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.ctac16', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.ctac16')
DBSetProp('V_ALMCATGE.ctac16', 'Field', 'DataType', "C(8)")
* Props for the V_ALMCATGE.ctac69 field.
DBSetProp('V_ALMCATGE.ctac69', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.ctac69', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.ctac69', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.ctac69')
DBSetProp('V_ALMCATGE.ctac69', 'Field', 'DataType', "C(8)")
* Props for the V_ALMCATGE.undequ field.
DBSetProp('V_ALMCATGE.undequ', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.undequ', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.undequ', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.undequ')
DBSetProp('V_ALMCATGE.undequ', 'Field', 'DataType', "N(14,4)")
* Props for the V_ALMCATGE.desequ field.
DBSetProp('V_ALMCATGE.desequ', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.desequ', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.desequ', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.desequ')
DBSetProp('V_ALMCATGE.desequ', 'Field', 'DataType', "C(20)")
* Props for the V_ALMCATGE.facvta field.
DBSetProp('V_ALMCATGE.facvta', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.facvta', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.facvta', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.facvta')
DBSetProp('V_ALMCATGE.facvta', 'Field', 'DataType', "N(9,4)")
* Props for the V_ALMCATGE.stk01 field.
DBSetProp('V_ALMCATGE.stk01', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.stk01', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.stk01', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.stk01')
DBSetProp('V_ALMCATGE.stk01', 'Field', 'DataType', "N(14,4)")
* Props for the V_ALMCATGE.stk02 field.
DBSetProp('V_ALMCATGE.stk02', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.stk02', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.stk02', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.stk02')
DBSetProp('V_ALMCATGE.stk02', 'Field', 'DataType', "N(14,4)")
* Props for the V_ALMCATGE.stk03 field.
DBSetProp('V_ALMCATGE.stk03', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.stk03', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.stk03', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.stk03')
DBSetProp('V_ALMCATGE.stk03', 'Field', 'DataType', "N(14,4)")
* Props for the V_ALMCATGE.stk04 field.
DBSetProp('V_ALMCATGE.stk04', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.stk04', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.stk04', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.stk04')
DBSetProp('V_ALMCATGE.stk04', 'Field', 'DataType', "N(14,4)")
* Props for the V_ALMCATGE.stk05 field.
DBSetProp('V_ALMCATGE.stk05', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.stk05', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.stk05', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.stk05')
DBSetProp('V_ALMCATGE.stk05', 'Field', 'DataType', "N(14,4)")
* Props for the V_ALMCATGE.stk06 field.
DBSetProp('V_ALMCATGE.stk06', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.stk06', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.stk06', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.stk06')
DBSetProp('V_ALMCATGE.stk06', 'Field', 'DataType', "N(14,4)")
* Props for the V_ALMCATGE.stk07 field.
DBSetProp('V_ALMCATGE.stk07', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.stk07', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.stk07', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.stk07')
DBSetProp('V_ALMCATGE.stk07', 'Field', 'DataType', "N(14,4)")
* Props for the V_ALMCATGE.stk08 field.
DBSetProp('V_ALMCATGE.stk08', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.stk08', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.stk08', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.stk08')
DBSetProp('V_ALMCATGE.stk08', 'Field', 'DataType', "N(14,4)")
* Props for the V_ALMCATGE.stk09 field.
DBSetProp('V_ALMCATGE.stk09', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.stk09', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.stk09', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.stk09')
DBSetProp('V_ALMCATGE.stk09', 'Field', 'DataType', "N(14,4)")
* Props for the V_ALMCATGE.stk10 field.
DBSetProp('V_ALMCATGE.stk10', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.stk10', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.stk10', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.stk10')
DBSetProp('V_ALMCATGE.stk10', 'Field', 'DataType', "N(14,4)")
* Props for the V_ALMCATGE.stk11 field.
DBSetProp('V_ALMCATGE.stk11', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.stk11', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.stk11', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.stk11')
DBSetProp('V_ALMCATGE.stk11', 'Field', 'DataType', "N(14,4)")
* Props for the V_ALMCATGE.stk12 field.
DBSetProp('V_ALMCATGE.stk12', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.stk12', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.stk12', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.stk12')
DBSetProp('V_ALMCATGE.stk12', 'Field', 'DataType', "N(14,4)")
* Props for the V_ALMCATGE.vmn01 field.
DBSetProp('V_ALMCATGE.vmn01', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.vmn01', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.vmn01', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.vmn01')
DBSetProp('V_ALMCATGE.vmn01', 'Field', 'DataType', "N(14,4)")
* Props for the V_ALMCATGE.vmn02 field.
DBSetProp('V_ALMCATGE.vmn02', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.vmn02', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.vmn02', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.vmn02')
DBSetProp('V_ALMCATGE.vmn02', 'Field', 'DataType', "N(14,4)")
* Props for the V_ALMCATGE.vmn03 field.
DBSetProp('V_ALMCATGE.vmn03', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.vmn03', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.vmn03', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.vmn03')
DBSetProp('V_ALMCATGE.vmn03', 'Field', 'DataType', "N(14,4)")
* Props for the V_ALMCATGE.vmn04 field.
DBSetProp('V_ALMCATGE.vmn04', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.vmn04', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.vmn04', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.vmn04')
DBSetProp('V_ALMCATGE.vmn04', 'Field', 'DataType', "N(14,4)")
* Props for the V_ALMCATGE.vmn05 field.
DBSetProp('V_ALMCATGE.vmn05', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.vmn05', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.vmn05', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.vmn05')
DBSetProp('V_ALMCATGE.vmn05', 'Field', 'DataType', "N(14,4)")
* Props for the V_ALMCATGE.vmn06 field.
DBSetProp('V_ALMCATGE.vmn06', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.vmn06', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.vmn06', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.vmn06')
DBSetProp('V_ALMCATGE.vmn06', 'Field', 'DataType', "N(14,4)")
* Props for the V_ALMCATGE.vmn07 field.
DBSetProp('V_ALMCATGE.vmn07', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.vmn07', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.vmn07', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.vmn07')
DBSetProp('V_ALMCATGE.vmn07', 'Field', 'DataType', "N(14,4)")
* Props for the V_ALMCATGE.vmn08 field.
DBSetProp('V_ALMCATGE.vmn08', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.vmn08', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.vmn08', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.vmn08')
DBSetProp('V_ALMCATGE.vmn08', 'Field', 'DataType', "N(14,4)")
* Props for the V_ALMCATGE.vmn09 field.
DBSetProp('V_ALMCATGE.vmn09', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.vmn09', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.vmn09', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.vmn09')
DBSetProp('V_ALMCATGE.vmn09', 'Field', 'DataType', "N(14,4)")
* Props for the V_ALMCATGE.vmn10 field.
DBSetProp('V_ALMCATGE.vmn10', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.vmn10', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.vmn10', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.vmn10')
DBSetProp('V_ALMCATGE.vmn10', 'Field', 'DataType', "N(14,4)")
* Props for the V_ALMCATGE.vmn11 field.
DBSetProp('V_ALMCATGE.vmn11', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.vmn11', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.vmn11', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.vmn11')
DBSetProp('V_ALMCATGE.vmn11', 'Field', 'DataType', "N(14,4)")
* Props for the V_ALMCATGE.vmn12 field.
DBSetProp('V_ALMCATGE.vmn12', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.vmn12', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.vmn12', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.vmn12')
DBSetProp('V_ALMCATGE.vmn12', 'Field', 'DataType', "N(14,4)")
* Props for the V_ALMCATGE.vus01 field.
DBSetProp('V_ALMCATGE.vus01', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.vus01', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.vus01', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.vus01')
DBSetProp('V_ALMCATGE.vus01', 'Field', 'DataType', "N(14,4)")
* Props for the V_ALMCATGE.vus02 field.
DBSetProp('V_ALMCATGE.vus02', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.vus02', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.vus02', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.vus02')
DBSetProp('V_ALMCATGE.vus02', 'Field', 'DataType', "N(14,4)")
* Props for the V_ALMCATGE.vus03 field.
DBSetProp('V_ALMCATGE.vus03', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.vus03', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.vus03', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.vus03')
DBSetProp('V_ALMCATGE.vus03', 'Field', 'DataType', "N(14,4)")
* Props for the V_ALMCATGE.vus04 field.
DBSetProp('V_ALMCATGE.vus04', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.vus04', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.vus04', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.vus04')
DBSetProp('V_ALMCATGE.vus04', 'Field', 'DataType', "N(14,4)")
* Props for the V_ALMCATGE.vus05 field.
DBSetProp('V_ALMCATGE.vus05', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.vus05', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.vus05', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.vus05')
DBSetProp('V_ALMCATGE.vus05', 'Field', 'DataType', "N(14,4)")
* Props for the V_ALMCATGE.vus06 field.
DBSetProp('V_ALMCATGE.vus06', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.vus06', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.vus06', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.vus06')
DBSetProp('V_ALMCATGE.vus06', 'Field', 'DataType', "N(14,4)")
* Props for the V_ALMCATGE.vus07 field.
DBSetProp('V_ALMCATGE.vus07', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.vus07', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.vus07', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.vus07')
DBSetProp('V_ALMCATGE.vus07', 'Field', 'DataType', "N(14,4)")
* Props for the V_ALMCATGE.vus08 field.
DBSetProp('V_ALMCATGE.vus08', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.vus08', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.vus08', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.vus08')
DBSetProp('V_ALMCATGE.vus08', 'Field', 'DataType', "N(14,4)")
* Props for the V_ALMCATGE.vus09 field.
DBSetProp('V_ALMCATGE.vus09', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.vus09', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.vus09', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.vus09')
DBSetProp('V_ALMCATGE.vus09', 'Field', 'DataType', "N(14,4)")
* Props for the V_ALMCATGE.vus10 field.
DBSetProp('V_ALMCATGE.vus10', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.vus10', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.vus10', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.vus10')
DBSetProp('V_ALMCATGE.vus10', 'Field', 'DataType', "N(14,4)")
* Props for the V_ALMCATGE.vus11 field.
DBSetProp('V_ALMCATGE.vus11', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.vus11', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.vus11', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.vus11')
DBSetProp('V_ALMCATGE.vus11', 'Field', 'DataType', "N(14,4)")
* Props for the V_ALMCATGE.vus12 field.
DBSetProp('V_ALMCATGE.vus12', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.vus12', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.vus12', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.vus12')
DBSetProp('V_ALMCATGE.vus12', 'Field', 'DataType', "N(14,4)")
* Props for the V_ALMCATGE.ps01 field.
DBSetProp('V_ALMCATGE.ps01', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.ps01', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.ps01', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.ps01')
DBSetProp('V_ALMCATGE.ps01', 'Field', 'DataType', "N(12,4)")
* Props for the V_ALMCATGE.ps02 field.
DBSetProp('V_ALMCATGE.ps02', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.ps02', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.ps02', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.ps02')
DBSetProp('V_ALMCATGE.ps02', 'Field', 'DataType', "N(12,4)")
* Props for the V_ALMCATGE.ps03 field.
DBSetProp('V_ALMCATGE.ps03', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.ps03', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.ps03', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.ps03')
DBSetProp('V_ALMCATGE.ps03', 'Field', 'DataType', "N(12,4)")
* Props for the V_ALMCATGE.ps04 field.
DBSetProp('V_ALMCATGE.ps04', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.ps04', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.ps04', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.ps04')
DBSetProp('V_ALMCATGE.ps04', 'Field', 'DataType', "N(12,4)")
* Props for the V_ALMCATGE.ps05 field.
DBSetProp('V_ALMCATGE.ps05', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.ps05', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.ps05', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.ps05')
DBSetProp('V_ALMCATGE.ps05', 'Field', 'DataType', "N(12,4)")
* Props for the V_ALMCATGE.ps06 field.
DBSetProp('V_ALMCATGE.ps06', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.ps06', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.ps06', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.ps06')
DBSetProp('V_ALMCATGE.ps06', 'Field', 'DataType', "N(12,4)")
* Props for the V_ALMCATGE.ps07 field.
DBSetProp('V_ALMCATGE.ps07', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.ps07', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.ps07', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.ps07')
DBSetProp('V_ALMCATGE.ps07', 'Field', 'DataType', "N(12,4)")
* Props for the V_ALMCATGE.ps08 field.
DBSetProp('V_ALMCATGE.ps08', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.ps08', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.ps08', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.ps08')
DBSetProp('V_ALMCATGE.ps08', 'Field', 'DataType', "N(12,4)")
* Props for the V_ALMCATGE.ps09 field.
DBSetProp('V_ALMCATGE.ps09', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.ps09', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.ps09', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.ps09')
DBSetProp('V_ALMCATGE.ps09', 'Field', 'DataType', "N(12,4)")
* Props for the V_ALMCATGE.ps10 field.
DBSetProp('V_ALMCATGE.ps10', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.ps10', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.ps10', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.ps10')
DBSetProp('V_ALMCATGE.ps10', 'Field', 'DataType', "N(12,4)")
* Props for the V_ALMCATGE.ps11 field.
DBSetProp('V_ALMCATGE.ps11', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.ps11', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.ps11', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.ps11')
DBSetProp('V_ALMCATGE.ps11', 'Field', 'DataType', "N(12,4)")
* Props for the V_ALMCATGE.ps12 field.
DBSetProp('V_ALMCATGE.ps12', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.ps12', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.ps12', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.ps12')
DBSetProp('V_ALMCATGE.ps12', 'Field', 'DataType', "N(12,4)")
* Props for the V_ALMCATGE.pd01 field.
DBSetProp('V_ALMCATGE.pd01', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.pd01', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.pd01', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.pd01')
DBSetProp('V_ALMCATGE.pd01', 'Field', 'DataType', "N(12,4)")
* Props for the V_ALMCATGE.pd02 field.
DBSetProp('V_ALMCATGE.pd02', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.pd02', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.pd02', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.pd02')
DBSetProp('V_ALMCATGE.pd02', 'Field', 'DataType', "N(12,4)")
* Props for the V_ALMCATGE.pd03 field.
DBSetProp('V_ALMCATGE.pd03', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.pd03', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.pd03', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.pd03')
DBSetProp('V_ALMCATGE.pd03', 'Field', 'DataType', "N(12,4)")
* Props for the V_ALMCATGE.pd04 field.
DBSetProp('V_ALMCATGE.pd04', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.pd04', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.pd04', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.pd04')
DBSetProp('V_ALMCATGE.pd04', 'Field', 'DataType', "N(12,4)")
* Props for the V_ALMCATGE.pd05 field.
DBSetProp('V_ALMCATGE.pd05', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.pd05', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.pd05', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.pd05')
DBSetProp('V_ALMCATGE.pd05', 'Field', 'DataType', "N(12,4)")
* Props for the V_ALMCATGE.pd06 field.
DBSetProp('V_ALMCATGE.pd06', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.pd06', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.pd06', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.pd06')
DBSetProp('V_ALMCATGE.pd06', 'Field', 'DataType', "N(12,4)")
* Props for the V_ALMCATGE.pd07 field.
DBSetProp('V_ALMCATGE.pd07', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.pd07', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.pd07', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.pd07')
DBSetProp('V_ALMCATGE.pd07', 'Field', 'DataType', "N(12,4)")
* Props for the V_ALMCATGE.pd08 field.
DBSetProp('V_ALMCATGE.pd08', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.pd08', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.pd08', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.pd08')
DBSetProp('V_ALMCATGE.pd08', 'Field', 'DataType', "N(12,4)")
* Props for the V_ALMCATGE.pd09 field.
DBSetProp('V_ALMCATGE.pd09', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.pd09', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.pd09', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.pd09')
DBSetProp('V_ALMCATGE.pd09', 'Field', 'DataType', "N(12,4)")
* Props for the V_ALMCATGE.pd10 field.
DBSetProp('V_ALMCATGE.pd10', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.pd10', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.pd10', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.pd10')
DBSetProp('V_ALMCATGE.pd10', 'Field', 'DataType', "N(12,4)")
* Props for the V_ALMCATGE.pd11 field.
DBSetProp('V_ALMCATGE.pd11', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.pd11', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.pd11', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.pd11')
DBSetProp('V_ALMCATGE.pd11', 'Field', 'DataType', "N(12,4)")
* Props for the V_ALMCATGE.pd12 field.
DBSetProp('V_ALMCATGE.pd12', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.pd12', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.pd12', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.pd12')
DBSetProp('V_ALMCATGE.pd12', 'Field', 'DataType', "N(12,4)")
* Props for the V_ALMCATGE.codnew field.
DBSetProp('V_ALMCATGE.codnew', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.codnew', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.codnew', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.codnew')
DBSetProp('V_ALMCATGE.codnew', 'Field', 'DataType', "C(13)")
* Props for the V_ALMCATGE.lugent field.
DBSetProp('V_ALMCATGE.lugent', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.lugent', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.lugent', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.lugent')
DBSetProp('V_ALMCATGE.lugent', 'Field', 'DataType', "N(1)")
* Props for the V_ALMCATGE.coduser field.
DBSetProp('V_ALMCATGE.coduser', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.coduser', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.coduser', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.coduser')
DBSetProp('V_ALMCATGE.coduser', 'Field', 'DataType', "C(8)")
* Props for the V_ALMCATGE.fchhora field.
DBSetProp('V_ALMCATGE.fchhora', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.fchhora', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.fchhora', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.fchhora')
DBSetProp('V_ALMCATGE.fchhora', 'Field', 'DataType', "T")
* Props for the V_ALMCATGE.preve1 field.
DBSetProp('V_ALMCATGE.preve1', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.preve1', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.preve1', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.preve1')
DBSetProp('V_ALMCATGE.preve1', 'Field', 'DataType', "N(16,4)")
* Props for the V_ALMCATGE.preve2 field.
DBSetProp('V_ALMCATGE.preve2', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.preve2', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.preve2', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.preve2')
DBSetProp('V_ALMCATGE.preve2', 'Field', 'DataType', "N(16,4)")
* Props for the V_ALMCATGE.preve3 field.
DBSetProp('V_ALMCATGE.preve3', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.preve3', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.preve3', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.preve3')
DBSetProp('V_ALMCATGE.preve3', 'Field', 'DataType', "N(16,4)")
* Props for the V_ALMCATGE.prevn1 field.
DBSetProp('V_ALMCATGE.prevn1', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.prevn1', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.prevn1', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.prevn1')
DBSetProp('V_ALMCATGE.prevn1', 'Field', 'DataType', "N(16,4)")
* Props for the V_ALMCATGE.prevn2 field.
DBSetProp('V_ALMCATGE.prevn2', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.prevn2', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.prevn2', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.prevn2')
DBSetProp('V_ALMCATGE.prevn2', 'Field', 'DataType', "N(16,4)")
* Props for the V_ALMCATGE.prevn3 field.
DBSetProp('V_ALMCATGE.prevn3', 'Field', 'KeyField', .F.)
DBSetProp('V_ALMCATGE.prevn3', 'Field', 'Updatable', .T.)
DBSetProp('V_ALMCATGE.prevn3', 'Field', 'UpdateName', PsNomBDAno+'!almcatge.prevn3')
DBSetProp('V_ALMCATGE.prevn3', 'Field', 'DataType', "N(16,4)")
ENDFUNC
 
FUNCTION MakeView_V_NOTAS_EEFF_PRESUPUESTO
PARAMETERS PsNomcia,PsNomBDAno
***************** View setup for V_NOTAS_EEFF_PRESUPUESTO ***************

CREATE SQL VIEW "V_NOTAS_EEFF_PRESUPUESTO" ; 
   AS SELECT Cbdnpres.nota, Cbdnpres.codcta, Cbdmctas.nomcta, Cbdnpres.signo, Cbdnpres.forma, Cbdnpres.ctapre, ;
    Cbdnpres.codaux, Cbdtpres.nroitm, Cbdnpres.rubro FROM  &PsNomCia.!CBDTPRES  INNER JOIN  &PsNomCia.!CBDNPRES  ; 
    LEFT OUTER JOIN CBDMCTAS  ON  Cbdnpres.codcta = Cbdmctas.codcta  ON  Cbdtpres.rubro = Cbdnpres.rubro AND ;
     Cbdtpres.nota = Cbdnpres.nota ORDER BY Cbdnpres.rubro, Cbdnpres.nota

DBSetProp('V_NOTAS_EEFF_PRESUPUESTO', 'View', 'UpdateType', 1)
DBSetProp('V_NOTAS_EEFF_PRESUPUESTO', 'View', 'WhereType', 3)
DBSetProp('V_NOTAS_EEFF_PRESUPUESTO', 'View', 'FetchMemo', .T.)
DBSetProp('V_NOTAS_EEFF_PRESUPUESTO', 'View', 'SendUpdates', .F.)
DBSetProp('V_NOTAS_EEFF_PRESUPUESTO', 'View', 'UseMemoSize', 255)
DBSetProp('V_NOTAS_EEFF_PRESUPUESTO', 'View', 'FetchSize', 100)
DBSetProp('V_NOTAS_EEFF_PRESUPUESTO', 'View', 'MaxRecords', -1)
DBSetProp('V_NOTAS_EEFF_PRESUPUESTO', 'View', 'Tables', PsNomBDAno+'!cbdmctas,'+PsNomCia+'!cbdnpres,'+PsNomCia+'!cbdtpres')
DBSetProp('V_NOTAS_EEFF_PRESUPUESTO', 'View', 'Prepared', .F.)
DBSetProp('V_NOTAS_EEFF_PRESUPUESTO', 'View', 'CompareMemo', .T.)
DBSetProp('V_NOTAS_EEFF_PRESUPUESTO', 'View', 'FetchAsNeeded', .F.)
DBSetProp('V_NOTAS_EEFF_PRESUPUESTO', 'View', 'Comment', "")
DBSetProp('V_NOTAS_EEFF_PRESUPUESTO', 'View', 'BatchUpdateCount', 1)
DBSetProp('V_NOTAS_EEFF_PRESUPUESTO', 'View', 'ShareConnection', .F.)
DBSetProp('V_NOTAS_EEFF_PRESUPUESTO', 'View', 'AllowSimultaneousFetch', .F.)

*!* Field Level Properties for V_NOTAS_EEFF_PRESUPUESTO
* Props for the V_NOTAS_EEFF_PRESUPUESTO.nota field.
DBSetProp('V_NOTAS_EEFF_PRESUPUESTO.nota', 'Field', 'KeyField', .F.)
DBSetProp('V_NOTAS_EEFF_PRESUPUESTO.nota', 'Field', 'Updatable', .F.)
DBSetProp('V_NOTAS_EEFF_PRESUPUESTO.nota', 'Field', 'UpdateName', PsNomCia+'!cbdnpres.nota')
DBSetProp('V_NOTAS_EEFF_PRESUPUESTO.nota', 'Field', 'DataType', "C(3)")
* Props for the V_NOTAS_EEFF_PRESUPUESTO.codcta field.
DBSetProp('V_NOTAS_EEFF_PRESUPUESTO.codcta', 'Field', 'KeyField', .F.)
DBSetProp('V_NOTAS_EEFF_PRESUPUESTO.codcta', 'Field', 'Updatable', .F.)
DBSetProp('V_NOTAS_EEFF_PRESUPUESTO.codcta', 'Field', 'UpdateName', PsNomCia+'!cbdnpres.codcta')
DBSetProp('V_NOTAS_EEFF_PRESUPUESTO.codcta', 'Field', 'DataType', "C(8)")
* Props for the V_NOTAS_EEFF_PRESUPUESTO.nomcta field.
DBSetProp('V_NOTAS_EEFF_PRESUPUESTO.nomcta', 'Field', 'KeyField', .F.)
DBSetProp('V_NOTAS_EEFF_PRESUPUESTO.nomcta', 'Field', 'Updatable', .T.)
DBSetProp('V_NOTAS_EEFF_PRESUPUESTO.nomcta', 'Field', 'UpdateName', PsNomBDAno+'!cbdmctas.nomcta')
DBSetProp('V_NOTAS_EEFF_PRESUPUESTO.nomcta', 'Field', 'DataType', "C(60)")
* Props for the V_NOTAS_EEFF_PRESUPUESTO.signo field.
DBSetProp('V_NOTAS_EEFF_PRESUPUESTO.signo', 'Field', 'KeyField', .F.)
DBSetProp('V_NOTAS_EEFF_PRESUPUESTO.signo', 'Field', 'Updatable', .T.)
DBSetProp('V_NOTAS_EEFF_PRESUPUESTO.signo', 'Field', 'UpdateName', PsNomCia+'!cbdnpres.signo')
DBSetProp('V_NOTAS_EEFF_PRESUPUESTO.signo', 'Field', 'DataType', "C(1)")
* Props for the V_NOTAS_EEFF_PRESUPUESTO.forma field.
DBSetProp('V_NOTAS_EEFF_PRESUPUESTO.forma', 'Field', 'KeyField', .F.)
DBSetProp('V_NOTAS_EEFF_PRESUPUESTO.forma', 'Field', 'Updatable', .T.)
DBSetProp('V_NOTAS_EEFF_PRESUPUESTO.forma', 'Field', 'UpdateName', PsNomCia+'!cbdnpres.forma')
DBSetProp('V_NOTAS_EEFF_PRESUPUESTO.forma', 'Field', 'DataType', "C(1)")
* Props for the V_NOTAS_EEFF_PRESUPUESTO.ctapre field.
DBSetProp('V_NOTAS_EEFF_PRESUPUESTO.ctapre', 'Field', 'KeyField', .F.)
DBSetProp('V_NOTAS_EEFF_PRESUPUESTO.ctapre', 'Field', 'Updatable', .T.)
DBSetProp('V_NOTAS_EEFF_PRESUPUESTO.ctapre', 'Field', 'UpdateName', PsNomCia+'!cbdnpres.ctapre')
DBSetProp('V_NOTAS_EEFF_PRESUPUESTO.ctapre', 'Field', 'DataType', "C(15)")
* Props for the V_NOTAS_EEFF_PRESUPUESTO.codaux field.
DBSetProp('V_NOTAS_EEFF_PRESUPUESTO.codaux', 'Field', 'KeyField', .F.)
DBSetProp('V_NOTAS_EEFF_PRESUPUESTO.codaux', 'Field', 'Updatable', .T.)
DBSetProp('V_NOTAS_EEFF_PRESUPUESTO.codaux', 'Field', 'UpdateName', PsNomCia+'!cbdnpres.codaux')
DBSetProp('V_NOTAS_EEFF_PRESUPUESTO.codaux', 'Field', 'DataType', "C(11)")
* Props for the V_NOTAS_EEFF_PRESUPUESTO.nroitm field.
DBSetProp('V_NOTAS_EEFF_PRESUPUESTO.nroitm', 'Field', 'KeyField', .F.)
DBSetProp('V_NOTAS_EEFF_PRESUPUESTO.nroitm', 'Field', 'Updatable', .T.)
DBSetProp('V_NOTAS_EEFF_PRESUPUESTO.nroitm', 'Field', 'UpdateName', PsNomCia+'!cbdtpres.nroitm')
DBSetProp('V_NOTAS_EEFF_PRESUPUESTO.nroitm', 'Field', 'DataType', "N(3)")
* Props for the V_NOTAS_EEFF_PRESUPUESTO.rubro field.
DBSetProp('V_NOTAS_EEFF_PRESUPUESTO.rubro', 'Field', 'KeyField', .F.)
DBSetProp('V_NOTAS_EEFF_PRESUPUESTO.rubro', 'Field', 'Updatable', .F.)
DBSetProp('V_NOTAS_EEFF_PRESUPUESTO.rubro', 'Field', 'UpdateName', PsNomCia+'!cbdnpres.rubro')
DBSetProp('V_NOTAS_EEFF_PRESUPUESTO.rubro', 'Field', 'DataType', "C(2)")
ENDFUNC
 

FUNCTION DisplayStatus(lcMessage)
WAIT WINDOW NOWAIT lcMessage
ENDFUNC
